{"ast":null,"code":"import React,{useState,useContext,useRef,useEffect}from\"react\";import{signInWithEmailAndPassword}from\"firebase/auth\";import{useNavigate,useLocation}from\"react-router-dom\";import{toast}from\"react-toastify\";import{UserContext}from\"../../context/userContext\";import LoadingPage from\"../../pages/loading\";import FirstLoginComponent from\"./firstLogin\";import Logo from\"../../logo.svg\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Login=_ref=>{let{onLoginSuccess}=_ref;const[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[error,setError]=useState(\"\");const[loading,setLoading]=useState(false);const[isFirstLogin,setIsFirstLogin]=useState(false);const navigate=useNavigate();const location=useLocation();const{auth,isAuthenticated}=useContext(UserContext);const hasShownToast=useRef(false);// Prevenir múltiplos toasts\nconst isLoginInProgress=useRef(false);// Prevenir re-execução do login\n// Reset do componente quando o usuário faz logout\nuseEffect(()=>{if(!isAuthenticated){hasShownToast.current=false;isLoginInProgress.current=false;setEmail(\"\");setPassword(\"\");setError(\"\");setLoading(false);setIsFirstLogin(false);}},[isAuthenticated]);const handleSubmit=async event=>{event.preventDefault();// Verificar se já está carregando para evitar submissões duplas\nif(loading||isLoginInProgress.current){return;}isLoginInProgress.current=true;setLoading(true);setError(\"\");try{const userCredential=await signInWithEmailAndPassword(auth,email,password);const user=userCredential.user;const token=await user.getIdToken();const response=await fetch(\"http://192.168.1.219:8080/users/verifyTokenAndGetUserInfo\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({token})});const data=await response.json();if(response.ok){var _location$state,_location$state$from;// Verificar se é o primeiro login\nif(data.isFirstLogin){setIsFirstLogin(true);setLoading(false);isLoginInProgress.current=false;return;// Não continuar com o login normal\n}// Login bem-sucedido - só mostrar toast se foi um login real, não um redirecionamento\nif(!hasShownToast.current){hasShownToast.current=true;toast.success(\"Login bem-sucedido!\");}onLoginSuccess(data);const redirectPath=((_location$state=location.state)===null||_location$state===void 0?void 0:(_location$state$from=_location$state.from)===null||_location$state$from===void 0?void 0:_location$state$from.pathname)||\"/file\";navigate(redirectPath,{replace:true});}else{setError(data.message||\"Erro ao verificar token\");toast.error(\"Erro ao verificar token\");// Se o token não for válido, fazer logout do Firebase\nawait auth.signOut();}}catch(error){console.error(\"Erro no login:\",error);setError(\"Erro ao fazer login: \"+error.message);toast.error(\"Erro ao fazer login: \"+error.message);}finally{setLoading(false);isLoginInProgress.current=false;}};const handleFirstLoginComplete=()=>{setIsFirstLogin(false);hasShownToast.current=false;// Reset toast flag\nisLoginInProgress.current=false;// Reset login flag\n// Redirecionar para a página de login novamente\ntoast.success(\"Senha alterada com sucesso! Faça login novamente.\");};// Se for primeiro login, mostrar o componente FirstLogin\nif(isFirstLogin){return/*#__PURE__*/_jsx(FirstLoginComponent,{onComplete:handleFirstLoginComplete});}return/*#__PURE__*/_jsx(_Fragment,{children:loading?/*#__PURE__*/_jsx(LoadingPage,{}):/*#__PURE__*/_jsxs(\"div\",{className:\"file-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"img\",{src:Logo,alt:\"Logo\",className:\"logo\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"title\",children:\"Magna ISO90001\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"file-panel\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"auth-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"auth-field\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"auth-label\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"auth-input\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-field\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"auth-label\",children:\"Senha:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"auth-input\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"auth-error\",children:error}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"auth-button\",disabled:loading,children:\"Entrar\"})]})})]})});};export default Login;","map":{"version":3,"names":["React","useState","useContext","useRef","useEffect","signInWithEmailAndPassword","useNavigate","useLocation","toast","UserContext","LoadingPage","FirstLoginComponent","Logo","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Login","_ref","onLoginSuccess","email","setEmail","password","setPassword","error","setError","loading","setLoading","isFirstLogin","setIsFirstLogin","navigate","location","auth","isAuthenticated","hasShownToast","isLoginInProgress","current","handleSubmit","event","preventDefault","userCredential","user","token","getIdToken","response","fetch","method","headers","body","JSON","stringify","data","json","ok","_location$state","_location$state$from","success","redirectPath","state","from","pathname","replace","message","signOut","console","handleFirstLoginComplete","onComplete","children","className","src","alt","onSubmit","type","value","onChange","e","target","required","disabled"],"sources":["C:/Users/António Gonçalves/Desktop/Magna-ISO9001-Frontend/src/components/Auth/login.jsx"],"sourcesContent":["import React, { useState, useContext, useRef, useEffect } from \"react\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport LoadingPage from \"../../pages/loading\";\r\nimport FirstLoginComponent from \"./firstLogin\";\r\nimport Logo from \"../../logo.svg\";\r\n\r\nconst Login = ({onLoginSuccess}) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [isFirstLogin, setIsFirstLogin] = useState(false);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const { auth, isAuthenticated } = useContext(UserContext);\r\n    const hasShownToast = useRef(false); // Prevenir múltiplos toasts\r\n    const isLoginInProgress = useRef(false); // Prevenir re-execução do login\r\n    \r\n    // Reset do componente quando o usuário faz logout\r\n    useEffect(() => {\r\n        if (!isAuthenticated) {\r\n            hasShownToast.current = false;\r\n            isLoginInProgress.current = false;\r\n            setEmail(\"\");\r\n            setPassword(\"\");\r\n            setError(\"\");\r\n            setLoading(false);\r\n            setIsFirstLogin(false);\r\n        }\r\n    }, [isAuthenticated]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        // Verificar se já está carregando para evitar submissões duplas\r\n        if (loading || isLoginInProgress.current) {\r\n            return;\r\n        }\r\n        \r\n        isLoginInProgress.current = true;\r\n        setLoading(true);\r\n        setError(\"\");\r\n        \r\n        try {\r\n            const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n            const user = userCredential.user;\r\n            const token = await user.getIdToken();\r\n            \r\n            const response = await fetch(\"http://192.168.1.219:8080/users/verifyTokenAndGetUserInfo\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ token }),\r\n            });\r\n            \r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                // Verificar se é o primeiro login\r\n                if (data.isFirstLogin) {\r\n                    setIsFirstLogin(true);\r\n                    setLoading(false);\r\n                    isLoginInProgress.current = false;\r\n                    return; // Não continuar com o login normal\r\n                }\r\n                \r\n                // Login bem-sucedido - só mostrar toast se foi um login real, não um redirecionamento\r\n                if (!hasShownToast.current) {\r\n                    hasShownToast.current = true;\r\n                    toast.success(\"Login bem-sucedido!\");\r\n                }\r\n                \r\n                onLoginSuccess(data);\r\n                const redirectPath = location.state?.from?.pathname || \"/file\";\r\n                navigate(redirectPath, { replace: true });\r\n            } else {\r\n                setError(data.message || \"Erro ao verificar token\");\r\n                toast.error(\"Erro ao verificar token\");\r\n                // Se o token não for válido, fazer logout do Firebase\r\n                await auth.signOut();\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(\"Erro no login:\", error);\r\n            setError(\"Erro ao fazer login: \" + error.message);\r\n            toast.error(\"Erro ao fazer login: \" + error.message);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n            isLoginInProgress.current = false;\r\n        }\r\n    }\r\n\r\n    const handleFirstLoginComplete = () => {\r\n        setIsFirstLogin(false);\r\n        hasShownToast.current = false; // Reset toast flag\r\n        isLoginInProgress.current = false; // Reset login flag\r\n        // Redirecionar para a página de login novamente\r\n        toast.success(\"Senha alterada com sucesso! Faça login novamente.\");\r\n    };\r\n\r\n    // Se for primeiro login, mostrar o componente FirstLogin\r\n    if (isFirstLogin) {\r\n        return <FirstLoginComponent onComplete={handleFirstLoginComplete} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <LoadingPage />\r\n            ) : (\r\n                <div className=\"file-container\">\r\n                    <div className=\"header\">\r\n                        <img src={Logo} alt=\"Logo\" className=\"logo\" />\r\n                        <h2 className=\"title\">Magna ISO90001</h2>\r\n                    </div>\r\n                    <div className=\"file-panel\">\r\n                        <form onSubmit={handleSubmit} className=\"auth-form\">\r\n                            <div className=\"auth-field\">\r\n                                <label className=\"auth-label\">Email:</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    className=\"auth-input\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"auth-field\">\r\n                                <label className=\"auth-label\">Senha:</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"auth-input\"\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            {error && <div className=\"auth-error\">{error}</div>}\r\n                            <button type=\"submit\" className=\"auth-button\" disabled={loading}>\r\n                                Entrar\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}