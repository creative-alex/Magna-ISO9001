{"ast":null,"code":"import React,{useState,useContext}from\"react\";import{UserContext}from\"../../context/userContext\";import{useNavigate}from\"react-router-dom\";import{toast}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.css\";import LogoutButton from\"./logout\";import Logo from\"../../logo.svg\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FirstLoginComponent=_ref=>{let{onComplete}=_ref;const[newPassword,setNewPassword]=useState(\"\");const[confirmPassword,setConfirmPassword]=useState(\"\");const{userEmail}=useContext(UserContext);const navigate=useNavigate();const handlePasswordChange=async()=>{try{if(!userEmail){throw new Error(\"Erro: colaborador não encontrado.\");}if(newPassword.length<6){throw new Error(\"A senha deve ter pelo menos 6 caracteres.\");}if(newPassword!==confirmPassword){throw new Error(\"As senhas não coincidem.\");}const response=await fetch(\"http://localhost:3001/auth/update-first-login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({userEmail,newPassword})});const data=await response.json();if(!response.ok)throw new Error(data.message||\"Erro ao atualizar senha\");// Exibe uma mensagem de sucesso\ntoast.success(\"Senha alterada com sucesso! Faça login novamente.\");// Adiciona um atraso antes de chamar onComplete\nsetTimeout(()=>{// Remove o colaborador do localStorage\nlocalStorage.removeItem(\"user\");// Chama a função onComplete se fornecida\nif(onComplete){onComplete();}else{navigate(\"/\");}},3000);// 3 segundos de atraso\n}catch(error){toast.error(error.message);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"file-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"img\",{src:Logo,alt:\"Logo\",className:\"logo\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"title\",children:\"Magna ISO90001\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-panel\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"panel-title\",children:\"Alterar Senha\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"auth-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"auth-field\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"auth-label\",children:\"Nova Senha:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Nova Senha\",value:newPassword,onChange:e=>setNewPassword(e.target.value),className:\"auth-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-field\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"auth-label\",children:\"Confirme a Nova Senha:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Confirme a Nova Senha\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),className:\"auth-input\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"auth-button\",onClick:handlePasswordChange,children:\"Confirmar\"})]})]})]});};export default FirstLoginComponent;","map":{"version":3,"names":["React","useState","useContext","UserContext","useNavigate","toast","LogoutButton","Logo","jsx","_jsx","jsxs","_jsxs","FirstLoginComponent","_ref","onComplete","newPassword","setNewPassword","confirmPassword","setConfirmPassword","userEmail","navigate","handlePasswordChange","Error","length","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","success","setTimeout","localStorage","removeItem","error","className","children","src","alt","type","placeholder","value","onChange","e","target","onClick"],"sources":["C:/Users/António Gonçalves/Desktop/Magna-ISO9001-Frontend/src/components/Auth/firstLogin.jsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport LogoutButton from \"./logout\";\r\nimport Logo from \"../../logo.svg\";\r\n\r\nconst FirstLoginComponent = ({ onComplete }) => {\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const { userEmail } = useContext(UserContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handlePasswordChange = async () => {\r\n    try {\r\n      if (!userEmail) {\r\n        throw new Error(\"Erro: colaborador não encontrado.\");\r\n      }\r\n  \r\n      if (newPassword.length < 6) {\r\n        throw new Error(\"A senha deve ter pelo menos 6 caracteres.\");\r\n      }\r\n  \r\n      if (newPassword !== confirmPassword) {\r\n        throw new Error(\"As senhas não coincidem.\");\r\n      }\r\n  \r\n      const response = await fetch(`http://localhost:3001/auth/update-first-login`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ userEmail, newPassword }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n      if (!response.ok) throw new Error(data.message || \"Erro ao atualizar senha\");\r\n  \r\n      // Exibe uma mensagem de sucesso\r\n      toast.success(\"Senha alterada com sucesso! Faça login novamente.\");\r\n  \r\n      // Adiciona um atraso antes de chamar onComplete\r\n      setTimeout(() => {\r\n        // Remove o colaborador do localStorage\r\n        localStorage.removeItem(\"user\");\r\n        // Chama a função onComplete se fornecida\r\n        if (onComplete) {\r\n          onComplete();\r\n        } else {\r\n          navigate(\"/\");\r\n        }\r\n      }, 3000); // 3 segundos de atraso\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-container\">\r\n      <div className=\"header\">\r\n        <img src={Logo} alt=\"Logo\" className=\"logo\" />\r\n        <h2 className=\"title\">Magna ISO90001</h2>\r\n      </div>\r\n      <div className=\"file-panel\">\r\n        <div className=\"panel-title\">Alterar Senha</div>\r\n        <form className=\"auth-form\">\r\n          <div className=\"auth-field\">\r\n            <label className=\"auth-label\">Nova Senha:</label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Nova Senha\"\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n              className=\"auth-input\"\r\n            />\r\n          </div>\r\n          <div className=\"auth-field\">\r\n            <label className=\"auth-label\">Confirme a Nova Senha:</label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirme a Nova Senha\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              className=\"auth-input\"\r\n            />\r\n          </div>\r\n          <button type=\"button\" className=\"auth-button\" onClick={handlePasswordChange}>\r\n            Confirmar\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FirstLoginComponent;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CACnD,OAASC,WAAW,KAAQ,2BAA2B,CACvD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,KAAK,KAAQ,gBAAgB,CACtC,MAAO,uCAAuC,CAC9C,MAAO,CAAAC,YAAY,KAAM,UAAU,CACnC,MAAO,CAAAC,IAAI,KAAM,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,KAAM,CAAAC,mBAAmB,CAAGC,IAAA,EAAoB,IAAnB,CAAEC,UAAW,CAAC,CAAAD,IAAA,CACzC,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACgB,eAAe,CAAEC,kBAAkB,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAAEkB,SAAU,CAAC,CAAGjB,UAAU,CAACC,WAAW,CAAC,CAC7C,KAAM,CAAAiB,QAAQ,CAAGhB,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAiB,oBAAoB,CAAG,KAAAA,CAAA,GAAY,CACvC,GAAI,CACF,GAAI,CAACF,SAAS,CAAE,CACd,KAAM,IAAI,CAAAG,KAAK,CAAC,mCAAmC,CAAC,CACtD,CAEA,GAAIP,WAAW,CAACQ,MAAM,CAAG,CAAC,CAAE,CAC1B,KAAM,IAAI,CAAAD,KAAK,CAAC,2CAA2C,CAAC,CAC9D,CAEA,GAAIP,WAAW,GAAKE,eAAe,CAAE,CACnC,KAAM,IAAI,CAAAK,KAAK,CAAC,0BAA0B,CAAC,CAC7C,CAEA,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAC,KAAK,iDAAkD,CAC5EC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEX,SAAS,CAAEJ,WAAY,CAAC,CACjD,CAAC,CAAC,CAEF,KAAM,CAAAgB,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClC,GAAI,CAACR,QAAQ,CAACS,EAAE,CAAE,KAAM,IAAI,CAAAX,KAAK,CAACS,IAAI,CAACG,OAAO,EAAI,yBAAyB,CAAC,CAE5E;AACA7B,KAAK,CAAC8B,OAAO,CAAC,mDAAmD,CAAC,CAElE;AACAC,UAAU,CAAC,IAAM,CACf;AACAC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC,CAC/B;AACA,GAAIxB,UAAU,CAAE,CACdA,UAAU,CAAC,CAAC,CACd,CAAC,IAAM,CACLM,QAAQ,CAAC,GAAG,CAAC,CACf,CACF,CAAC,CAAE,IAAI,CAAC,CAAE;AACZ,CAAE,MAAOmB,KAAK,CAAE,CACdlC,KAAK,CAACkC,KAAK,CAACA,KAAK,CAACL,OAAO,CAAC,CAC5B,CACF,CAAC,CAED,mBACEvB,KAAA,QAAK6B,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B9B,KAAA,QAAK6B,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACrBhC,IAAA,QAAKiC,GAAG,CAAEnC,IAAK,CAACoC,GAAG,CAAC,MAAM,CAACH,SAAS,CAAC,MAAM,CAAE,CAAC,cAC9C/B,IAAA,OAAI+B,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAC,gBAAc,CAAI,CAAC,EACtC,CAAC,cACN9B,KAAA,QAAK6B,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBhC,IAAA,QAAK+B,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,eAAa,CAAK,CAAC,cAChD9B,KAAA,SAAM6B,SAAS,CAAC,WAAW,CAAAC,QAAA,eACzB9B,KAAA,QAAK6B,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBhC,IAAA,UAAO+B,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,aAAW,CAAO,CAAC,cACjDhC,IAAA,UACEmC,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,YAAY,CACxBC,KAAK,CAAE/B,WAAY,CACnBgC,QAAQ,CAAGC,CAAC,EAAKhC,cAAc,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAChDN,SAAS,CAAC,YAAY,CACvB,CAAC,EACC,CAAC,cACN7B,KAAA,QAAK6B,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBhC,IAAA,UAAO+B,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,wBAAsB,CAAO,CAAC,cAC5DhC,IAAA,UACEmC,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,uBAAuB,CACnCC,KAAK,CAAE7B,eAAgB,CACvB8B,QAAQ,CAAGC,CAAC,EAAK9B,kBAAkB,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACpDN,SAAS,CAAC,YAAY,CACvB,CAAC,EACC,CAAC,cACN/B,IAAA,WAAQmC,IAAI,CAAC,QAAQ,CAACJ,SAAS,CAAC,aAAa,CAACU,OAAO,CAAE7B,oBAAqB,CAAAoB,QAAA,CAAC,WAE7E,CAAQ,CAAC,EACL,CAAC,EACJ,CAAC,EAEH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA7B,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}