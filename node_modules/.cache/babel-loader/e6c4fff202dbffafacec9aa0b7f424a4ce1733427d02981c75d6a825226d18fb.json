{"ast":null,"code":"import React from\"react\";import downloadIcon from\"../../icons/download.ico\";import{jsx as _jsx}from\"react/jsx-runtime\";const PdfPreviewButton=_ref=>{let{file,currentPath}=_ref;// Fun√ß√£o para carregar automaticamente a imagem PNG da empresa\nconst loadCompanyImage=async()=>{try{const response=await fetch('/c_comenius_cor.png');if(response.ok){const arrayBuffer=await response.arrayBuffer();console.log(\"‚úÖ Imagem da empresa carregada para preview\");return new Uint8Array(arrayBuffer);}else{console.warn(\"‚ö†Ô∏è Imagem da empresa n√£o encontrada para preview\");return null;}}catch(error){console.error(\"‚ùå Erro ao carregar imagem da empresa para preview:\",error);return null;}};const handlePreviewClick=async e=>{e.stopPropagation();// Evita trigger do onClick do div pai\ntry{const filePath=[...currentPath,file.name].join(\"/\");// Carregar a imagem PNG da empresa\nconst imageBytes=await loadCompanyImage();// Se est√° em subpasta de n√≠vel 2 ou mais (currentPath.length > 1), faz download direto\n// N√≠vel 0: pasta raiz, N√≠vel 1: primeira subpasta, N√≠vel 2+: subpastas dentro de subpastas\nif(currentPath.length>1){console.log(\"Ficheiro em subpasta profunda (n√≠vel 2+) - fazendo download direto:\",filePath);// Mostra feedback visual (opcional)\nconst button=e.target.closest('button');const originalTitle=button.title;button.title='A descarregar...';button.style.opacity='0.7';const response=await fetch('https://api9001.duckdns.org/files/download',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({path:encodeURIComponent(filePath)})});// Restaura o estado do bot√£o\nbutton.title=originalTitle;button.style.opacity='1';if(response.ok){const blob=await response.blob();// Cria um link tempor√°rio para download\nconst url=window.URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=file.name;document.body.appendChild(link);link.click();document.body.removeChild(link);window.URL.revokeObjectURL(url);}else{const errorText=await response.text();console.error(\"Erro ao fazer download:\",errorText);alert(\"Erro ao fazer download do ficheiro: \".concat(errorText));}return;}// 1. Primeiro, carrega os dados do PDF\nconst formDataResponse=await fetch(\"https://api9001.duckdns.org/files/pdf-form-data\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({filename:encodeURIComponent(filePath)})});if(!formDataResponse.ok){throw new Error(\"Erro ao carregar dados do PDF\");}const formData=await formDataResponse.json();// Determina o tipo de template baseado no nome do arquivo\nconst fileName=file.name;const isTemplate2=/^\\d/.test(fileName)&&!/^\\d{2}/.test(fileName);// Arquivos que come√ßam com 1 d√≠gito s√£o Template 2\n// 2. Processa os dados para o formato das tabelas\nconst{generateNonEditablePdf,generateNonEditablePdfTemplate2}=await import(\"../../utils/pdfGenerate\");if(isTemplate2){// Template 2 - Processar dados espec√≠ficos do template 2\n// Extrai dados espec√≠ficos do Template 2\nlet donoProcesso=formData['dono_processo']||'';let objetivoProcesso=formData['objetivo_processo']||'';let servicosEntrada=formData['servicos_entrada']||'';let servicoSaida=formData['servico_saida']||'';// Processa atividades (atividades_r*_c*)\nconst atividadesRows={};const indicadoresData=[];Object.keys(formData).forEach(key=>{if(key.startsWith('atividades_r')){const match=key.match(/atividades_r(\\d+)_c(\\d+)/);if(match){const row=parseInt(match[1])-1;// -1 porque come√ßa em r1\nconst col=parseInt(match[2])-1;// -1 porque come√ßa em c1\nif(!atividadesRows[row])atividadesRows[row]=[];atividadesRows[row][col]=formData[key]||'';}}else if(key.startsWith('indicadores_r')){const match=key.match(/indicadores_r(\\d+)/);if(match){const index=parseInt(match[1])-1;// -1 porque come√ßa em r1\nindicadoresData[index]=formData[key]||'';}}});// Converte atividades em array ordenado\nconst atividades=[];for(let i=0;i<10;i++){// M√°ximo de 10 linhas\nif(atividadesRows[i]){// Garante que cada linha tenha exatamente 6 colunas (Template 2)\nconst row=atividadesRows[i];while(row.length<6){row.push('');}atividades.push(row);}}// Garante que h√° pelo menos uma linha\nif(atividades.length===0){atividades.push(['','','','','','']);}// Garante que h√° pelo menos um indicador\nif(indicadoresData.length===0){indicadoresData.push('');}// 3. Gera o PDF n√£o edit√°vel do Template 2\nconst nonEditablePdfBytes=await generateNonEditablePdfTemplate2(atividades,donoProcesso,objetivoProcesso,indicadoresData,servicosEntrada,servicoSaida,\"Procedimento\",imageBytes,filePath);// 4. Abre o preview\nconst blob=new Blob([nonEditablePdfBytes],{type:\"application/pdf\"});const blobUrl=URL.createObjectURL(blob);window.open(blobUrl,\"_blank\");}else{// Template 1 - Procedimento existente\n// Converte os dados do formul√°rio em formato de tabela\n// Tabela principal (table2_*)\nconst mainTableData=[];const obsTableData=[];// Extrai dados da tabela principal\nconst mainRows={};const obsRows={};// Debug dos dados do formul√°rio\nconsole.log('üîç Dados do formul√°rio recebidos:',Object.keys(formData));Object.keys(formData).forEach(key=>{if(key.startsWith('table2_r')){const match=key.match(/table2_r(\\d+)_c(\\d+)/);if(match){const row=parseInt(match[1])-2;// -2 porque come√ßa em r2\nconst col=parseInt(match[2])-1;// -1 porque come√ßa em c1\nif(!mainRows[row])mainRows[row]=[];mainRows[row][col]=formData[key]||'';// Debug para documentos associados e instru√ß√µes\nif(col===3&&formData[key]){console.log(\"\\uD83D\\uDCC4 Documentos Associados linha \".concat(row,\":\"),formData[key]);}if(col===4&&formData[key]){console.log(\"\\uD83D\\uDCCB Instru\\xE7\\xF5es linha \".concat(row,\":\"),formData[key]);}}}else if(key.startsWith('table1_r')){const match=key.match(/table1_r(\\d+)/);if(match){const row=parseInt(match[1])-1;// -1 porque come√ßa em r1\nobsRows[row]=[formData[key]||''];// Debug para objetivos e outras se√ß√µes\nif(row===0&&formData[key]){console.log('üéØ Objetivos encontrados:',formData[key]);}console.log(\"\\uD83D\\uDCDD Se\\xE7\\xE3o \".concat(row+1,\":\"),formData[key]);}}});// Converte objetos em arrays ordenados\nfor(let i=0;i<20;i++){// M√°ximo de 20 linhas\nif(mainRows[i]){// Garante que cada linha tenha exatamente 5 colunas\nconst row=mainRows[i];while(row.length<5){row.push('');}mainTableData.push(row);}}for(let i=0;i<10;i++){// M√°ximo de 10 linhas para observa√ß√µes\nif(obsRows[i]){obsTableData.push(obsRows[i]);}}// Garante que h√° pelo menos uma linha de dados para evitar NaN\nif(mainTableData.length===0){mainTableData.push(['','','','','']);}if(obsTableData.length===0){obsTableData.push(['']);}// Headers do Template 1\nconst headers=['Fluxo\\ndas A√ß√µes','Descri√ß√£o','Respons√°vel','Documentos\\nAssociados','Instru√ß√µes\\nde Trabalho'];// 3. Gera o PDF n√£o edit√°vel do Template 1\nconst nonEditablePdfBytes=await generateNonEditablePdf(mainTableData,headers,obsTableData,\"Procedimento\",imageBytes,filePath);// 4. Abre o preview\nconst blob=new Blob([nonEditablePdfBytes],{type:\"application/pdf\"});const blobUrl=URL.createObjectURL(blob);window.open(blobUrl,\"_blank\");}}catch(error){console.error(\"Erro ao gerar preview:\",error);alert(\"Erro ao gerar preview do PDF. Tente novamente.\");}};return/*#__PURE__*/_jsx(\"button\",{onClick:handlePreviewClick,children:/*#__PURE__*/_jsx(\"img\",{src:downloadIcon,alt:currentPath.length>1?\"Download direto\":\"Preview PDF\",style:{width:'16px',height:'16px'},title:\" Download\"})});};export default PdfPreviewButton;","map":{"version":3,"names":["React","downloadIcon","jsx","_jsx","PdfPreviewButton","_ref","file","currentPath","loadCompanyImage","response","fetch","ok","arrayBuffer","console","log","Uint8Array","warn","error","handlePreviewClick","e","stopPropagation","filePath","name","join","imageBytes","length","button","target","closest","originalTitle","title","style","opacity","method","headers","body","JSON","stringify","path","encodeURIComponent","blob","url","window","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","errorText","text","alert","concat","formDataResponse","filename","Error","formData","json","fileName","isTemplate2","test","generateNonEditablePdf","generateNonEditablePdfTemplate2","donoProcesso","objetivoProcesso","servicosEntrada","servicoSaida","atividadesRows","indicadoresData","Object","keys","forEach","key","startsWith","match","row","parseInt","col","index","atividades","i","push","nonEditablePdfBytes","Blob","type","blobUrl","open","mainTableData","obsTableData","mainRows","obsRows","onClick","children","src","alt","width","height"],"sources":["C:/Users/alex_/Desktop/Magna-ISO9001/src/components/Buttons/pdfPreviewButton.jsx"],"sourcesContent":["import React from \"react\";\r\nimport downloadIcon from \"../../icons/download.ico\";\r\n\r\nconst PdfPreviewButton = ({ file, currentPath }) => {\r\n  // Fun√ß√£o para carregar automaticamente a imagem PNG da empresa\r\n  const loadCompanyImage = async () => {\r\n    try {\r\n      const response = await fetch('/c_comenius_cor.png');\r\n      if (response.ok) {\r\n        const arrayBuffer = await response.arrayBuffer();\r\n        console.log(\"‚úÖ Imagem da empresa carregada para preview\");\r\n        return new Uint8Array(arrayBuffer);\r\n      } else {\r\n        console.warn(\"‚ö†Ô∏è Imagem da empresa n√£o encontrada para preview\");\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"‚ùå Erro ao carregar imagem da empresa para preview:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handlePreviewClick = async (e) => {\r\n    e.stopPropagation(); // Evita trigger do onClick do div pai\r\n    try {\r\n      const filePath = [...currentPath, file.name].join(\"/\");\r\n      \r\n      // Carregar a imagem PNG da empresa\r\n      const imageBytes = await loadCompanyImage();\r\n      \r\n      // Se est√° em subpasta de n√≠vel 2 ou mais (currentPath.length > 1), faz download direto\r\n      // N√≠vel 0: pasta raiz, N√≠vel 1: primeira subpasta, N√≠vel 2+: subpastas dentro de subpastas\r\n      if (currentPath.length > 1) {\r\n        console.log(\"Ficheiro em subpasta profunda (n√≠vel 2+) - fazendo download direto:\", filePath);\r\n        \r\n        // Mostra feedback visual (opcional)\r\n        const button = e.target.closest('button');\r\n        const originalTitle = button.title;\r\n        button.title = 'A descarregar...';\r\n        button.style.opacity = '0.7';\r\n        \r\n        const response = await fetch('https://api9001.duckdns.org/files/download', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ path: encodeURIComponent(filePath) }),\r\n        });\r\n\r\n        // Restaura o estado do bot√£o\r\n        button.title = originalTitle;\r\n        button.style.opacity = '1';\r\n\r\n        if (response.ok) {\r\n          const blob = await response.blob();\r\n          \r\n          // Cria um link tempor√°rio para download\r\n          const url = window.URL.createObjectURL(blob);\r\n          const link = document.createElement('a');\r\n          link.href = url;\r\n          link.download = file.name;\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          window.URL.revokeObjectURL(url);\r\n        } else {\r\n          const errorText = await response.text();\r\n          console.error(\"Erro ao fazer download:\", errorText);\r\n          alert(`Erro ao fazer download do ficheiro: ${errorText}`);\r\n        }\r\n        return;\r\n      }\r\n      \r\n      // 1. Primeiro, carrega os dados do PDF\r\n      const formDataResponse = await fetch(\"https://api9001.duckdns.org/files/pdf-form-data\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ filename: encodeURIComponent(filePath) }),\r\n      });\r\n      \r\n      if (!formDataResponse.ok) {\r\n        throw new Error(\"Erro ao carregar dados do PDF\");\r\n      }\r\n      \r\n      const formData = await formDataResponse.json();\r\n      \r\n      // Determina o tipo de template baseado no nome do arquivo\r\n      const fileName = file.name;\r\n      const isTemplate2 = /^\\d/.test(fileName) && !/^\\d{2}/.test(fileName); // Arquivos que come√ßam com 1 d√≠gito s√£o Template 2\r\n      \r\n      // 2. Processa os dados para o formato das tabelas\r\n      const { generateNonEditablePdf, generateNonEditablePdfTemplate2 } = await import(\"../../utils/pdfGenerate\");\r\n      \r\n      if (isTemplate2) {\r\n        // Template 2 - Processar dados espec√≠ficos do template 2\r\n        \r\n        // Extrai dados espec√≠ficos do Template 2\r\n        let donoProcesso = formData['dono_processo'] || '';\r\n        let objetivoProcesso = formData['objetivo_processo'] || '';\r\n        let servicosEntrada = formData['servicos_entrada'] || '';\r\n        let servicoSaida = formData['servico_saida'] || '';\r\n        \r\n        // Processa atividades (atividades_r*_c*)\r\n        const atividadesRows = {};\r\n        const indicadoresData = [];\r\n        \r\n        Object.keys(formData).forEach(key => {\r\n          if (key.startsWith('atividades_r')) {\r\n            const match = key.match(/atividades_r(\\d+)_c(\\d+)/);\r\n            if (match) {\r\n              const row = parseInt(match[1]) - 1; // -1 porque come√ßa em r1\r\n              const col = parseInt(match[2]) - 1; // -1 porque come√ßa em c1\r\n              if (!atividadesRows[row]) atividadesRows[row] = [];\r\n              atividadesRows[row][col] = formData[key] || '';\r\n            }\r\n          } else if (key.startsWith('indicadores_r')) {\r\n            const match = key.match(/indicadores_r(\\d+)/);\r\n            if (match) {\r\n              const index = parseInt(match[1]) - 1; // -1 porque come√ßa em r1\r\n              indicadoresData[index] = formData[key] || '';\r\n            }\r\n          }\r\n        });\r\n        \r\n        // Converte atividades em array ordenado\r\n        const atividades = [];\r\n        for (let i = 0; i < 10; i++) { // M√°ximo de 10 linhas\r\n          if (atividadesRows[i]) {\r\n            // Garante que cada linha tenha exatamente 6 colunas (Template 2)\r\n            const row = atividadesRows[i];\r\n            while (row.length < 6) {\r\n              row.push('');\r\n            }\r\n            atividades.push(row);\r\n          }\r\n        }\r\n        \r\n        // Garante que h√° pelo menos uma linha\r\n        if (atividades.length === 0) {\r\n          atividades.push(['', '', '', '', '', '']);\r\n        }\r\n        \r\n        // Garante que h√° pelo menos um indicador\r\n        if (indicadoresData.length === 0) {\r\n          indicadoresData.push('');\r\n        }\r\n        \r\n        // 3. Gera o PDF n√£o edit√°vel do Template 2\r\n        const nonEditablePdfBytes = await generateNonEditablePdfTemplate2(\r\n          atividades, \r\n          donoProcesso, \r\n          objetivoProcesso, \r\n          indicadoresData, \r\n          servicosEntrada, \r\n          servicoSaida,\r\n          \"Procedimento\",\r\n          imageBytes,\r\n          filePath\r\n        );\r\n        \r\n        // 4. Abre o preview\r\n        const blob = new Blob([nonEditablePdfBytes], { type: \"application/pdf\" });\r\n        const blobUrl = URL.createObjectURL(blob);\r\n        window.open(blobUrl, \"_blank\");\r\n        \r\n      } else {\r\n        // Template 1 - Procedimento existente\r\n        // Converte os dados do formul√°rio em formato de tabela\r\n        // Tabela principal (table2_*)\r\n        const mainTableData = [];\r\n        const obsTableData = [];\r\n        \r\n        // Extrai dados da tabela principal\r\n        const mainRows = {};\r\n        const obsRows = {};\r\n        \r\n        // Debug dos dados do formul√°rio\r\n        console.log('üîç Dados do formul√°rio recebidos:', Object.keys(formData));\r\n        \r\n        Object.keys(formData).forEach(key => {\r\n          if (key.startsWith('table2_r')) {\r\n            const match = key.match(/table2_r(\\d+)_c(\\d+)/);\r\n            if (match) {\r\n              const row = parseInt(match[1]) - 2; // -2 porque come√ßa em r2\r\n              const col = parseInt(match[2]) - 1; // -1 porque come√ßa em c1\r\n              if (!mainRows[row]) mainRows[row] = [];\r\n              mainRows[row][col] = formData[key] || '';\r\n              \r\n              // Debug para documentos associados e instru√ß√µes\r\n              if (col === 3 && formData[key]) {\r\n                console.log(`üìÑ Documentos Associados linha ${row}:`, formData[key]);\r\n              }\r\n              if (col === 4 && formData[key]) {\r\n                console.log(`üìã Instru√ß√µes linha ${row}:`, formData[key]);\r\n              }\r\n            }\r\n          } else if (key.startsWith('table1_r')) {\r\n            const match = key.match(/table1_r(\\d+)/);\r\n            if (match) {\r\n              const row = parseInt(match[1]) - 1; // -1 porque come√ßa em r1\r\n              obsRows[row] = [formData[key] || ''];\r\n              \r\n              // Debug para objetivos e outras se√ß√µes\r\n              if (row === 0 && formData[key]) {\r\n                console.log('üéØ Objetivos encontrados:', formData[key]);\r\n              }\r\n              console.log(`üìù Se√ß√£o ${row + 1}:`, formData[key]);\r\n            }\r\n          }\r\n        });\r\n        \r\n        // Converte objetos em arrays ordenados\r\n        for (let i = 0; i < 20; i++) { // M√°ximo de 20 linhas\r\n          if (mainRows[i]) {\r\n            // Garante que cada linha tenha exatamente 5 colunas\r\n            const row = mainRows[i];\r\n            while (row.length < 5) {\r\n              row.push('');\r\n            }\r\n            mainTableData.push(row);\r\n          }\r\n        }\r\n        \r\n        for (let i = 0; i < 10; i++) { // M√°ximo de 10 linhas para observa√ß√µes\r\n          if (obsRows[i]) {\r\n            obsTableData.push(obsRows[i]);\r\n          }\r\n        }\r\n        \r\n        // Garante que h√° pelo menos uma linha de dados para evitar NaN\r\n        if (mainTableData.length === 0) {\r\n          mainTableData.push(['', '', '', '', '']);\r\n        }\r\n        \r\n        if (obsTableData.length === 0) {\r\n          obsTableData.push(['']);\r\n        }\r\n        \r\n        // Headers do Template 1\r\n        const headers = [\r\n          'Fluxo\\ndas A√ß√µes',\r\n          'Descri√ß√£o',\r\n          'Respons√°vel',\r\n          'Documentos\\nAssociados',\r\n          'Instru√ß√µes\\nde Trabalho'\r\n        ];\r\n        \r\n        // 3. Gera o PDF n√£o edit√°vel do Template 1\r\n        const nonEditablePdfBytes = await generateNonEditablePdf(\r\n          mainTableData, \r\n          headers, \r\n          obsTableData, \r\n          \"Procedimento\", \r\n          imageBytes, \r\n          filePath\r\n        );\r\n        \r\n        // 4. Abre o preview\r\n        const blob = new Blob([nonEditablePdfBytes], { type: \"application/pdf\" });\r\n        const blobUrl = URL.createObjectURL(blob);\r\n        window.open(blobUrl, \"_blank\");\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error(\"Erro ao gerar preview:\", error);\r\n      alert(\"Erro ao gerar preview do PDF. Tente novamente.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button onClick={handlePreviewClick}>\r\n      <img \r\n        src={downloadIcon} \r\n        alt={currentPath.length > 1 ? \"Download direto\" : \"Preview PDF\"} \r\n        style={{ width: '16px', height: '16px' }} \r\n        title=\" Download\"\r\n      />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PdfPreviewButton;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}