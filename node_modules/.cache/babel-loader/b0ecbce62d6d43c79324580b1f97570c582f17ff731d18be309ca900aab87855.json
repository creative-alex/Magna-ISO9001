{"ast":null,"code":"import{createBasePdf,wrapText,pageSize,xStart,yStart,addHeader}from'./pdfBase';import{drawTableLines,drawHeaders,drawObsTable,getObsRows,colWidths,obsColWidth,obsRowHeight,spaceBetweenTables,drawTemplate2Table,colWidthTemplate2}from'./pdfTables';import{drawObsTableWithHeaders,calculateObsTableHeight}from'./pdfObsTable';import{PDFDocument,StandardFonts,rgb,PDFName,PDFArray,PDFDict}from'pdf-lib';// Helper function to create text field with proper appearance\nfunction createTextFieldWithAppearance(form,fieldName,text,font){let fontSize=arguments.length>4&&arguments[4]!==undefined?arguments[4]:10;let multiline=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;const textField=form.createTextField(fieldName);if(multiline){textField.enableMultiline();}textField.setText(text||\"\");// Try to set appearance safely with multiple fallback strategies\ntry{// First try: Set font size, then update appearances\ntextField.setFontSize(fontSize);textField.updateAppearances(font);}catch(error){console.warn(\"Strategy 1 failed for field \".concat(fieldName,\":\"),error);try{// Second try: Just update appearances without setting font size\ntextField.updateAppearances(font);}catch(e){console.warn(\"Strategy 2 failed for field \".concat(fieldName,\":\"),e);// Final fallback: Do nothing, field will use default appearance\nconsole.warn(\"Using default appearance for field \".concat(fieldName));}}return textField;}// Função principal para gerar PDF editável\nexport async function generateEditablePdf(_ref){let{templateType=1,data,headers,dataObs,headersObs,atividades,donoProcesso,objetivoProcesso,indicadores,servicosEntrada,servicoSaida,title=\"\",// Added missing title parameter\nimageBytes=null,// Novo parâmetro para imagem\npathFilename=\"\",// Novo parâmetro para caminho do ficheiro\nhistory=[]// Novo parâmetro para histórico\n}=_ref;console.log(\"🎯 generateEditablePdf recebeu pathFilename:\",pathFilename);console.log(\"🔍 generateEditablePdf recebeu history:\",history);console.log(\"🔍 generateEditablePdf history length:\",history===null||history===void 0?void 0:history.length);if(templateType===2){return await generateEditablePdfTemplate2({atividades,donoProcesso,objetivoProcesso,indicadores,servicosEntrada,servicoSaida,title,imageBytes,pathFilename,history});}else{return await generateEditablePdfTemplate1(data,headers,dataObs,headersObs,title,imageBytes,pathFilename,400,history);}}// Renomeie a função antiga para Template1\nexport async function generateEditablePdfTemplate1(data,headers,dataObs,headersObs){let title=arguments.length>4&&arguments[4]!==undefined?arguments[4]:\"Procedimento\";let imageBytes=arguments.length>5&&arguments[5]!==undefined?arguments[5]:null;let pathFilename=arguments.length>6&&arguments[6]!==undefined?arguments[6]:\"\";let maxHeightForFirstTable=arguments.length>7&&arguments[7]!==undefined?arguments[7]:400;let history=arguments.length>8&&arguments[8]!==undefined?arguments[8]:[];const{pdfDoc,page,font}=await createBasePdf(title,imageBytes,pathFilename);const form=pdfDoc.getForm();console.log(\"🎯 generateEditablePdf recebeu pathFilename:\",pathFilename);// Validate and ensure data is an array\nconst safeData=Array.isArray(data)?data:[];const safeHeaders=Array.isArray(headers)?headers:[];// Use obsRows dinâmico e a nova função de cálculo de altura\nconst obsRows=getObsRows(dataObs);const obsTableHeightReal=calculateObsTableHeight(dataObs,font);// Configuração do limiar de altura para quebra de página\n// Se a primeira tabela (observações) exceder esta altura, a segunda tabela vai para nova página\nconst pageBottomMargin=50;// Margem inferior da página\nconst shouldBreakPage=obsTableHeightReal>maxHeightForFirstTable;console.log(\"obsRows:\",obsRows);console.log(\"obsTableHeightReal:\",obsTableHeightReal);console.log(\"maxHeightForFirstTable:\",maxHeightForFirstTable);console.log(\"shouldBreakPage:\",shouldBreakPage);console.log(\"data.length:\",safeData.length);console.log(\"yStart:\",yStart);console.log(\"spaceBetweenTables:\",spaceBetweenTables);// Desenha a tabela de observações usando a função existente (sem headers cinza para editável)\ndrawObsTable(page,font,dataObs);let yObs=yStart;const fontSize=8;// Fonte para ser igual ao PDF não editável\nconst maxWidth=obsColWidth[0]-8;const lineHeight=fontSize+2;const safeDataObs=Array.from({length:obsRows},(_,i)=>Array.isArray(dataObs)&&Array.isArray(dataObs[i])?dataObs[i]:[\"\"]);const rowHeightsObs=safeDataObs.map(row=>{const text=row[0]||'';const lines=wrapText(text,font,fontSize,maxWidth);return Math.max(obsRowHeight,lines.length*lineHeight+16);});// Criar campos de formulário para a tabela de observações\nfor(let row=0;row<obsRows;row++){const fieldName=\"table1_r\".concat(row+1);const textField=createTextFieldWithAppearance(form,fieldName,dataObs&&dataObs[row]?dataObs[row][0]:\"\",font,8,true);// Add to page\ntextField.addToPage(page,{x:xStart+2,y:yObs-rowHeightsObs[row]+2,width:obsColWidth[0]-4,height:rowHeightsObs[row]-4,textColor:rgb(0,0,0),backgroundColor:rgb(1,1,1),border:undefined});yObs-=rowHeightsObs[row];}// Determina se precisa criar nova página para segunda tabela\nlet currentPage=page;let currentYPos=yStart-obsTableHeightReal-spaceBetweenTables;if(shouldBreakPage){// Cria nova página para a segunda tabela\ncurrentPage=pdfDoc.addPage(pageSize);// Adiciona cabeçalho na nova página se necessário\nif(imageBytes||pathFilename){await addHeader(currentPage,font,title,imageBytes,pathFilename);}currentYPos=yStart;// Reset da posição Y para o topo da nova página\nconsole.log(\"🔄 Nova página criada para segunda tabela. yPos resetado para:\",currentYPos);}// Gere dinamicamente os rowHeights para a tabela principal\nconst rowHeights=Array(safeData.length+1).fill(50);// +1 para o header\n// Desenha tabela principal na página apropriada\n// Primeiro desenha as linhas da tabela\ndrawTableLines(currentPage,shouldBreakPage?0:obsTableHeightReal,shouldBreakPage?yStart:null,rowHeights);// DEPOIS desenha os headers com fundo cinza por cima (igual Template 2)\nlet xPos=xStart;const yHeaders=shouldBreakPage?yStart:yStart-obsTableHeightReal-spaceBetweenTables;const headerHeight=rowHeights[0]||50;safeHeaders.forEach((header,col)=>{const colWidth=colWidths[col]||100;// Quadrado cinza do header (igual Template 2)\ncurrentPage.drawRectangle({x:xPos,y:yHeaders-headerHeight,width:colWidth,height:headerHeight,color:rgb(0.7,0.7,0.7),borderColor:rgb(0,0,0),borderWidth:1});// Texto do header\nconst lines=header.split('\\n');const fontSize=8;const lineHeight=10;const totalTextHeight=lines.length*lineHeight;let startY=yHeaders-(headerHeight-totalTextHeight)/2-fontSize;lines.forEach((line,idx)=>{const textWidth=font.widthOfTextAtSize(line,fontSize);const textX=xPos+(colWidth-textWidth)/2;const textY=startY-idx*lineHeight;currentPage.drawText(line,{x:textX,y:textY,size:fontSize,font,color:rgb(0,0,0)});});xPos+=colWidth;});let yPos=shouldBreakPage?yStart:yStart-obsTableHeightReal-spaceBetweenTables;console.log(\"yPos inicial para tabela principal:\",yPos);console.log(\"yStart:\",yStart,\"obsTableHeightReal:\",obsTableHeightReal,\"spaceBetweenTables:\",spaceBetweenTables);for(let row=0;row<safeData.length;row++){let xPos=xStart;for(let col=0;col<5;col++){const fieldName=\"table2_r\".concat(row+2,\"_c\").concat(col+1);const textField=createTextFieldWithAppearance(form,fieldName,safeData[row]&&safeData[row][col]?safeData[row][col]:\"\",font,8,true);// Add to page\ntextField.addToPage(currentPage,{x:xPos+2,y:yPos-rowHeights[row+1]+2,width:colWidths[col]-4,height:rowHeights[row+1]-4,textColor:rgb(0,0,0),backgroundColor:rgb(1,1,1),border:undefined});xPos+=colWidths[col];}yPos-=rowHeights[row+1];}return await pdfDoc.save();}// Implemente a função para Template2 conforme sugerido antes\nexport async function generateEditablePdfTemplate2(_ref2){let{atividades,donoProcesso,objetivoProcesso,indicadores,servicosEntrada,servicoSaida,title=\"Procedimento\",imageBytes=null,pathFilename=\"\",history=[]}=_ref2;const{pdfDoc,page,font}=await createBasePdf(title,imageBytes,pathFilename);const form=pdfDoc.getForm();console.log(\"Template2 - servicosEntrada recebido:\",servicosEntrada);console.log(\"Template2 - servicoSaida recebido:\",servicoSaida);let yPos=yStart;// DONO DO PROCESSO\npage.drawText(\"DONO DO PROCESSO\\n(nomeado):\",{x:xStart,y:yPos,size:12,font});const donoField=createTextFieldWithAppearance(form,'dono_processo',donoProcesso,font,10,true);donoField.addToPage(page,{x:xStart+320,y:yPos-8,width:230,height:28});yPos-=38;// OBJETIVO DO PROCESSO\npage.drawText(\"OBJETIVO DO PROCESSO:\",{x:xStart,y:yPos,size:12,font});const objetivoField=createTextFieldWithAppearance(form,'objetivo_processo',objetivoProcesso,font,10,true);objetivoField.addToPage(page,{x:xStart+320,y:yPos-8,width:230,height:28});yPos-=38;// SERVIÇOS DE ENTRADAS / SAÍDA\npage.drawText(\"SERVIÇOS DE ENTRADAS\",{x:xStart,y:yPos,size:12,font});page.drawText(\"SERVIÇO DE SAÍDA\",{x:xStart+320,y:yPos,size:12,font});const entradaField=createTextFieldWithAppearance(form,'servicos_entrada',servicosEntrada,font,10,true);console.log(\"Campo servicos_entrada criado com valor:\",servicosEntrada||\"\");entradaField.addToPage(page,{x:xStart,y:yPos-28,width:290,height:48});const saidaField=createTextFieldWithAppearance(form,'servico_saida',servicoSaida,font,10,true);console.log(\"Campo servico_saida criado com valor:\",servicoSaida||\"\");saidaField.addToPage(page,{x:xStart+320,y:yPos-28,width:230,height:48});yPos-=88;// Cabeçalhos da tabela de atividades\nconst headers=[\"Principais Atividades\",\"Procedimentos Associados\",\"Requisitos ISO 9001\",\"Requisitos DGERT\",\"Requisitos EQAVET\",\"Requisitos CQCQ\"];// Desenha grid e cabeçalhos da tabela de atividades\ndrawTemplate2Table(page,font,yPos,atividades,headers);// Campos editáveis para cada célula de atividades\nlet camposY=yPos-20;// primeira linha de dados\nfor(let row=0;row<atividades.length;row++){let xPos=xStart;for(let col=0;col<atividades[row].length;col++){const fieldName=\"atividades_r\".concat(row+1,\"_c\").concat(col+1);const textField=createTextFieldWithAppearance(form,fieldName,atividades[row][col],font,8,false);textField.addToPage(page,{x:xPos+2,y:camposY+2,width:colWidthTemplate2[col]-4,height:16});xPos+=colWidthTemplate2[col];}camposY-=20;}// Indicadores\nlet indicadoresY=camposY-32;page.drawText(\"Indicadores de monitorização do processo\",{x:xStart,y:indicadoresY,size:12,font});indicadoresY-=22;// Tratar indicadores como array ou objeto\nif(Array.isArray(indicadores)){// Se for array, criar campos dinamicamente\nindicadores.forEach((indicador,index)=>{const fieldName=\"indicadores_r\".concat(index+1);const textField=createTextFieldWithAppearance(form,fieldName,indicador||'',font,10,true);textField.addToPage(page,{x:xStart,y:indicadoresY,width:550,height:28});indicadoresY-=32;});}else{// Se for objeto, usar os 3 campos fixos\nconst indicadorFields=['indicadores_r1','indicadores_r2','indicadores_r3'];indicadorFields.forEach(fieldName=>{const textField=createTextFieldWithAppearance(form,fieldName,indicadores[fieldName]||'',font,10,true);textField.addToPage(page,{x:xStart,y:indicadoresY,width:550,height:28});indicadoresY-=32;});}return await pdfDoc.save();}// Função para gerar PDF não editável do Template 2\nexport async function generateNonEditablePdfTemplate2(atividades,donoProcesso,objetivoProcesso,indicadores,servicosEntrada,servicoSaida){let title=arguments.length>6&&arguments[6]!==undefined?arguments[6]:\"Procedimento\";let imageBytes=arguments.length>7&&arguments[7]!==undefined?arguments[7]:null;let pathFilename=arguments.length>8?arguments[8]:undefined;let history=arguments.length>9&&arguments[9]!==undefined?arguments[9]:[];console.log(\"🔍 DEBUG generateNonEditablePdfTemplate2 - history recebido:\",history);console.log(\"🔍 DEBUG generateNonEditablePdfTemplate2 - history length:\",history===null||history===void 0?void 0:history.length);const{pdfDoc,page,font}=await createBasePdf(title,imageBytes,pathFilename);let activePage=page;// Para controle de páginas no histórico\n// Validações de entrada\nconst safeAtividades=Array.isArray(atividades)&&atividades.length>0?atividades:[['','','','','','']];const safeIndicadores=Array.isArray(indicadores)&&indicadores.length>0?indicadores:[''];const safeDonoProcesso=donoProcesso||'';const safeObjetivoProcesso=objetivoProcesso||'';const safeServicosEntrada=servicosEntrada||'';const safeServicoSaida=servicoSaida||'';// Sanitizador: tratar valores apenas com '-' (ou traços/espaços) como vazios no Template 2 (não editável)\nconst dashToEmpty=val=>{const s=(val!==null&&val!==void 0?val:'').toString();// Se contém apenas espaços e traços (inclui diferentes tipos de traço), considera vazio\nreturn /^[\\s\\-–—]*$/.test(s)?'':s;};// Aplica sanitização a todos os campos relevantes do Template 2\nconst atividadesClean=safeAtividades.map(row=>Array.isArray(row)?row.map(dashToEmpty):['','','','','','']);const indicadoresClean=safeIndicadores.map(dashToEmpty).filter(text=>text!=='');const donoProcessoClean=dashToEmpty(safeDonoProcesso);const objetivoProcessoClean=dashToEmpty(safeObjetivoProcesso);const servicosEntradaClean=dashToEmpty(safeServicosEntrada);const servicoSaidaClean=dashToEmpty(safeServicoSaida);console.log(\"🎯 generateNonEditablePdfTemplate2 - dados recebidos:\");console.log(\"📋 atividades:\",safeAtividades);console.log(\"👤 donoProcesso:\",safeDonoProcesso);console.log(\"🎯 objetivoProcesso (IMPORTANTE):\",safeObjetivoProcesso);console.log(\"📊 indicadores:\",safeIndicadores);console.log(\"📥 servicosEntrada:\",safeServicosEntrada);console.log(\"📤 servicoSaida:\",safeServicoSaida);// Validação adicional para objetivos\nif(!safeObjetivoProcesso||safeObjetivoProcesso.trim()===''){console.warn(\"⚠️ AVISO: Objetivo do processo está vazio ou indefinido!\");}// Calcula posição centralizada para as tabelas\nconst pageWidth=pageSize[0];const tableWidth=540;const xStartCentered=(pageWidth-tableWidth)/2;// Usar a função utilitária para desenhar a tabela de cabeçalho do processo (centralizada)\nlet yPos=drawProcessHeaderTableCentered(page,font,yStart,donoProcessoClean,objetivoProcessoClean,servicosEntradaClean,servicoSaidaClean,xStartCentered);console.log(\"yPos após header:\",yPos);// Debug\n// Headers da tabela de atividades\nconst headers=[\"Principais\\nAtividades\",\"Procedimentos\\nAssociados\",\"Requisitos\\nISO 9001\",\"Requisitos\\nDGERT\",\"Requisitos\\nEQAVET\",\"Requisitos\\nCQCQ\"];// Desenha tabela de atividades (paginação e centralizada)\nconst baseRowHeight=25;let yPos2=yPos-1;// Calcula altura dinâmica para cada linha com base no conteúdo\nconst getRowHeight=rowData=>{let maxLines=1;rowData.forEach((cellText,colIdx)=>{const wrappedLines=wrapText(cellText||'',font,8,colWidthTemplate2[colIdx]-8);maxLines=Math.max(maxLines,wrappedLines.length);});return Math.max(baseRowHeight,maxLines*10+10);};// Calcula alturas de todas as linhas\nconst rowHeights=atividadesClean.map(row=>getRowHeight(row));const headerHeight=35;// Helpers para paginação\nconst marginBottom=25;let currentPage=page;const createNewPage=async()=>{const newPage=pdfDoc.addPage([pageSize[0],pageSize[1]]);await addHeader(newPage,font,title,imageBytes,pathFilename);return newPage;};const drawActivityHeaders=(pg,yTop)=>{let xPosLocal=xStartCentered;headers.forEach((header,idx)=>{// Fundo do cabeçalho\npg.drawRectangle({x:xPosLocal,y:yTop-headerHeight,width:colWidthTemplate2[idx],height:headerHeight,color:rgb(0.7,0.7,0.7),borderColor:rgb(0,0,0),borderWidth:1});// Texto\nconst headerLines=header.split('\\n');headerLines.forEach((line,lineIdx)=>{pg.drawText(line,{x:xPosLocal+4,y:yTop-12-lineIdx*10,size:9,font,color:rgb(0,0,0)});});xPosLocal+=colWidthTemplate2[idx];});};// Desenha primeira página de atividades\ndrawActivityHeaders(currentPage,yPos2);let currentY=yPos2-headerHeight;for(let row=0;row<atividadesClean.length;row++){const rowHeight=rowHeights[row];// Verifica espaço; se não couber, cria nova página e redesenha headers\nif(currentY-rowHeight<marginBottom){currentPage=await createNewPage();drawActivityHeaders(currentPage,yStart);currentY=yStart-headerHeight;}let dataX=xStartCentered;// Células da linha\nfor(let col=0;col<atividadesClean[row].length;col++){currentPage.drawRectangle({x:dataX,y:currentY-rowHeight,width:colWidthTemplate2[col],height:rowHeight,borderColor:rgb(0,0,0),borderWidth:1});const cellText=atividadesClean[row][col]||'';const wrappedLines=wrapText(cellText,font,8,colWidthTemplate2[col]-8);wrappedLines.forEach((line,lineIdx)=>{if(lineIdx<8){const availableWidth=colWidthTemplate2[col]-8;const textWidth=font.widthOfTextAtSize(line,8);if(textWidth<=availableWidth){currentPage.drawText(line,{x:dataX+4,y:currentY-15-lineIdx*10,size:8,font,color:rgb(0,0,0)});}else{let truncatedText=line;while(font.widthOfTextAtSize(truncatedText+'...',8)>availableWidth&&truncatedText.length>0){truncatedText=truncatedText.slice(0,-1);}currentPage.drawText(truncatedText+(truncatedText.length<line.length?'...':''),{x:dataX+4,y:currentY-15-lineIdx*10,size:8,font,color:rgb(0,0,0)});}}});dataX+=colWidthTemplate2[col];}currentY-=rowHeight;}// Atualiza yPos para continuar com indicadores\nyPos=currentY;// Desenha indicadores com paginação\nyPos-=50;const drawIndicatorsHeader=(pg,yTop)=>{pg.drawRectangle({x:xStartCentered,y:yTop-25,width:540,height:25,color:rgb(0.7,0.7,0.7),borderColor:rgb(0,0,0),borderWidth:1});pg.drawText(\"Indicadores de monitorização do processo\",{x:xStartCentered+10,y:yTop-15,size:10,font,color:rgb(0,0,0)});};// Garante espaço para o header dos indicadores\nif(yPos-25<marginBottom){currentPage=await createNewPage();yPos=yStart;}drawIndicatorsHeader(currentPage,yPos);yPos-=25;// Desenha indicadores com altura dinâmica\nconst processedIndicadores=indicadoresClean.slice(0,10);// Limita a 10 indicadores e remove '-'\nfor(let idx=0;idx<processedIndicadores.length;idx++){const indicador=processedIndicadores[idx];const text=(indicador||'').toString().trim();if(text&&text!=='testestesteste'&&!text.includes('teste')){// Filtro de segurança\nconst lines=wrapText(text,font,9,520);const indicadorHeight=Math.max(30,lines.length*12+15);// Nova página se não couber\nif(yPos-indicadorHeight<marginBottom){currentPage=await createNewPage();// Header de indicadores no topo da nova página\ndrawIndicatorsHeader(currentPage,yStart);yPos=yStart-25;}// Desenha a célula do indicador\ncurrentPage.drawRectangle({x:xStartCentered,y:yPos-indicadorHeight,width:540,height:indicadorHeight,borderColor:rgb(0,0,0),borderWidth:1});// Desenha o texto do indicador linha por linha\nlines.forEach((line,lineIdx)=>{if(lineIdx<10){// Limita a 10 linhas por indicador\n// Calcula a largura disponível para o texto\nconst availableWidth=520;// 540 - 20 (10px de margem de cada lado)\n// Verifica se o texto cabe na largura disponível\nconst textWidth=font.widthOfTextAtSize(line,9);if(textWidth<=availableWidth){// Texto cabe normalmente\ncurrentPage.drawText(line,{x:xStartCentered+10,y:yPos-15-lineIdx*12,size:9,font,color:rgb(0,0,0)});}else{// Texto muito longo, trunca com reticências\nlet truncatedText=line;while(font.widthOfTextAtSize(truncatedText+'...',9)>availableWidth&&truncatedText.length>0){truncatedText=truncatedText.slice(0,-1);}currentPage.drawText(truncatedText+(truncatedText.length<line.length?'...':''),{x:xStartCentered+10,y:yPos-15-lineIdx*12,size:9,font,color:rgb(0,0,0)});}}});yPos-=indicadorHeight;}}// Desenhar histórico de alterações se existir (Template 2)\n// Sempre na base do documento, depois de todas as tabelas\nif(history&&history.length>0){console.log(\"🔍 DEBUG Template2 - Desenhando histórico de alterações:\",history.length,\"entradas\");// Garantir espaço suficiente - sempre colocar numa nova secção\nyPos-=60;// Mais espaço antes do histórico\n// Se não há espaço suficiente, criar nova página\nconst marginBottom=50;const espacoNecessario=150;// Espaço mínimo para título + algumas linhas\nif(yPos-espacoNecessario<marginBottom){console.log(\"📄 Template2 - Criando nova página para histórico\");const newPage=pdfDoc.addPage([pageSize[0],pageSize[1]]);yPos=yStart-80;// Começar mais abaixo na nova página\nactivePage=newPage;}// Linha separadora antes do histórico\nactivePage.drawLine({start:{x:xStart,y:yPos+20},end:{x:xStart+540,y:yPos+20},thickness:1,color:rgb(0.7,0.7,0.7)});// Título do histórico com destaque\nactivePage.drawText('Histórico de Alterações',{x:xStart,y:yPos,size:14,font,color:rgb(0,0,0)});yPos-=30;// Cabeçalhos da tabela de histórico\n// Função para quebrar texto por largura real da célula\nfunction wrapTextToWidth(text,maxWidth,font,fontSize){if(!text)return[''];// Remover caracteres de quebra de linha e outros caracteres não suportados\nconst cleanText=text.replace(/[\\n\\r\\t]/g,' ').replace(/\\s+/g,' ').trim();if(!cleanText)return[''];const words=cleanText.split(' ');const lines=[];let currentLine='';words.forEach(word=>{const testLine=currentLine?currentLine+' '+word:word;try{const testWidth=font.widthOfTextAtSize(testLine,fontSize);if(testWidth<=maxWidth){currentLine=testLine;}else{if(currentLine)lines.push(currentLine);// Se a palavra sozinha é maior que a célula, quebra a palavra\ntry{if(font.widthOfTextAtSize(word,fontSize)>maxWidth){let subWord=word;while(subWord.length>0){let i=1;while(i<=subWord.length){try{if(font.widthOfTextAtSize(subWord.substring(0,i),fontSize)>maxWidth)break;i++;}catch(e){break;}}if(i>1){lines.push(subWord.substring(0,i-1));subWord=subWord.substring(i-1);}else{// Se nem um caractere cabe, força pelo menos um\nlines.push(subWord.charAt(0));subWord=subWord.substring(1);}}currentLine='';}else{currentLine=word;}}catch(e){// Se houver erro ao calcular largura da palavra, usa fallback\ncurrentLine=word;}}}catch(e){// Se houver erro ao calcular largura da linha, usa fallback simples\nif(testLine.length<=30){// Fallback baseado em caracteres\ncurrentLine=testLine;}else{if(currentLine)lines.push(currentLine);currentLine=word;}}});if(currentLine)lines.push(currentLine);return lines.length>0?lines:[''];}const historyHeaders=['Data','Utilizador','Ação','Mudou de','Para'];const historyColWidths=[50,60,60,170,170];// Total: 540 - Distribuição equilibrada\nlet xPos=xStart;// Desenha cabeçalhos\nhistoryHeaders.forEach((header,col)=>{// Fundo cinza para cabeçalho\nactivePage.drawRectangle({x:xPos,y:yPos-18,width:historyColWidths[col],height:18,color:rgb(0.9,0.9,0.9)});// Borda do cabeçalho\nactivePage.drawRectangle({x:xPos,y:yPos-18,width:historyColWidths[col],height:18,borderColor:rgb(0,0,0),borderWidth:0.5});// Texto do cabeçalho\nactivePage.drawText(header,{x:xPos+4,y:yPos-12,size:10,font,color:rgb(0,0,0)});xPos+=historyColWidths[col];});yPos-=18;// Desenha linhas de histórico\nhistory.forEach((entry,rowIdx)=>{// Processar descrição para separar \"de\" e \"para\"\nconst descricao=entry.descricao||'';let mudouDe='';let para='';// Verificar se é uma alteração com formato \"campo: de 'valor1' para 'valor2'\"\nconst matchAlteracao=descricao.match(/^(.+?):\\s*de\\s*[\"'](.+?)[\"']\\s*para\\s*[\"'](.+?)[\"']$/);if(matchAlteracao){mudouDe=matchAlteracao[2];para=matchAlteracao[3];}else if(descricao.includes(' para ')){// Formato mais simples \"de X para Y\"\nconst parts=descricao.split(' para ');if(parts.length===2){mudouDe=parts[0].replace(/^.+?de\\s*[\"']?/,'').replace(/[\"']$/,'');para=parts[1].replace(/[\"']$/,'');}}else{// Se não conseguir separar, colocar toda a descrição em \"Para\"\npara=descricao;}// Quebra de texto por largura real para cada célula\nconst fontSize=8;const historyData=[entry.data||'',entry.utilizador||'',entry.acao||'',mudouDe,para];let cellLines=[];let maxLinesInRow=1;historyData.forEach((cellData,col)=>{const maxWidth=historyColWidths[col]-8;// Aplicar quebra de texto a TODAS as colunas\ncellLines[col]=wrapTextToWidth(cellData,maxWidth,font,fontSize);maxLinesInRow=Math.max(maxLinesInRow,cellLines[col].length);});// ...existing code...\n// Calcular altura baseada no número real de linhas + padding generoso\nconst rowHeight=Math.max(35,maxLinesInRow*15+20);// Altura mínima 35, 15px por linha + 20px padding\n// Verifica se há espaço para a linha\nif(yPos-rowHeight<marginBottom){const newPage=pdfDoc.addPage([pageSize[0],pageSize[1]]);yPos=yStart-30;activePage=newPage;}xPos=xStart;historyData.forEach((cellData,col)=>{// Borda da célula\nactivePage.drawRectangle({x:xPos,y:yPos-rowHeight,width:historyColWidths[col],height:rowHeight,borderColor:rgb(0,0,0),borderWidth:0.5});// Usar as linhas já calculadas\nconst lines=cellLines[col];// Desenhar cada linha de texto com espaçamento adequado\nlines.forEach((line,lineIdx)=>{activePage.drawText(line,{x:xPos+4,y:yPos-16-lineIdx*14,// Começar mais baixo e mais espaço entre linhas\nsize:fontSize,font,color:rgb(0,0,0)});});xPos+=historyColWidths[col];});yPos-=rowHeight;});console.log(\"✅ Template2 - Histórico desenhado com\",history.length,\"entradas\");}else{console.log(\"ℹ️ Template2 - Nenhum histórico para desenhar\");}return await pdfDoc.save();}// Função principal para gerar PDF não editável\nexport async function generateNonEditablePdf(data,headers,dataObs){let title=arguments.length>3&&arguments[3]!==undefined?arguments[3]:\"Procedimento\";let imageBytes=arguments.length>4&&arguments[4]!==undefined?arguments[4]:null;let pathFilename=arguments.length>5&&arguments[5]!==undefined?arguments[5]:\"\";let history=arguments.length>6&&arguments[6]!==undefined?arguments[6]:[];console.log(\"🔍 generateNonEditablePdf recebeu history:\",history);console.log(\"🔍 generateNonEditablePdf history length:\",history===null||history===void 0?void 0:history.length);const{pdfDoc,page:firstPage,font}=await createBasePdf(title,imageBytes,pathFilename);// Validações de entrada\nconst safeData=Array.isArray(data)&&data.length>0?data:[['','','','','']];const safeHeaders=Array.isArray(headers)&&headers.length>0?headers:['','','','',''];const safeDataObs=Array.isArray(dataObs)&&dataObs.length>0?dataObs:[['']];// Desenha tabela de observações na primeira página COM headers cinza\nconst obsResult=await drawObsTableWithHeaders(firstPage,font,safeDataObs,imageBytes,pathFilename);// Agora temos que usar a última página e posição Y do resultado\nlet page=obsResult.currentPage;let yPos=obsResult.currentYPosition-spaceBetweenTables;// --- Quebra de texto e altura dinâmica das linhas ---\nconst fontSize=8;// Definir fontSize para uso consistente\nconst lineHeight=fontSize+2;// Definir lineHeight baseado no fontSize\nconst maxWidths=colWidths.map(w=>w-8);// Função para remover emojis e caracteres Unicode que não são suportados pela fonte padrão\nfunction removeEmojis(text){// Remove emojis e outros caracteres Unicode não suportados\nreturn text.replace(/(?:\\uD83D[\\uDE00-\\uDE4F])|(?:\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDDFF])|(?:\\uD83D[\\uDE80-\\uDEFF])|(?:\\uD83C[\\uDDE0-\\uDDFF])|[\\u2600-\\u26FF]|[\\u2700-\\u27BF]/g,'');}// Calcula as linhas quebradas e alturas de cada linha\nconst wrappedData=safeData.map((row,rowIdx)=>row.map((cell,col)=>{const cellText=(cell||'').toString();// Debug para documentos associados (coluna 3)\nif(col===3&&cellText.trim()!==''){console.log(\"\\uD83D\\uDD0D DEBUG - Documentos Associados linha \".concat(rowIdx,\":\"),cellText);}// Se é um link de vídeo, usa título + URL para calcular quebras\nlet textForWrapping=cellText;if(cellText.startsWith('[VIDEO]')&&cellText.includes('||')){const parts=cellText.split('||');const title=parts[0].replace('[VIDEO] ','').trim();const url=parts[1];textForWrapping=\"\".concat(title,\" (\").concat(url,\")\");// Formato final que será exibido\n}else{textForWrapping=removeEmojis(cellText);// Remove emojis de texto normal\n}const maxWidth=maxWidths[col]||100;return wrapText(textForWrapping,font,fontSize,maxWidth);}));// Offsets de linhas para permitir dividir uma mesma linha em várias páginas\nconst rowLineOffsets=safeData.map(row=>row.map(()=>0));const rowHeightsDynamic=wrappedData.map(row=>{const heights=row.map(lines=>{const height=lines.length*lineHeight+16;return isNaN(height)?50:height;});const maxHeight=Math.max(...heights,50);return isNaN(maxHeight)?50:maxHeight;});rowHeightsDynamic.unshift(50);// header\n// Parâmetros de página\nconst totalWidth=colWidths.reduce((a,b)=>a+b,0);const marginBottom=25;// Posição inicial da tabela principal - já configurada acima\nlet rowIndex=0;// Controla se o cabeçalho da tabela (nomes das colunas) já foi desenhado\nlet headerDrawn=false;// Função para desenhar headers\nfunction drawTableHeaders(page,y,headerHeight){const headerFontSize=8;// Tamanho da fonte específico para os cabeçalhos\nconst headerLineHeight=11;let xPos=xStart;safeHeaders.forEach((header,col)=>{const colWidth=colWidths[col]||100;// Desenha fundo cinza do header\npage.drawRectangle({x:xPos,y:y-headerHeight,width:colWidth,height:headerHeight,color:rgb(0.7,0.7,0.7),borderColor:rgb(0,0,0),borderWidth:1});const lines=(header||\"\").split('\\n');const totalTextHeight=lines.length*headerLineHeight;let startY=y-(headerHeight-totalTextHeight)/2-headerFontSize;lines.forEach((line,idx)=>{const textWidth=font.widthOfTextAtSize(line,headerFontSize);const textX=xPos+(colWidth-textWidth)/2;const textY=startY-idx*headerLineHeight;page.drawText(line,{x:textX,y:textY,size:headerFontSize,font,color:rgb(0,0,0)});});xPos+=colWidths[col]||100;});}// Função para desenhar linhas horizontais e verticais da tabela\nfunction drawTableGrid(page,yStartTable,rowHeights,numRows){let drawTopLine=arguments.length>4&&arguments[4]!==undefined?arguments[4]:true;let y=yStartTable;// Desenha linhas horizontais\nfor(let i=0;i<=numRows;i++){if(i===0&&!drawTopLine){y-=rowHeights[i]||0;continue;}page.drawLine({start:{x:xStart,y:y},end:{x:xStart+totalWidth,y:y},thickness:1,color:rgb(0,0,0)});if(i<numRows){y-=rowHeights[i]||0;}}// Desenha linhas verticais\nlet xPos=xStart;const totalVerticalHeight=rowHeights.slice(0,numRows+(drawTopLine?1:0)).reduce((a,b)=>a+b,0);for(let j=0;j<=colWidths.length;j++){page.drawLine({start:{x:xPos,y:yStartTable},end:{x:xPos,y:yStartTable-totalVerticalHeight},thickness:1,color:rgb(0,0,0)});if(j<colWidths.length){xPos+=colWidths[j];}}}// Desenha um \"pedaço\" (chunk) de uma linha muito alta que não cabe na página\nfunction drawRowChunk(page,row,yTop,availableHeight,drawHeaderOnThisPage){// Se deve desenhar o header nesta página\nlet yCursor=yTop;let headerHeightLocal=0;if(drawHeaderOnThisPage){headerHeightLocal=rowHeightsDynamic[0];drawTableHeaders(page,yCursor,headerHeightLocal);yCursor-=headerHeightLocal;availableHeight-=headerHeightLocal;}// Quantidade máxima de linhas de texto que cabem no espaço disponível\nconst maxLinesFit=Math.max(1,Math.floor((availableHeight-16)/lineHeight));// Linhas restantes da linha atual (maior entre as colunas)\nconst maxRemainingLines=Math.max(...wrappedData[row].map((lines,col)=>Math.max(0,lines.length-rowLineOffsets[row][col])));const linesThisChunk=Math.max(1,Math.min(maxLinesFit,maxRemainingLines));const chunkHeight=linesThisChunk*lineHeight+16;// Desenha grid do chunk (uma única linha de altura variável)\nconst totalWidth=colWidths.reduce((a,b)=>a+b,0);// Linha superior\npage.drawLine({start:{x:xStart,y:yCursor},end:{x:xStart+totalWidth,y:yCursor},thickness:1,color:rgb(0,0,0)});// Linhas verticais\nlet xPosGrid=xStart;for(let j=0;j<=colWidths.length;j++){page.drawLine({start:{x:xPosGrid,y:yCursor},end:{x:xPosGrid,y:yCursor-chunkHeight},thickness:1,color:rgb(0,0,0)});if(j<colWidths.length)xPosGrid+=colWidths[j];}// Linha inferior\npage.drawLine({start:{x:xStart,y:yCursor-chunkHeight},end:{x:xStart+totalWidth,y:yCursor-chunkHeight},thickness:1,color:rgb(0,0,0)});// Desenha o conteúdo (subset de linhas por coluna)\nlet xPos=xStart;for(let col=0;col<safeData[row].length;col++){const allLines=wrappedData[row][col]||[];const offset=rowLineOffsets[row][col]||0;const remaining=Math.max(0,allLines.length-offset);const drawCount=Math.min(remaining,linesThisChunk);let textY=yCursor-8;for(let i=0;i<drawCount;i++){const line=allLines[offset+i];const currentY=textY-i*lineHeight;const cellBottom=yCursor-chunkHeight+4;if(currentY<cellBottom)break;// Garantia extra\npage.drawText(line,{x:xPos+4,y:currentY,size:fontSize,font,color:rgb(0,0,0),maxWidth:maxWidths[col]||100});}// Avança o offset desta coluna\nrowLineOffsets[row][col]=offset+drawCount;xPos+=colWidths[col];}return{drawnHeight:headerHeightLocal+chunkHeight,chunkHeight,headerHeightLocal,yAfter:yCursor-chunkHeight};}// Desenha a tabela principal, quebrando para nova página se necessário\nwhile(rowIndex<safeData.length){// Calcular espaço disponível nesta página (não redefinir yPos automaticamente)\nlet availableHeight=yPos-marginBottom;console.log(\"\\uD83D\\uDCCF Espa\\xE7o dispon\\xEDvel na p\\xE1gina atual = \".concat(availableHeight,\" (header j\\xE1 desenhado: \").concat(headerDrawn,\")\"));// Quantas linhas cabem nesta página\nlet rowsThisPage=0;let heightSum=headerDrawn?0:rowHeightsDynamic[0];// reserva espaço do header se ainda não foi desenhado\n// Melhor lógica de verificação de espaço\nwhile(rowIndex+rowsThisPage<safeData.length){const nextRowHeight=rowHeightsDynamic[rowIndex+rowsThisPage+1]||50;// Verifica se a próxima linha cabe na página com margem de segurança\nif(heightSum+nextRowHeight+20>availableHeight){console.log(\"\\uD83D\\uDD04 Quebra de p\\xE1gina necess\\xE1ria: altura atual \".concat(heightSum,\" + pr\\xF3xima linha \").concat(nextRowHeight,\" > dispon\\xEDvel \").concat(availableHeight));break;}heightSum+=nextRowHeight;rowsThisPage++;}// Se nenhuma linha cabe inteira nesta página, empurra tudo para a próxima página.\n// Só divide uma linha se ela não couber nem numa nova página vazia (fallback raro).\nif(rowsThisPage===0&&rowIndex<safeData.length){const nextRowHeight=rowHeightsDynamic[rowIndex+1]||50;const pageUsableHeight=yStart-marginBottom-rowHeightsDynamic[0];// espaço abaixo do header numa nova página\nif(nextRowHeight<=pageUsableHeight){// Cabe numa nova página: cria a nova página e volta para o loop (sem desenhar nada aqui)\nconst newPage=pdfDoc.addPage([pageSize[0],pageSize[1]]);await addHeader(newPage,font,'',imageBytes,pathFilename);// logo + caminho em todas as páginas\npage=newPage;// Ainda não desenhámos o cabeçalho; manter como não desenhado para sair desenhado na nova página\nyPos=yStart;console.log(\"\\u27A1\\uFE0F Empurrando linha \".concat(rowIndex,\" para a pr\\xF3xima p\\xE1gina inteira.\"));continue;// recalcula availableHeight e rowsThisPage\n}else{// Nem numa página nova cabe: dividir em chunks (fallback)\nconsole.log(\"\\u2702\\uFE0F Linha \".concat(rowIndex,\" \\xE9 maior que uma p\\xE1gina. Dividindo em p\\xE1ginas.\"));// Desenha um pedaço da linha atual nesta página\nlet yCursor=yPos;const availableHere=availableHeight;drawRowChunk(page,rowIndex,yCursor,availableHere,false);// não desenhar cabeçalho de colunas\n// Continua em páginas seguintes até acabar\nwhile(wrappedData[rowIndex].some((lines,col)=>(rowLineOffsets[rowIndex][col]||0)<lines.length)){const nextPage=pdfDoc.addPage([pageSize[0],pageSize[1]]);await addHeader(nextPage,font,'',imageBytes,pathFilename);page=nextPage;drawRowChunk(page,rowIndex,yStart,yStart-marginBottom,false);}rowIndex+=1;// linha completamente desenhada\n// Cabeçalho da tabela já terá sido desenhado quando for a vez de linhas normais\nyPos=yStart;continue;}}// Desenha grid e headers\nconst rowsToDraw=rowsThisPage>0?rowsThisPage:1;const willDrawHeader=!headerDrawn;// indica se vamos desenhar o cabeçalho agora\nif(willDrawHeader){drawTableGrid(page,yPos,[rowHeightsDynamic[0],...rowHeightsDynamic.slice(rowIndex+1,rowIndex+1+rowsToDraw)],rowsToDraw,true);drawTableHeaders(page,yPos,rowHeightsDynamic[0]);headerDrawn=true;// a partir daqui não voltamos a desenhar o cabeçalho\n}else{drawTableGrid(page,yPos,rowHeightsDynamic.slice(rowIndex+1,rowIndex+1+rowsToDraw),rowsToDraw,false);}// Desenha dados\nlet yData=yPos-(willDrawHeader?rowHeightsDynamic[0]:0);console.log(\"\\uD83D\\uDCCA Desenhando \".concat(rowsToDraw,\" linhas a partir da linha \").concat(rowIndex));for(let i=0;i<rowsToDraw;i++){let xPos=xStart;const row=rowIndex+i;// Validação adicional para garantir que os dados existem\nif(!safeData[row]||!Array.isArray(safeData[row])){console.warn(\"Linha \".concat(row,\" n\\xE3o encontrada ou n\\xE3o \\xE9 array:\"),safeData[row]);continue;}if(!wrappedData[row]||!Array.isArray(wrappedData[row])){console.warn(\"wrappedData linha \".concat(row,\" n\\xE3o encontrada ou n\\xE3o \\xE9 array:\"),wrappedData[row]);continue;}for(let col=0;col<safeData[row].length;col++){const lines=wrappedData[row][col];if(!Array.isArray(lines)){console.warn(\"lines n\\xE3o \\xE9 array para row \".concat(row,\", col \").concat(col,\":\"),lines);continue;}// Verifica se é um link de vídeo UMA VEZ por célula\nconst originalCellText=safeData[row][col]||'';const isVideoLink=originalCellText.startsWith('[VIDEO]')&&originalCellText.includes('||');let textY=yData-8;// Debug para instruções de trabalho (coluna 4)\nif(col===4&&originalCellText.trim()){console.log(\"\\uD83D\\uDCDD Instru\\xE7\\xF5es de trabalho linha \".concat(row,\":\"),originalCellText);}if(isVideoLink){// Para links de vídeo, desenha apenas o título\nconst parts=originalCellText.split('||');const title=parts[0].replace('[VIDEO] ','').trim();const url=parts[1]||'';// Extrai a URL\nconsole.log(\"\\uD83C\\uDFAC Processando v\\xEDdeo: \".concat(title));// Desenha apenas o título limpo como link\nconst textWidth=font.widthOfTextAtSize(title,fontSize);// Desenha o texto em azul para indicar que é um link\npage.drawText(title,{x:xPos+4,y:textY,size:fontSize,font,color:rgb(0,0,1),// Azul para links\nmaxWidth:maxWidths[col]||100});// Adiciona sublinhado para indicar visualmente que é um link\nconst underlineY=textY-2;page.drawLine({start:{x:xPos+4,y:underlineY},end:{x:xPos+4+Math.min(textWidth,maxWidths[col]||100),y:underlineY},thickness:0.5,color:rgb(0,0,1)});// Tenta criar anotação de link clicável usando API do pdf-lib\ntry{// Cria uma anotação de link usando a API correta do pdf-lib\nconst linkRect=[xPos+4,textY-4,xPos+4+Math.min(textWidth,maxWidths[col]||100),textY+fontSize+2];// Cria o dicionário da anotação\nconst linkAnnot=pdfDoc.context.obj({Type:'Annot',Subtype:'Link',Rect:linkRect,A:{Type:'Action',S:'URI',URI:url},Border:[0,0,0],F:4});// Adiciona a anotação à página\nconst pageRef=page.ref;const pageDict=pdfDoc.context.lookup(pageRef);// Obtém ou cria array de anotações\nlet annotsRef=pageDict.get(PDFName.of('Annots'));if(!annotsRef){const annotsArray=pdfDoc.context.obj([linkAnnot]);pageDict.set(PDFName.of('Annots'),annotsArray);}else{const annotsArray=pdfDoc.context.lookup(annotsRef);if(annotsArray instanceof PDFArray){annotsArray.push(linkAnnot);}}console.log(\"\\u2705 Link clic\\xE1vel criado: \\\"\".concat(title,\"\\\" -> \").concat(url));}catch(error){console.warn('⚠️ Falha ao criar link clicável, mantendo apenas visual:',error);console.log(\"\\uD83D\\uDCDD URL do v\\xEDdeo: \".concat(url));}}else{// Para texto normal (incluindo instruções de trabalho), desenha as linhas quebradas\nif(originalCellText.trim()){// Verifica se há conteúdo válido para desenhar\nconst validLines=lines.filter(line=>line&&line.trim());if(validLines.length===0){console.log(\"\\u26A0\\uFE0F Nenhuma linha v\\xE1lida para desenhar na coluna \".concat(col,\", linha \").concat(row));return;}validLines.forEach((line,lineIdx)=>{try{// Verifica se o texto cabe na célula horizontalmente\nconst textWidth=font.widthOfTextAtSize(line,fontSize);const availableWidth=maxWidths[col]||100;if(textWidth>availableWidth){console.log(\"\\u26A0\\uFE0F Texto muito largo na coluna \".concat(col,\": \\\"\").concat(line.substring(0,30),\"...\\\"\"));console.log(\"   Largura do texto: \".concat(textWidth,\"px, dispon\\xEDvel: \").concat(availableWidth,\"px\"));}// Calcula posição Y garantindo que não ultrapasse a célula\nconst currentY=textY-lineIdx*lineHeight;const cellBottom=yData-rowHeightsDynamic[row+1]+4;if(currentY<cellBottom){console.log(\"\\u26A0\\uFE0F Texto ultrapassaria a c\\xE9lula na linha \".concat(lineIdx,\". Parando o desenho.\"));return;}page.drawText(line,{x:xPos+4,y:currentY,size:fontSize,font,color:rgb(0,0,0),maxWidth:availableWidth});// Debug específico para instruções e documentos\nif((col===3||col===4)&&lineIdx===0){console.log(\"\\u2705 Desenhado na coluna \".concat(col===3?'Docs':'Instr',\", linha \").concat(row,\": \\\"\").concat(line,\"\\\"\"));}}catch(textError){console.error(\"\\u274C Erro ao desenhar texto na coluna \".concat(col,\", linha \").concat(row,\":\"),textError);console.log(\"\\uD83D\\uDCDD Texto problem\\xE1tico: \\\"\".concat(line,\"\\\"\"));console.log(\"\\uFFFD Posi\\xE7\\xE3o: x=\".concat(xPos+4,\", y=\").concat(textY-lineIdx*lineHeight));}});}else if(col===3||col===4){// Debug para colunas importantes (Documentos Associados e Instruções)\nconsole.log(\"\\u2139\\uFE0F C\\xE9lula vazia na coluna \".concat(col===3?'Documentos Associados':'Instruções de Trabalho',\", linha \").concat(row));console.log(\"   Dados originais: \\\"\".concat(originalCellText,\"\\\"\"));console.log(\"   Linhas processadas:\",lines);}}xPos+=colWidths[col];}yData-=rowHeightsDynamic[row+1];}// Avança para próximas linhas\nrowIndex+=rowsToDraw;// Atualiza posição Y disponível na mesma página para continuar empurrando as células seguintes para baixo\nyPos=yData;console.log(\"\\u2705 Desenhadas \".concat(rowsToDraw,\" linhas. Pr\\xF3ximo \\xEDndice: \").concat(rowIndex,\"/\").concat(safeData.length));// Se ainda há linhas para desenhar, só cria nova página se não houver espaço útil\nif(rowIndex<safeData.length){const remainingSpace=yPos-marginBottom;if(remainingSpace<60){console.log(\"\\uD83D\\uDCC4 Pouco espa\\xE7o restante (\".concat(remainingSpace,\"). Criando nova p\\xE1gina.\"));const newPage=pdfDoc.addPage([pageSize[0],pageSize[1]]);await addHeader(newPage,font,'',imageBytes,pathFilename);page=newPage;// O cabeçalho da tabela já foi desenhado anteriormente; manter headerDrawn=true\nyPos=yStart;}else{// Continuar na mesma página (header já desenhado anteriormente)\n// Nada a fazer aqui\n}}}// Desenhar histórico de alterações se existir (Template 1)\n// Sempre na base do documento, depois de todas as tabelas\nconsole.log(\"🔍 BEFORE drawing history - history:\",history);console.log(\"🔍 BEFORE drawing history - history length:\",history===null||history===void 0?void 0:history.length);if(history&&history.length>0){console.log(\"🔍 DEBUG Template1 - Desenhando histórico de alterações:\",history.length,\"entradas\");// Garantir espaço suficiente - sempre colocar numa nova secção\nyPos-=60;// Mais espaço antes do histórico\n// Definir margem inferior para verificar espaço disponível\nconst marginBottom=50;const espacoNecessario=150;// Espaço mínimo para título + algumas linhas\n// Verificar se há espaço para pelo menos o cabeçalho\nif(yPos-espacoNecessario<marginBottom){console.log(\"📄 Template1 - Criando nova página para histórico\");page=pdfDoc.addPage([pageSize[0],pageSize[1]]);yPos=yStart-80;// Começar mais abaixo na nova página\n}// Linha separadora antes do histórico\npage.drawLine({start:{x:xStart,y:yPos+20},end:{x:xStart+540,y:yPos+20},thickness:1,color:rgb(0.7,0.7,0.7)});// Título do histórico com destaque\npage.drawText('Histórico de Alterações',{x:xStart,y:yPos,size:12,font:font,color:rgb(0,0,0)});yPos-=25;// Cabeçalhos da tabela de histórico\nconst historyHeaders=['Data','Utilizador','Ação','Mudou de','Para'];// Larguras das colunas: [Data, Utilizador, Ação, Mudou de, Para] - Total deve ser 540\nconst historyColWidths=[80,70,60,165,165];// Total: 540 - Distribuição equilibrada \nlet xPos=xStart;// Desenha cabeçalhos\nhistoryHeaders.forEach((header,col)=>{// Fundo cinza para cabeçalho\npage.drawRectangle({x:xPos,y:yPos-15,width:historyColWidths[col],height:15,color:rgb(0.9,0.9,0.9)});// Borda do cabeçalho\npage.drawRectangle({x:xPos,y:yPos-15,width:historyColWidths[col],height:15,borderColor:rgb(0,0,0),borderWidth:0.5});// Texto do cabeçalho\npage.drawText(header,{x:xPos+4,y:yPos-10,size:9,font:font,color:rgb(0,0,0)});xPos+=historyColWidths[col];});yPos-=15;// Desenha linhas de histórico\nhistory.forEach((entry,rowIdx)=>{// Processar descrição para separar \"de\" e \"para\"\nconst descricao=entry.descricao||'';let mudouDe='';let para='';// Verificar se é uma alteração com formato \"campo: de 'valor1' para 'valor2'\"\nconst matchAlteracao=descricao.match(/^(.+?):\\s*de\\s*[\"'](.+?)[\"']\\s*para\\s*[\"'](.+?)[\"']$/);if(matchAlteracao){mudouDe=matchAlteracao[2];para=matchAlteracao[3];}else if(descricao.includes(' para ')){// Formato mais simples \"de X para Y\"\nconst parts=descricao.split(' para ');if(parts.length===2){mudouDe=parts[0].replace(/^.+?de\\s*[\"']?/,'').replace(/[\"']$/,'');para=parts[1].replace(/[\"']$/,'');}}else{// Se não conseguir separar, colocar toda a descrição em \"Para\"\npara=descricao;}const historyData=[entry.data||'',entry.utilizador||'',entry.acao||'',mudouDe,para];// Calcular altura necessária baseada no número real de linhas quebradas\nlet maxLinesInRow=1;const cellLines=[];// Array para armazenar as linhas quebradas de cada célula\nhistoryData.forEach((cellData,col)=>{// Calcular quantos caracteres cabem na largura da célula\nconst cellWidth=historyColWidths[col]-6;// Largura da célula menos padding\nconst fontSize=8;const avgCharWidth=fontSize*0.6;// Aproximação da largura média de caractere\nconst maxCharsPerLine=Math.floor(cellWidth/avgCharWidth);const words=cellData.split(' ');const lines=[];let currentLine='';words.forEach(word=>{const testLine=currentLine?currentLine+' '+word:word;if(testLine.length<=maxCharsPerLine){currentLine=testLine;}else{if(currentLine){lines.push(currentLine);currentLine=word;}else{// Palavra muito longa, forçar quebra\nlines.push(word.substring(0,maxCharsPerLine));currentLine=word.substring(maxCharsPerLine);}}});if(currentLine)lines.push(currentLine);cellLines[col]=lines;maxLinesInRow=Math.max(maxLinesInRow,lines.length);});// Calcular altura baseada no número real de linhas + padding generoso\nconst rowHeight=Math.max(30,maxLinesInRow*13+18);// Altura mínima 30, 13px por linha + 18px padding\n// Verifica se há espaço para a linha\nif(yPos-rowHeight<marginBottom){page=pdfDoc.addPage([pageSize[0],pageSize[1]]);yPos=yStart-20;}xPos=xStart;historyData.forEach((cellData,col)=>{// Borda da célula\npage.drawRectangle({x:xPos,y:yPos-rowHeight,width:historyColWidths[col],height:rowHeight,borderColor:rgb(0,0,0),borderWidth:0.5});// Usar as linhas já calculadas\nconst lines=cellLines[col];// Desenhar cada linha de texto com espaçamento adequado\nlines.forEach((line,lineIdx)=>{page.drawText(line,{x:xPos+3,y:yPos-16-lineIdx*12,// Melhor posicionamento inicial e espaçamento\nsize:8,font:font,color:rgb(0,0,0)});});xPos+=historyColWidths[col];});yPos-=rowHeight;});console.log(\"✅ Histórico desenhado com\",history.length,\"entradas\");}else{console.log(\"ℹ️ Nenhum histórico para desenhar\");}return await pdfDoc.save();}/**\r\n * @param {string} mainTableHtml\r\n * @param {string} obsTableHtml\r\n * @returns {Promise<Uint8Array>}\r\n */export async function generateNonEditablePdfFromHtml(mainTableHtml,obsTableHtml){let title=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"Procedimento\";let imageBytes=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;let pathFilename=arguments.length>4&&arguments[4]!==undefined?arguments[4]:\"\";let history=arguments.length>5&&arguments[5]!==undefined?arguments[5]:[];const parser=new DOMParser();// Função para extrair texto de uma célula, convertendo <br> em \\n\nfunction getCellTextWithBreaks(cell){let text=\"\";// Verifica se é uma célula com componente especial (DocumentosAssociados ou InstrucoesTrabalho)\nconst hasSpecialComponent=cell.querySelector('.documentos-associados-container')||cell.querySelector('.instrucoes-trabalho-container');if(hasSpecialComponent){// Para componentes especiais, procura por input/textarea que contém o valor real\nconst hiddenInput=cell.querySelector('input[type=\"hidden\"]')||cell.querySelector('input[value]')||cell.querySelector('textarea');if(hiddenInput&&hiddenInput.value!==undefined){text=hiddenInput.value||'';console.log(\"🔍 DEBUG - Valor extraído de componente especial:\",text);}else{// Fallback: procura por atributos data-value ou similar\nconst containerEl=cell.querySelector('[data-value]')||cell.querySelector('[data-current-value]');if(containerEl){text=containerEl.getAttribute('data-value')||containerEl.getAttribute('data-current-value')||'';console.log(\"🔍 DEBUG - Valor extraído de data-attribute:\",text);}else{// Se não encontrar o valor, tenta extrair texto visível\ntext=cell.textContent||cell.innerText||'';console.log(\"🔍 DEBUG - Texto extraído como fallback:\",text);}}}else{// Para células normais\ncell.childNodes.forEach(node=>{if(node.nodeType===3){text+=node.nodeValue.replace(/<br\\s*\\/?>/gi,\"\\n\");}else if(node.nodeName===\"BR\"){text+=\"\\n\";}else if(node.nodeType===1){text+=getCellTextWithBreaks(node);}});}console.log(\"🔍 DEBUG - getCellTextWithBreaks resultado:\",text);return text;}const htmlTableToArray=html=>{console.log(\"🔍 DEBUG - HTML recebido para conversão:\",html.substring(0,500));const doc=parser.parseFromString(html,\"text/html\");const rows=[];// Verifica se é a tabela de observações (Template 1)\nif(html.includes('tabela-observacoes')){console.log(\"🔍 DEBUG - Processando tabela de observações do Template 1\");// Para a tabela de observações, pega apenas as linhas com textarea (conteúdo das seções)\nconst contentRows=doc.querySelectorAll(\"tr\");const sections=[];contentRows.forEach((tr,rowIdx)=>{const textarea=tr.querySelector(\"textarea\");if(textarea&&textarea.value!==undefined){const sectionContent=textarea.value||'';console.log(\"\\uD83D\\uDCDD Se\\xE7\\xE3o \".concat(sections.length+1,\" extra\\xEDda:\"),sectionContent.substring(0,100)+\"...\");sections.push([sectionContent]);}});// Garante que temos exatamente 5 seções na ordem correta\nwhile(sections.length<5){sections.push(['']);}console.log(\"🔍 DEBUG - Seções finais:\",sections.map((s,i)=>\"\".concat(i+1,\": \").concat(s[0]?s[0].substring(0,30):'vazio',\"...\")));return sections;}else{// Para outras tabelas (tabela principal)\ndoc.querySelectorAll(\"tr\").forEach((tr,rowIdx)=>{const cells=[];tr.querySelectorAll(\"th,td\").forEach((cell,colIdx)=>{const cellText=getCellTextWithBreaks(cell);if(colIdx===4){// Coluna de instruções\nconsole.log(\"\\uD83D\\uDD0D DEBUG - Linha \".concat(rowIdx,\", Coluna \").concat(colIdx,\" (Instru\\xE7\\xF5es):\"),cellText);}if(colIdx===3){// Coluna de documentos associados\nconsole.log(\"\\uD83D\\uDD0D DEBUG - Linha \".concat(rowIdx,\", Coluna \").concat(colIdx,\" (Documentos):\"),cellText);}cells.push(cellText);});rows.push(cells);});return rows;}};const mainTableArr=htmlTableToArray(mainTableHtml);const obsTableArr=htmlTableToArray(obsTableHtml);console.log(\"🔍 DEBUG generateNonEditablePdfFromHtml - Histórico recebido:\",history);const headers=mainTableArr[0]||[];const data=mainTableArr.slice(1);// Para a tabela de observações, já temos o formato correto\nconst dataObs=obsTableArr;console.log(\"🔍 DEBUG - Dados finais para PDF:\");console.log(\"  Headers:\",headers);console.log(\"  Data (primeiras 2 linhas):\",data.slice(0,2));console.log(\"  DataObs:\",dataObs.map((obs,i)=>\"\".concat(i+1,\": \").concat(obs[0]?obs[0].substring(0,40):'vazio',\"...\")));console.log(\"  History passado diretamente:\",history);return await generateNonEditablePdf(data,headers,dataObs,title,imageBytes,pathFilename,history);}// Adicione esta função utilitária\nexport function drawProcessHeaderTable(page,font,yPos,donoProcesso,objetivoProcesso,servicosEntrada,servicoSaida){// Larguras das colunas ajustadas\nconst totalWidth=540;const leftColWidth=200;const rightColWidth=totalWidth-leftColWidth;// Calcular altura dinâmica para o objetivo do processo\nconst objetivoWrapped=wrapText(objetivoProcesso||'',font,10,rightColWidth-16);const minRowHeight=35;const lineHeight=12;const padding=10;const objetivoRowHeight=Math.max(minRowHeight,objetivoWrapped.length*lineHeight+padding);const headerHeight=30;const entradaSaidaHeight=25;const contentHeight=120;// DONO DO PROCESSO\npage.drawRectangle({x:xStart,y:yPos-headerHeight,width:leftColWidth,height:headerHeight,color:rgb(0.7,0.7,0.7),borderColor:rgb(0,0,0),borderWidth:1});page.drawRectangle({x:xStart+leftColWidth,y:yPos-headerHeight,width:rightColWidth,height:headerHeight,borderColor:rgb(0,0,0),borderWidth:1});page.drawText('DONO DO PROCESSO',{x:xStart+8,y:yPos-12,size:10,font,color:rgb(0,0,0)});page.drawText('(nomeado):',{x:xStart+8,y:yPos-24,size:10,font,color:rgb(0,0,0)});const donoWrapped=wrapText(donoProcesso||'',font,10,rightColWidth-16);donoWrapped.forEach((line,idx)=>{page.drawText(line,{x:xStart+leftColWidth+8,y:yPos-15-idx*12,size:10,font,color:rgb(0,0,0)});});// OBJETIVO DO PROCESSO\npage.drawRectangle({x:xStart,y:yPos-headerHeight-objetivoRowHeight,width:leftColWidth,height:objetivoRowHeight,color:rgb(0.7,0.7,0.7),borderColor:rgb(0,0,0),borderWidth:1});page.drawRectangle({x:xStart+leftColWidth,y:yPos-headerHeight-objetivoRowHeight,width:rightColWidth,height:objetivoRowHeight,borderColor:rgb(0,0,0),borderWidth:1});page.drawText('OBJETIVO DO PROCESSO:',{x:xStart+8,y:yPos-headerHeight-20,size:10,font,color:rgb(0,0,0)});objetivoWrapped.forEach((line,idx)=>{page.drawText(line,{x:xStart+leftColWidth+8,y:yPos-headerHeight-15-idx*12,size:10,font,color:rgb(0,0,0)});});// SERVIÇOS DE ENTRADAS / SAÍDA - Cabeçalho\npage.drawRectangle({x:xStart,y:yPos-headerHeight-objetivoRowHeight-entradaSaidaHeight,width:leftColWidth,height:entradaSaidaHeight,color:rgb(0.7,0.7,0.7),borderColor:rgb(0,0,0),borderWidth:1});page.drawRectangle({x:xStart+leftColWidth,y:yPos-headerHeight-objetivoRowHeight-entradaSaidaHeight,width:rightColWidth,height:entradaSaidaHeight,color:rgb(0.7,0.7,0.7),borderColor:rgb(0,0,0),borderWidth:1});page.drawText('SERVIÇOS DE ENTRADAS',{x:xStart+8,y:yPos-headerHeight-objetivoRowHeight-16,size:10,font,color:rgb(0,0,0)});page.drawText('SERVIÇO DE SAÍDA',{x:xStart+leftColWidth+8,y:yPos-headerHeight-objetivoRowHeight-16,size:10,font,color:rgb(0,0,0)});// SERVIÇOS DE ENTRADAS / SAÍDA - Conteúdo\npage.drawRectangle({x:xStart,y:yPos-headerHeight-objetivoRowHeight-entradaSaidaHeight-contentHeight,width:leftColWidth,height:contentHeight,borderColor:rgb(0,0,0),borderWidth:1});page.drawRectangle({x:xStart+leftColWidth,y:yPos-headerHeight-objetivoRowHeight-entradaSaidaHeight-contentHeight,width:rightColWidth,height:contentHeight,borderColor:rgb(0,0,0),borderWidth:1});// Texto dos serviços com quebra de linha adequada\nlet fontSize=9;const entradaWrapped=wrapText(servicosEntrada||'',font,fontSize,leftColWidth-16);const saidaWrapped=wrapText(servicoSaida||'',font,fontSize,rightColWidth-16);let entradaY=yPos-headerHeight-objetivoRowHeight-entradaSaidaHeight-15;let saidaY=entradaY;entradaWrapped.forEach((line,idx)=>{if(entradaY-idx*12>yPos-headerHeight-objetivoRowHeight-entradaSaidaHeight-contentHeight+5){page.drawText(line,{x:xStart+8,y:entradaY-idx*12,size:fontSize,font,color:rgb(0,0,0)});}});saidaWrapped.forEach((line,idx)=>{if(saidaY-idx*12>yPos-headerHeight-objetivoRowHeight-entradaSaidaHeight-contentHeight+5){page.drawText(line,{x:xStart+leftColWidth+8,y:saidaY-idx*12,size:fontSize,font,color:rgb(0,0,0)});}});// Retorne a nova posição Y para continuar desenhando abaixo\nreturn yPos-headerHeight-objetivoRowHeight-entradaSaidaHeight-contentHeight-25;}// Função centralizada para o header do processo\nexport function drawProcessHeaderTableCentered(page,font,yPos,donoProcesso,objetivoProcesso,servicosEntrada,servicoSaida,xStartCentered){// Larguras das colunas ajustadas\nconst totalWidth=540;const leftColWidth=200;const rightColWidth=totalWidth-leftColWidth;// Calcular altura dinâmica para o objetivo do processo\nconst objetivoWrapped=wrapText(objetivoProcesso||'',font,10,rightColWidth-16);const minRowHeight=35;const lineHeight=12;const padding=10;const objetivoRowHeight=Math.max(minRowHeight,objetivoWrapped.length*lineHeight+padding);const headerHeight=30;const entradaSaidaHeight=25;const contentHeight=120;// DONO DO PROCESSO\npage.drawRectangle({x:xStartCentered,y:yPos-headerHeight,width:leftColWidth,height:headerHeight,color:rgb(0.7,0.7,0.7),borderColor:rgb(0,0,0),borderWidth:1});page.drawRectangle({x:xStartCentered+leftColWidth,y:yPos-headerHeight,width:rightColWidth,height:headerHeight,borderColor:rgb(0,0,0),borderWidth:1});page.drawText('DONO DO PROCESSO',{x:xStartCentered+8,y:yPos-12,size:10,font,color:rgb(0,0,0)});page.drawText('(nomeado):',{x:xStartCentered+8,y:yPos-24,size:10,font,color:rgb(0,0,0)});const donoWrapped=wrapText(donoProcesso||'',font,10,rightColWidth-16);donoWrapped.forEach((line,idx)=>{page.drawText(line,{x:xStartCentered+leftColWidth+8,y:yPos-15-idx*12,size:10,font,color:rgb(0,0,0)});});// OBJETIVO DO PROCESSO\npage.drawRectangle({x:xStartCentered,y:yPos-headerHeight-objetivoRowHeight,width:leftColWidth,height:objetivoRowHeight,color:rgb(0.7,0.7,0.7),borderColor:rgb(0,0,0),borderWidth:1});page.drawRectangle({x:xStartCentered+leftColWidth,y:yPos-headerHeight-objetivoRowHeight,width:rightColWidth,height:objetivoRowHeight,borderColor:rgb(0,0,0),borderWidth:1});page.drawText('OBJETIVO DO PROCESSO:',{x:xStartCentered+8,y:yPos-headerHeight-20,size:10,font,color:rgb(0,0,0)});objetivoWrapped.forEach((line,idx)=>{page.drawText(line,{x:xStartCentered+leftColWidth+8,y:yPos-headerHeight-15-idx*12,size:10,font,color:rgb(0,0,0)});});// SERVIÇOS DE ENTRADAS / SAÍDA - Cabeçalho\npage.drawRectangle({x:xStartCentered,y:yPos-headerHeight-objetivoRowHeight-entradaSaidaHeight,width:leftColWidth,height:entradaSaidaHeight,color:rgb(0.7,0.7,0.7),borderColor:rgb(0,0,0),borderWidth:1});page.drawRectangle({x:xStartCentered+leftColWidth,y:yPos-headerHeight-objetivoRowHeight-entradaSaidaHeight,width:rightColWidth,height:entradaSaidaHeight,color:rgb(0.7,0.7,0.7),borderColor:rgb(0,0,0),borderWidth:1});page.drawText('SERVIÇOS DE ENTRADAS',{x:xStartCentered+8,y:yPos-headerHeight-objetivoRowHeight-16,size:10,font,color:rgb(0,0,0)});page.drawText('SERVIÇO DE SAÍDA',{x:xStartCentered+leftColWidth+8,y:yPos-headerHeight-objetivoRowHeight-16,size:10,font,color:rgb(0,0,0)});// SERVIÇOS DE ENTRADAS / SAÍDA - Conteúdo\npage.drawRectangle({x:xStartCentered,y:yPos-headerHeight-objetivoRowHeight-entradaSaidaHeight-contentHeight,width:leftColWidth,height:contentHeight,borderColor:rgb(0,0,0),borderWidth:1});page.drawRectangle({x:xStartCentered+leftColWidth,y:yPos-headerHeight-objetivoRowHeight-entradaSaidaHeight-contentHeight,width:rightColWidth,height:contentHeight,borderColor:rgb(0,0,0),borderWidth:1});// Texto dos serviços com quebra de linha adequada\nlet fontSize=9;const entradaWrapped=wrapText(servicosEntrada||'',font,fontSize,leftColWidth-16);const saidaWrapped=wrapText(servicoSaida||'',font,fontSize,rightColWidth-16);let entradaY=yPos-headerHeight-objetivoRowHeight-entradaSaidaHeight-15;let saidaY=entradaY;entradaWrapped.forEach((line,idx)=>{if(entradaY-idx*12>yPos-headerHeight-objetivoRowHeight-entradaSaidaHeight-contentHeight+5){page.drawText(line,{x:xStartCentered+8,y:entradaY-idx*12,size:fontSize,font,color:rgb(0,0,0)});}});saidaWrapped.forEach((line,idx)=>{if(saidaY-idx*12>yPos-headerHeight-objetivoRowHeight-entradaSaidaHeight-contentHeight+5){page.drawText(line,{x:xStartCentered+leftColWidth+8,y:saidaY-idx*12,size:fontSize,font,color:rgb(0,0,0)});}});// Retorne a nova posição Y para continuar desenhando abaixo\nreturn yPos-headerHeight-objetivoRowHeight-entradaSaidaHeight-contentHeight-25;}","map":{"version":3,"names":["createBasePdf","wrapText","pageSize","xStart","yStart","addHeader","drawTableLines","drawHeaders","drawObsTable","getObsRows","colWidths","obsColWidth","obsRowHeight","spaceBetweenTables","drawTemplate2Table","colWidthTemplate2","drawObsTableWithHeaders","calculateObsTableHeight","PDFDocument","StandardFonts","rgb","PDFName","PDFArray","PDFDict","createTextFieldWithAppearance","form","fieldName","text","font","fontSize","arguments","length","undefined","multiline","textField","createTextField","enableMultiline","setText","setFontSize","updateAppearances","error","console","warn","concat","e","generateEditablePdf","_ref","templateType","data","headers","dataObs","headersObs","atividades","donoProcesso","objetivoProcesso","indicadores","servicosEntrada","servicoSaida","title","imageBytes","pathFilename","history","log","generateEditablePdfTemplate2","generateEditablePdfTemplate1","maxHeightForFirstTable","pdfDoc","page","getForm","safeData","Array","isArray","safeHeaders","obsRows","obsTableHeightReal","pageBottomMargin","shouldBreakPage","yObs","maxWidth","lineHeight","safeDataObs","from","_","i","rowHeightsObs","map","row","lines","Math","max","addToPage","x","y","width","height","textColor","backgroundColor","border","currentPage","currentYPos","addPage","rowHeights","fill","xPos","yHeaders","headerHeight","forEach","header","col","colWidth","drawRectangle","color","borderColor","borderWidth","split","totalTextHeight","startY","line","idx","textWidth","widthOfTextAtSize","textX","textY","drawText","size","yPos","save","_ref2","donoField","objetivoField","entradaField","saidaField","camposY","indicadoresY","indicador","index","indicadorFields","generateNonEditablePdfTemplate2","activePage","safeAtividades","safeIndicadores","safeDonoProcesso","safeObjetivoProcesso","safeServicosEntrada","safeServicoSaida","dashToEmpty","val","s","toString","test","atividadesClean","indicadoresClean","filter","donoProcessoClean","objetivoProcessoClean","servicosEntradaClean","servicoSaidaClean","trim","pageWidth","tableWidth","xStartCentered","drawProcessHeaderTableCentered","baseRowHeight","yPos2","getRowHeight","rowData","maxLines","cellText","colIdx","wrappedLines","marginBottom","createNewPage","newPage","drawActivityHeaders","pg","yTop","xPosLocal","headerLines","lineIdx","currentY","rowHeight","dataX","availableWidth","truncatedText","slice","drawIndicatorsHeader","processedIndicadores","includes","indicadorHeight","espacoNecessario","drawLine","start","end","thickness","wrapTextToWidth","cleanText","replace","words","currentLine","word","testLine","testWidth","push","subWord","substring","charAt","historyHeaders","historyColWidths","entry","rowIdx","descricao","mudouDe","para","matchAlteracao","match","parts","historyData","utilizador","acao","cellLines","maxLinesInRow","cellData","generateNonEditablePdf","firstPage","obsResult","currentYPosition","maxWidths","w","removeEmojis","wrappedData","cell","textForWrapping","startsWith","url","rowLineOffsets","rowHeightsDynamic","heights","isNaN","maxHeight","unshift","totalWidth","reduce","a","b","rowIndex","headerDrawn","drawTableHeaders","headerFontSize","headerLineHeight","drawTableGrid","yStartTable","numRows","drawTopLine","totalVerticalHeight","j","drawRowChunk","availableHeight","drawHeaderOnThisPage","yCursor","headerHeightLocal","maxLinesFit","floor","maxRemainingLines","linesThisChunk","min","chunkHeight","xPosGrid","allLines","offset","remaining","drawCount","cellBottom","drawnHeight","yAfter","rowsThisPage","heightSum","nextRowHeight","pageUsableHeight","availableHere","some","nextPage","rowsToDraw","willDrawHeader","yData","originalCellText","isVideoLink","underlineY","linkRect","linkAnnot","context","obj","Type","Subtype","Rect","A","S","URI","Border","F","pageRef","ref","pageDict","lookup","annotsRef","get","of","annotsArray","set","validLines","textError","remainingSpace","cellWidth","avgCharWidth","maxCharsPerLine","generateNonEditablePdfFromHtml","mainTableHtml","obsTableHtml","parser","DOMParser","getCellTextWithBreaks","hasSpecialComponent","querySelector","hiddenInput","value","containerEl","getAttribute","textContent","innerText","childNodes","node","nodeType","nodeValue","nodeName","htmlTableToArray","html","doc","parseFromString","rows","contentRows","querySelectorAll","sections","tr","textarea","sectionContent","cells","mainTableArr","obsTableArr","obs","drawProcessHeaderTable","leftColWidth","rightColWidth","objetivoWrapped","minRowHeight","padding","objetivoRowHeight","entradaSaidaHeight","contentHeight","donoWrapped","entradaWrapped","saidaWrapped","entradaY","saidaY"],"sources":["C:/Users/António Gonçalves/Desktop/Magna-ISO9001-Frontend/src/utils/pdfGenerate.js"],"sourcesContent":["import { createBasePdf, wrapText, pageSize, xStart, yStart, addHeader } from './pdfBase';\r\nimport { drawTableLines, drawHeaders, drawObsTable, getObsRows, colWidths, obsColWidth, obsRowHeight, spaceBetweenTables, drawTemplate2Table, colWidthTemplate2 } from './pdfTables';\r\nimport { drawObsTableWithHeaders, calculateObsTableHeight } from './pdfObsTable';\r\nimport { PDFDocument, StandardFonts, rgb, PDFName, PDFArray, PDFDict } from 'pdf-lib';\r\n\r\n// Helper function to create text field with proper appearance\r\nfunction createTextFieldWithAppearance(form, fieldName, text, font, fontSize = 10, multiline = false) {\r\n  const textField = form.createTextField(fieldName);\r\n  if (multiline) {\r\n    textField.enableMultiline();\r\n  }\r\n  textField.setText(text || \"\");\r\n  \r\n  // Try to set appearance safely with multiple fallback strategies\r\n  try {\r\n    // First try: Set font size, then update appearances\r\n    textField.setFontSize(fontSize);\r\n    textField.updateAppearances(font);\r\n  } catch (error) {\r\n    console.warn(`Strategy 1 failed for field ${fieldName}:`, error);\r\n    try {\r\n      // Second try: Just update appearances without setting font size\r\n      textField.updateAppearances(font);\r\n    } catch (e) {\r\n      console.warn(`Strategy 2 failed for field ${fieldName}:`, e);\r\n      // Final fallback: Do nothing, field will use default appearance\r\n      console.warn(`Using default appearance for field ${fieldName}`);\r\n    }\r\n  }\r\n  \r\n  return textField;\r\n}\r\n\r\n// Função principal para gerar PDF editável\r\nexport async function generateEditablePdf({\r\n  templateType = 1,\r\n  data,\r\n  headers,\r\n  dataObs,\r\n  headersObs,\r\n  atividades,\r\n  donoProcesso,\r\n  objetivoProcesso,\r\n  indicadores,\r\n  servicosEntrada,\r\n  servicoSaida,\r\n  title = \"\", // Added missing title parameter\r\n  imageBytes = null, // Novo parâmetro para imagem\r\n  pathFilename = \"\", // Novo parâmetro para caminho do ficheiro\r\n  history = [] // Novo parâmetro para histórico\r\n}) {\r\n    console.log(\"🎯 generateEditablePdf recebeu pathFilename:\", pathFilename);\r\n    console.log(\"🔍 generateEditablePdf recebeu history:\", history);\r\n    console.log(\"🔍 generateEditablePdf history length:\", history?.length);\r\n\r\n  if (templateType === 2) {\r\n    return await generateEditablePdfTemplate2({\r\n      atividades,\r\n      donoProcesso,\r\n      objetivoProcesso,\r\n      indicadores,\r\n      servicosEntrada,\r\n      servicoSaida,\r\n      title,\r\n      imageBytes,\r\n      pathFilename,\r\n      history\r\n    });\r\n  } else {\r\n    return await generateEditablePdfTemplate1(data, headers, dataObs, headersObs, title, imageBytes, pathFilename, 400, history);\r\n  }\r\n}\r\n\r\n\r\n// Renomeie a função antiga para Template1\r\nexport async function generateEditablePdfTemplate1(data, headers, dataObs, headersObs, title = \"Procedimento\", imageBytes = null, pathFilename = \"\", maxHeightForFirstTable = 400, history = []) {\r\n  const { pdfDoc, page, font } = await createBasePdf(title, imageBytes, pathFilename);\r\n  const form = pdfDoc.getForm();\r\n  console.log(\"🎯 generateEditablePdf recebeu pathFilename:\", pathFilename); \r\n\r\n  // Validate and ensure data is an array\r\n  const safeData = Array.isArray(data) ? data : [];\r\n  const safeHeaders = Array.isArray(headers) ? headers : [];\r\n\r\n  // Use obsRows dinâmico e a nova função de cálculo de altura\r\n  const obsRows = getObsRows(dataObs);\r\n  const obsTableHeightReal = calculateObsTableHeight(dataObs, font);\r\n  \r\n  // Configuração do limiar de altura para quebra de página\r\n  // Se a primeira tabela (observações) exceder esta altura, a segunda tabela vai para nova página\r\n  const pageBottomMargin = 50; // Margem inferior da página\r\n  const shouldBreakPage = obsTableHeightReal > maxHeightForFirstTable;\r\n  \r\n  console.log(\"obsRows:\", obsRows);\r\n  console.log(\"obsTableHeightReal:\", obsTableHeightReal);\r\n  console.log(\"maxHeightForFirstTable:\", maxHeightForFirstTable);\r\n  console.log(\"shouldBreakPage:\", shouldBreakPage);\r\n  console.log(\"data.length:\", safeData.length);\r\n  console.log(\"yStart:\", yStart);\r\n  console.log(\"spaceBetweenTables:\", spaceBetweenTables);\r\n\r\n  // Desenha a tabela de observações usando a função existente (sem headers cinza para editável)\r\n  drawObsTable(page, font, dataObs);\r\n\r\n  let yObs = yStart;\r\n  const fontSize = 8;  // Fonte para ser igual ao PDF não editável\r\n  const maxWidth = obsColWidth[0] - 8;\r\n  const lineHeight = fontSize + 2;\r\n  const safeDataObs = Array.from({ length: obsRows }, (_, i) =>\r\n    Array.isArray(dataObs) && Array.isArray(dataObs[i]) ? dataObs[i] : [\"\"]\r\n  );\r\n  const rowHeightsObs = safeDataObs.map(row => {\r\n    const text = row[0] || '';\r\n    const lines = wrapText(text, font, fontSize, maxWidth);\r\n    return Math.max(obsRowHeight, lines.length * lineHeight + 16);\r\n  });\r\n  \r\n  // Criar campos de formulário para a tabela de observações\r\n  for (let row = 0; row < obsRows; row++) {\r\n    const fieldName = `table1_r${row + 1}`;\r\n    const textField = createTextFieldWithAppearance(form, fieldName, dataObs && dataObs[row] ? dataObs[row][0] : \"\", font, 8, true);\r\n    \r\n    // Add to page\r\n    textField.addToPage(page, {\r\n      x: xStart + 2,\r\n      y: yObs - rowHeightsObs[row] + 2,\r\n      width: obsColWidth[0] - 4,\r\n      height: rowHeightsObs[row] - 4,\r\n      textColor: rgb(0, 0, 0),\r\n      backgroundColor: rgb(1, 1, 1),\r\n      border: undefined,\r\n    });\r\n    \r\n    yObs -= rowHeightsObs[row];\r\n  }\r\n\r\n  // Determina se precisa criar nova página para segunda tabela\r\n  let currentPage = page;\r\n  let currentYPos = yStart - obsTableHeightReal - spaceBetweenTables;\r\n  \r\n  if (shouldBreakPage) {\r\n    // Cria nova página para a segunda tabela\r\n    currentPage = pdfDoc.addPage(pageSize);\r\n    \r\n    // Adiciona cabeçalho na nova página se necessário\r\n    if (imageBytes || pathFilename) {\r\n      await addHeader(currentPage, font, title, imageBytes, pathFilename);\r\n    }\r\n    \r\n    currentYPos = yStart; // Reset da posição Y para o topo da nova página\r\n    console.log(\"🔄 Nova página criada para segunda tabela. yPos resetado para:\", currentYPos);\r\n  }\r\n\r\n  // Gere dinamicamente os rowHeights para a tabela principal\r\n  const rowHeights = Array(safeData.length + 1).fill(50); // +1 para o header\r\n\r\n  // Desenha tabela principal na página apropriada\r\n  // Primeiro desenha as linhas da tabela\r\n  drawTableLines(currentPage, shouldBreakPage ? 0 : obsTableHeightReal, shouldBreakPage ? yStart : null, rowHeights);\r\n  \r\n  // DEPOIS desenha os headers com fundo cinza por cima (igual Template 2)\r\n  let xPos = xStart;\r\n  const yHeaders = shouldBreakPage ? yStart : (yStart - obsTableHeightReal - spaceBetweenTables);\r\n  const headerHeight = rowHeights[0] || 50;\r\n  \r\n  safeHeaders.forEach((header, col) => {\r\n    const colWidth = colWidths[col] || 100;\r\n    \r\n    // Quadrado cinza do header (igual Template 2)\r\n    currentPage.drawRectangle({\r\n      x: xPos,\r\n      y: yHeaders - headerHeight,\r\n      width: colWidth,\r\n      height: headerHeight,\r\n      color: rgb(0.7, 0.7, 0.7),\r\n      borderColor: rgb(0, 0, 0),\r\n      borderWidth: 1,\r\n    });\r\n    \r\n    // Texto do header\r\n    const lines = header.split('\\n');\r\n    const fontSize = 8;\r\n    const lineHeight = 10;\r\n    const totalTextHeight = lines.length * lineHeight;\r\n    let startY = yHeaders - ((headerHeight - totalTextHeight) / 2) - fontSize;\r\n\r\n    lines.forEach((line, idx) => {\r\n      const textWidth = font.widthOfTextAtSize(line, fontSize);\r\n      const textX = xPos + (colWidth - textWidth) / 2;\r\n      const textY = startY - idx * lineHeight;\r\n\r\n      currentPage.drawText(line, {\r\n        x: textX,\r\n        y: textY,\r\n        size: fontSize,\r\n        font,\r\n        color: rgb(0, 0, 0),\r\n      });\r\n    });\r\n\r\n    xPos += colWidth;\r\n  });\r\n\r\n  let yPos = shouldBreakPage ? yStart : (yStart - obsTableHeightReal - spaceBetweenTables);\r\n  console.log(\"yPos inicial para tabela principal:\", yPos);\r\n  console.log(\"yStart:\", yStart, \"obsTableHeightReal:\", obsTableHeightReal, \"spaceBetweenTables:\", spaceBetweenTables);\r\n  \r\n  for (let row = 0; row < safeData.length; row++) {\r\n    let xPos = xStart;\r\n    for (let col = 0; col < 5; col++) {\r\n      const fieldName = `table2_r${row + 2}_c${col + 1}`;\r\n      const textField = createTextFieldWithAppearance(form, fieldName, safeData[row] && safeData[row][col] ? safeData[row][col] : \"\", font, 8, true);\r\n      \r\n      // Add to page\r\n      textField.addToPage(currentPage, {\r\n        x: xPos + 2,\r\n        y: yPos - rowHeights[row + 1] + 2,\r\n        width: colWidths[col] - 4,\r\n        height: rowHeights[row + 1] - 4,\r\n        textColor: rgb(0, 0, 0),\r\n        backgroundColor: rgb(1, 1, 1),\r\n        border: undefined,\r\n      });\r\n      \r\n      xPos += colWidths[col];\r\n    }\r\n    yPos -= rowHeights[row + 1];\r\n  }\r\n\r\n  return await pdfDoc.save();\r\n}\r\n\r\n// Implemente a função para Template2 conforme sugerido antes\r\n\r\nexport async function generateEditablePdfTemplate2({ atividades, donoProcesso, objetivoProcesso, indicadores, servicosEntrada, servicoSaida, title = \"Procedimento\", imageBytes = null, pathFilename = \"\", history = [] }) {\r\n  const { pdfDoc, page, font } = await createBasePdf(title, imageBytes, pathFilename);\r\n  const form = pdfDoc.getForm();\r\n\r\n  console.log(\"Template2 - servicosEntrada recebido:\", servicosEntrada);\r\n  console.log(\"Template2 - servicoSaida recebido:\", servicoSaida);\r\n\r\n  let yPos = yStart;\r\n\r\n  // DONO DO PROCESSO\r\n  page.drawText(\"DONO DO PROCESSO\\n(nomeado):\", { x: xStart, y: yPos, size: 12, font });\r\n  const donoField = createTextFieldWithAppearance(form, 'dono_processo', donoProcesso, font, 10, true);\r\n  donoField.addToPage(page, { x: xStart + 320, y: yPos - 8, width: 230, height: 28 });\r\n  yPos -= 38;\r\n\r\n  // OBJETIVO DO PROCESSO\r\n  page.drawText(\"OBJETIVO DO PROCESSO:\", { x: xStart, y: yPos, size: 12, font });\r\n  const objetivoField = createTextFieldWithAppearance(form, 'objetivo_processo', objetivoProcesso, font, 10, true);\r\n  objetivoField.addToPage(page, { x: xStart + 320, y: yPos - 8, width: 230, height: 28 });\r\n  yPos -= 38;\r\n\r\n  // SERVIÇOS DE ENTRADAS / SAÍDA\r\n  page.drawText(\"SERVIÇOS DE ENTRADAS\", { x: xStart, y: yPos, size: 12, font });\r\n  page.drawText(\"SERVIÇO DE SAÍDA\", { x: xStart + 320, y: yPos, size: 12, font });\r\n  const entradaField = createTextFieldWithAppearance(form, 'servicos_entrada', servicosEntrada, font, 10, true);\r\n  console.log(\"Campo servicos_entrada criado com valor:\", servicosEntrada || \"\");\r\n  entradaField.addToPage(page, { x: xStart, y: yPos - 28, width: 290, height: 48 });\r\n  const saidaField = createTextFieldWithAppearance(form, 'servico_saida', servicoSaida, font, 10, true);\r\n  console.log(\"Campo servico_saida criado com valor:\", servicoSaida || \"\");\r\n  saidaField.addToPage(page, { x: xStart + 320, y: yPos - 28, width: 230, height: 48 });\r\n  yPos -= 88;\r\n\r\n  // Cabeçalhos da tabela de atividades\r\n  const headers = [\r\n    \"Principais Atividades\",\r\n    \"Procedimentos Associados\",\r\n    \"Requisitos ISO 9001\",\r\n    \"Requisitos DGERT\",\r\n    \"Requisitos EQAVET\",\r\n    \"Requisitos CQCQ\"\r\n  ];\r\n\r\n  // Desenha grid e cabeçalhos da tabela de atividades\r\n  drawTemplate2Table(page, font, yPos, atividades, headers);\r\n\r\n  // Campos editáveis para cada célula de atividades\r\n  let camposY = yPos - 20; // primeira linha de dados\r\n  for (let row = 0; row < atividades.length; row++) {\r\n    let xPos = xStart;\r\n    for (let col = 0; col < atividades[row].length; col++) {\r\n      const fieldName = `atividades_r${row + 1}_c${col + 1}`;\r\n      const textField = createTextFieldWithAppearance(form, fieldName, atividades[row][col], font, 8, false);\r\n      textField.addToPage(page, { x: xPos + 2, y: camposY + 2, width: colWidthTemplate2[col] - 4, height: 16 });\r\n      xPos += colWidthTemplate2[col];\r\n    }\r\n    camposY -= 20;\r\n  }\r\n\r\n  // Indicadores\r\n  let indicadoresY = camposY - 32;\r\n  page.drawText(\"Indicadores de monitorização do processo\", { x: xStart, y: indicadoresY, size: 12, font });\r\n  indicadoresY -= 22;\r\n  \r\n  // Tratar indicadores como array ou objeto\r\n  if (Array.isArray(indicadores)) {\r\n    // Se for array, criar campos dinamicamente\r\n    indicadores.forEach((indicador, index) => {\r\n      const fieldName = `indicadores_r${index + 1}`;\r\n      const textField = createTextFieldWithAppearance(form, fieldName, indicador || '', font, 10, true);\r\n      textField.addToPage(page, { x: xStart, y: indicadoresY, width: 550, height: 28 });\r\n      indicadoresY -= 32;\r\n    });\r\n  } else {\r\n    // Se for objeto, usar os 3 campos fixos\r\n    const indicadorFields = ['indicadores_r1', 'indicadores_r2', 'indicadores_r3'];\r\n    indicadorFields.forEach((fieldName) => {\r\n      const textField = createTextFieldWithAppearance(form, fieldName, indicadores[fieldName] || '', font, 10, true);\r\n      textField.addToPage(page, { x: xStart, y: indicadoresY, width: 550, height: 28 });\r\n      indicadoresY -= 32;\r\n    });\r\n  }\r\n\r\n  return await pdfDoc.save();\r\n}\r\n\r\n// Função para gerar PDF não editável do Template 2\r\nexport async function generateNonEditablePdfTemplate2(atividades, donoProcesso, objetivoProcesso, indicadores, servicosEntrada, servicoSaida, title = \"Procedimento\", imageBytes = null, pathFilename, history = []) {\r\n  console.log(\"🔍 DEBUG generateNonEditablePdfTemplate2 - history recebido:\", history);\r\n  console.log(\"🔍 DEBUG generateNonEditablePdfTemplate2 - history length:\", history?.length);\r\n  \r\n  const { pdfDoc, page, font } = await createBasePdf(title, imageBytes, pathFilename);\r\n  let activePage = page; // Para controle de páginas no histórico\r\n\r\n  // Validações de entrada\r\n  const safeAtividades = Array.isArray(atividades) && atividades.length > 0 ? atividades : [['', '', '', '', '', '']];\r\n  const safeIndicadores = Array.isArray(indicadores) && indicadores.length > 0 ? indicadores : [''];\r\n  const safeDonoProcesso = donoProcesso || '';\r\n  const safeObjetivoProcesso = objetivoProcesso || '';\r\n  const safeServicosEntrada = servicosEntrada || '';\r\n  const safeServicoSaida = servicoSaida || '';\r\n\r\n  // Sanitizador: tratar valores apenas com '-' (ou traços/espaços) como vazios no Template 2 (não editável)\r\n  const dashToEmpty = (val) => {\r\n    const s = (val ?? '').toString();\r\n    // Se contém apenas espaços e traços (inclui diferentes tipos de traço), considera vazio\r\n    return /^[\\s\\-–—]*$/.test(s) ? '' : s;\r\n  };\r\n\r\n  // Aplica sanitização a todos os campos relevantes do Template 2\r\n  const atividadesClean = safeAtividades.map(row => Array.isArray(row) ? row.map(dashToEmpty) : ['', '', '', '', '', '']);\r\n  const indicadoresClean = safeIndicadores.map(dashToEmpty).filter(text => text !== '');\r\n  const donoProcessoClean = dashToEmpty(safeDonoProcesso);\r\n  const objetivoProcessoClean = dashToEmpty(safeObjetivoProcesso);\r\n  const servicosEntradaClean = dashToEmpty(safeServicosEntrada);\r\n  const servicoSaidaClean = dashToEmpty(safeServicoSaida);\r\n\r\n\r\n  console.log(\"🎯 generateNonEditablePdfTemplate2 - dados recebidos:\");\r\n  console.log(\"📋 atividades:\", safeAtividades);\r\n  console.log(\"👤 donoProcesso:\", safeDonoProcesso);\r\n  console.log(\"🎯 objetivoProcesso (IMPORTANTE):\", safeObjetivoProcesso);\r\n  console.log(\"📊 indicadores:\", safeIndicadores);\r\n  console.log(\"📥 servicosEntrada:\", safeServicosEntrada);\r\n  console.log(\"📤 servicoSaida:\", safeServicoSaida);\r\n  \r\n  // Validação adicional para objetivos\r\n  if (!safeObjetivoProcesso || safeObjetivoProcesso.trim() === '') {\r\n    console.warn(\"⚠️ AVISO: Objetivo do processo está vazio ou indefinido!\");\r\n  }\r\n\r\n  // Calcula posição centralizada para as tabelas\r\n  const pageWidth = pageSize[0];\r\n  const tableWidth = 540;\r\n  const xStartCentered = (pageWidth - tableWidth) / 2;\r\n\r\n  // Usar a função utilitária para desenhar a tabela de cabeçalho do processo (centralizada)\r\n  let yPos = drawProcessHeaderTableCentered(page, font, yStart, donoProcessoClean, objetivoProcessoClean, servicosEntradaClean, servicoSaidaClean, xStartCentered);\r\n  \r\n  console.log(\"yPos após header:\", yPos); // Debug\r\n\r\n  // Headers da tabela de atividades\r\n  const headers = [\r\n    \"Principais\\nAtividades\",\r\n    \"Procedimentos\\nAssociados\", \r\n    \"Requisitos\\nISO 9001\",\r\n    \"Requisitos\\nDGERT\",\r\n    \"Requisitos\\nEQAVET\",\r\n    \"Requisitos\\nCQCQ\"\r\n  ];\r\n\r\n  // Desenha tabela de atividades (paginação e centralizada)\r\n  const baseRowHeight = 25;\r\n  let yPos2 = yPos - 1;\r\n\r\n  // Calcula altura dinâmica para cada linha com base no conteúdo\r\n  const getRowHeight = (rowData) => {\r\n    let maxLines = 1;\r\n    rowData.forEach((cellText, colIdx) => {\r\n      const wrappedLines = wrapText((cellText || ''), font, 8, colWidthTemplate2[colIdx] - 8);\r\n      maxLines = Math.max(maxLines, wrappedLines.length);\r\n    });\r\n    return Math.max(baseRowHeight, maxLines * 10 + 10);\r\n  };\r\n\r\n  // Calcula alturas de todas as linhas\r\n  const rowHeights = atividadesClean.map(row => getRowHeight(row));\r\n  const headerHeight = 35;\r\n\r\n  // Helpers para paginação\r\n  const marginBottom = 25;\r\n  let currentPage = page;\r\n\r\n  const createNewPage = async () => {\r\n    const newPage = pdfDoc.addPage([pageSize[0], pageSize[1]]);\r\n    await addHeader(newPage, font, title, imageBytes, pathFilename);\r\n    return newPage;\r\n  };\r\n\r\n  const drawActivityHeaders = (pg, yTop) => {\r\n    let xPosLocal = xStartCentered;\r\n    headers.forEach((header, idx) => {\r\n      // Fundo do cabeçalho\r\n      pg.drawRectangle({\r\n        x: xPosLocal,\r\n        y: yTop - headerHeight,\r\n        width: colWidthTemplate2[idx],\r\n        height: headerHeight,\r\n        color: rgb(0.7, 0.7, 0.7),\r\n        borderColor: rgb(0, 0, 0),\r\n        borderWidth: 1,\r\n      });\r\n      // Texto\r\n      const headerLines = header.split('\\n');\r\n      headerLines.forEach((line, lineIdx) => {\r\n        pg.drawText(line, {\r\n          x: xPosLocal + 4,\r\n          y: yTop - 12 - (lineIdx * 10),\r\n          size: 9,\r\n          font,\r\n          color: rgb(0, 0, 0),\r\n        });\r\n      });\r\n      xPosLocal += colWidthTemplate2[idx];\r\n    });\r\n  };\r\n\r\n  // Desenha primeira página de atividades\r\n  drawActivityHeaders(currentPage, yPos2);\r\n  let currentY = yPos2 - headerHeight;\r\n\r\n  for (let row = 0; row < atividadesClean.length; row++) {\r\n    const rowHeight = rowHeights[row];\r\n\r\n    // Verifica espaço; se não couber, cria nova página e redesenha headers\r\n    if (currentY - rowHeight < marginBottom) {\r\n      currentPage = await createNewPage();\r\n      drawActivityHeaders(currentPage, yStart);\r\n      currentY = yStart - headerHeight;\r\n    }\r\n\r\n    let dataX = xStartCentered;\r\n    // Células da linha\r\n    for (let col = 0; col < atividadesClean[row].length; col++) {\r\n      currentPage.drawRectangle({\r\n        x: dataX,\r\n        y: currentY - rowHeight,\r\n        width: colWidthTemplate2[col],\r\n        height: rowHeight,\r\n        borderColor: rgb(0, 0, 0),\r\n        borderWidth: 1,\r\n      });\r\n\r\n      const cellText = atividadesClean[row][col] || '';\r\n      const wrappedLines = wrapText(cellText, font, 8, colWidthTemplate2[col] - 8);\r\n\r\n      wrappedLines.forEach((line, lineIdx) => {\r\n        if (lineIdx < 8) {\r\n          const availableWidth = colWidthTemplate2[col] - 8;\r\n          const textWidth = font.widthOfTextAtSize(line, 8);\r\n          if (textWidth <= availableWidth) {\r\n            currentPage.drawText(line, {\r\n              x: dataX + 4,\r\n              y: currentY - 15 - (lineIdx * 10),\r\n              size: 8,\r\n              font,\r\n              color: rgb(0, 0, 0),\r\n            });\r\n          } else {\r\n            let truncatedText = line;\r\n            while (font.widthOfTextAtSize(truncatedText + '...', 8) > availableWidth && truncatedText.length > 0) {\r\n              truncatedText = truncatedText.slice(0, -1);\r\n            }\r\n            currentPage.drawText(truncatedText + (truncatedText.length < line.length ? '...' : ''), {\r\n              x: dataX + 4,\r\n              y: currentY - 15 - (lineIdx * 10),\r\n              size: 8,\r\n              font,\r\n              color: rgb(0, 0, 0),\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      dataX += colWidthTemplate2[col];\r\n    }\r\n    currentY -= rowHeight;\r\n  }\r\n\r\n  // Atualiza yPos para continuar com indicadores\r\n  yPos = currentY;\r\n\r\n  // Desenha indicadores com paginação\r\n  yPos -= 50;\r\n\r\n  const drawIndicatorsHeader = (pg, yTop) => {\r\n    pg.drawRectangle({\r\n      x: xStartCentered,\r\n      y: yTop - 25,\r\n      width: 540,\r\n      height: 25,\r\n      color: rgb(0.7, 0.7, 0.7),\r\n      borderColor: rgb(0, 0, 0),\r\n      borderWidth: 1,\r\n    });\r\n    pg.drawText(\"Indicadores de monitorização do processo\", {\r\n      x: xStartCentered + 10,\r\n      y: yTop - 15,\r\n      size: 10,\r\n      font,\r\n      color: rgb(0, 0, 0),\r\n    });\r\n  };\r\n\r\n  // Garante espaço para o header dos indicadores\r\n  if (yPos - 25 < marginBottom) {\r\n    currentPage = await createNewPage();\r\n    yPos = yStart;\r\n  }\r\n  drawIndicatorsHeader(currentPage, yPos);\r\n  yPos -= 25;\r\n  \r\n  // Desenha indicadores com altura dinâmica\r\n  const processedIndicadores = indicadoresClean.slice(0, 10); // Limita a 10 indicadores e remove '-'\r\n  for (let idx = 0; idx < processedIndicadores.length; idx++) {\r\n    const indicador = processedIndicadores[idx];\r\n    const text = (indicador || '').toString().trim();\r\n    if (text && text !== 'testestesteste' && !text.includes('teste')) { // Filtro de segurança\r\n      const lines = wrapText(text, font, 9, 520);\r\n      const indicadorHeight = Math.max(30, lines.length * 12 + 15);\r\n\r\n      // Nova página se não couber\r\n      if (yPos - indicadorHeight < marginBottom) {\r\n        currentPage = await createNewPage();\r\n        // Header de indicadores no topo da nova página\r\n        drawIndicatorsHeader(currentPage, yStart);\r\n        yPos = yStart - 25;\r\n      }\r\n\r\n      // Desenha a célula do indicador\r\n      currentPage.drawRectangle({\r\n        x: xStartCentered,\r\n        y: yPos - indicadorHeight,\r\n        width: 540,\r\n        height: indicadorHeight,\r\n        borderColor: rgb(0, 0, 0),\r\n        borderWidth: 1,\r\n      });\r\n      \r\n      // Desenha o texto do indicador linha por linha\r\n      lines.forEach((line, lineIdx) => {\r\n        if (lineIdx < 10) { // Limita a 10 linhas por indicador\r\n          // Calcula a largura disponível para o texto\r\n          const availableWidth = 520; // 540 - 20 (10px de margem de cada lado)\r\n          \r\n          // Verifica se o texto cabe na largura disponível\r\n          const textWidth = font.widthOfTextAtSize(line, 9);\r\n          \r\n          if (textWidth <= availableWidth) {\r\n            // Texto cabe normalmente\r\n            currentPage.drawText(line, {\r\n              x: xStartCentered + 10,\r\n              y: yPos - 15 - (lineIdx * 12),\r\n              size: 9,\r\n              font,\r\n              color: rgb(0, 0, 0),\r\n            });\r\n          } else {\r\n            // Texto muito longo, trunca com reticências\r\n            let truncatedText = line;\r\n            while (font.widthOfTextAtSize(truncatedText + '...', 9) > availableWidth && truncatedText.length > 0) {\r\n              truncatedText = truncatedText.slice(0, -1);\r\n            }\r\n            \r\n            currentPage.drawText(truncatedText + (truncatedText.length < line.length ? '...' : ''), {\r\n              x: xStartCentered + 10,\r\n              y: yPos - 15 - (lineIdx * 12),\r\n              size: 9,\r\n              font,\r\n              color: rgb(0, 0, 0),\r\n            });\r\n          }\r\n        }\r\n      });\r\n      \r\n      yPos -= indicadorHeight;\r\n    }\r\n  }\r\n\r\n  // Desenhar histórico de alterações se existir (Template 2)\r\n  // Sempre na base do documento, depois de todas as tabelas\r\n  if (history && history.length > 0) {\r\n    console.log(\"🔍 DEBUG Template2 - Desenhando histórico de alterações:\", history.length, \"entradas\");\r\n    \r\n    // Garantir espaço suficiente - sempre colocar numa nova secção\r\n    yPos -= 60; // Mais espaço antes do histórico\r\n    \r\n    // Se não há espaço suficiente, criar nova página\r\n    const marginBottom = 50;\r\n    const espacoNecessario = 150; // Espaço mínimo para título + algumas linhas\r\n    \r\n    if (yPos - espacoNecessario < marginBottom) {\r\n      console.log(\"📄 Template2 - Criando nova página para histórico\");\r\n      const newPage = pdfDoc.addPage([pageSize[0], pageSize[1]]);\r\n      yPos = yStart - 80; // Começar mais abaixo na nova página\r\n      activePage = newPage;\r\n    }\r\n    \r\n    // Linha separadora antes do histórico\r\n    activePage.drawLine({\r\n      start: { x: xStart, y: yPos + 20 },\r\n      end: { x: xStart + 540, y: yPos + 20 },\r\n      thickness: 1,\r\n      color: rgb(0.7, 0.7, 0.7),\r\n    });\r\n    \r\n    // Título do histórico com destaque\r\n    activePage.drawText('Histórico de Alterações', {\r\n      x: xStart,\r\n      y: yPos,\r\n      size: 14,\r\n      font,\r\n      color: rgb(0, 0, 0),\r\n    });\r\n    yPos -= 30;\r\n    \r\n    // Cabeçalhos da tabela de histórico\r\n    // Função para quebrar texto por largura real da célula\r\n    function wrapTextToWidth(text, maxWidth, font, fontSize) {\r\n      if (!text) return [''];\r\n      \r\n      // Remover caracteres de quebra de linha e outros caracteres não suportados\r\n      const cleanText = text.replace(/[\\n\\r\\t]/g, ' ').replace(/\\s+/g, ' ').trim();\r\n      if (!cleanText) return [''];\r\n      \r\n      const words = cleanText.split(' ');\r\n      const lines = [];\r\n      let currentLine = '';\r\n      \r\n      words.forEach(word => {\r\n        const testLine = currentLine ? currentLine + ' ' + word : word;\r\n        try {\r\n          const testWidth = font.widthOfTextAtSize(testLine, fontSize);\r\n          if (testWidth <= maxWidth) {\r\n            currentLine = testLine;\r\n          } else {\r\n            if (currentLine) lines.push(currentLine);\r\n            // Se a palavra sozinha é maior que a célula, quebra a palavra\r\n            try {\r\n              if (font.widthOfTextAtSize(word, fontSize) > maxWidth) {\r\n                let subWord = word;\r\n                while (subWord.length > 0) {\r\n                  let i = 1;\r\n                  while (i <= subWord.length) {\r\n                    try {\r\n                      if (font.widthOfTextAtSize(subWord.substring(0, i), fontSize) > maxWidth) break;\r\n                      i++;\r\n                    } catch (e) {\r\n                      break;\r\n                    }\r\n                  }\r\n                  if (i > 1) {\r\n                    lines.push(subWord.substring(0, i-1));\r\n                    subWord = subWord.substring(i-1);\r\n                  } else {\r\n                    // Se nem um caractere cabe, força pelo menos um\r\n                    lines.push(subWord.charAt(0));\r\n                    subWord = subWord.substring(1);\r\n                  }\r\n                }\r\n                currentLine = '';\r\n              } else {\r\n                currentLine = word;\r\n              }\r\n            } catch (e) {\r\n              // Se houver erro ao calcular largura da palavra, usa fallback\r\n              currentLine = word;\r\n            }\r\n          }\r\n        } catch (e) {\r\n          // Se houver erro ao calcular largura da linha, usa fallback simples\r\n          if (testLine.length <= 30) { // Fallback baseado em caracteres\r\n            currentLine = testLine;\r\n          } else {\r\n            if (currentLine) lines.push(currentLine);\r\n            currentLine = word;\r\n          }\r\n        }\r\n      });\r\n      \r\n      if (currentLine) lines.push(currentLine);\r\n      return lines.length > 0 ? lines : [''];\r\n    }\r\n    const historyHeaders = ['Data', 'Utilizador', 'Ação', 'Mudou de', 'Para'];\r\n    const historyColWidths = [50, 60, 60, 170, 170]; // Total: 540 - Distribuição equilibrada\r\n    let xPos = xStart;\r\n    \r\n    // Desenha cabeçalhos\r\n    historyHeaders.forEach((header, col) => {\r\n      // Fundo cinza para cabeçalho\r\n      activePage.drawRectangle({\r\n        x: xPos,\r\n        y: yPos - 18,\r\n        width: historyColWidths[col],\r\n        height: 18,\r\n        color: rgb(0.9, 0.9, 0.9),\r\n      });\r\n      \r\n      // Borda do cabeçalho\r\n      activePage.drawRectangle({\r\n        x: xPos,\r\n        y: yPos - 18,\r\n        width: historyColWidths[col],\r\n        height: 18,\r\n        borderColor: rgb(0, 0, 0),\r\n        borderWidth: 0.5,\r\n      });\r\n      \r\n      // Texto do cabeçalho\r\n      activePage.drawText(header, {\r\n        x: xPos + 4,\r\n        y: yPos - 12,\r\n        size: 10,\r\n        font,\r\n        color: rgb(0, 0, 0),\r\n      });\r\n      \r\n      xPos += historyColWidths[col];\r\n    });\r\n    \r\n    yPos -= 18;\r\n    \r\n    // Desenha linhas de histórico\r\n    history.forEach((entry, rowIdx) => {\r\n      // Processar descrição para separar \"de\" e \"para\"\r\n      const descricao = entry.descricao || '';\r\n      let mudouDe = '';\r\n      let para = '';\r\n      \r\n      // Verificar se é uma alteração com formato \"campo: de 'valor1' para 'valor2'\"\r\n      const matchAlteracao = descricao.match(/^(.+?):\\s*de\\s*[\"'](.+?)[\"']\\s*para\\s*[\"'](.+?)[\"']$/);\r\n      if (matchAlteracao) {\r\n        mudouDe = matchAlteracao[2];\r\n        para = matchAlteracao[3];\r\n      } else if (descricao.includes(' para ')) {\r\n        // Formato mais simples \"de X para Y\"\r\n        const parts = descricao.split(' para ');\r\n        if (parts.length === 2) {\r\n          mudouDe = parts[0].replace(/^.+?de\\s*[\"']?/, '').replace(/[\"']$/, '');\r\n          para = parts[1].replace(/[\"']$/, '');\r\n        }\r\n      } else {\r\n        // Se não conseguir separar, colocar toda a descrição em \"Para\"\r\n        para = descricao;\r\n      }\r\n      \r\n      // Quebra de texto por largura real para cada célula\r\n      const fontSize = 8;\r\n      const historyData = [entry.data || '', entry.utilizador || '', entry.acao || '', mudouDe, para];\r\n      let cellLines = [];\r\n      let maxLinesInRow = 1;\r\n      historyData.forEach((cellData, col) => {\r\n        const maxWidth = historyColWidths[col] - 8;\r\n        // Aplicar quebra de texto a TODAS as colunas\r\n        cellLines[col] = wrapTextToWidth(cellData, maxWidth, font, fontSize);\r\n        maxLinesInRow = Math.max(maxLinesInRow, cellLines[col].length);\r\n      });\r\n        \r\n      // ...existing code...\r\n      \r\n      // Calcular altura baseada no número real de linhas + padding generoso\r\n      const rowHeight = Math.max(35, maxLinesInRow * 15 + 20); // Altura mínima 35, 15px por linha + 20px padding\r\n      \r\n      // Verifica se há espaço para a linha\r\n      if (yPos - rowHeight < marginBottom) {\r\n        const newPage = pdfDoc.addPage([pageSize[0], pageSize[1]]);\r\n        yPos = yStart - 30;\r\n        activePage = newPage;\r\n      }\r\n      \r\n      xPos = xStart;\r\n      \r\n      historyData.forEach((cellData, col) => {\r\n        // Borda da célula\r\n        activePage.drawRectangle({\r\n          x: xPos,\r\n          y: yPos - rowHeight,\r\n          width: historyColWidths[col],\r\n          height: rowHeight,\r\n          borderColor: rgb(0, 0, 0),\r\n          borderWidth: 0.5,\r\n        });\r\n        \r\n        // Usar as linhas já calculadas\r\n        const lines = cellLines[col];\r\n        // Desenhar cada linha de texto com espaçamento adequado\r\n        lines.forEach((line, lineIdx) => {\r\n          activePage.drawText(line, {\r\n            x: xPos + 4,\r\n            y: yPos - 16 - (lineIdx * 14), // Começar mais baixo e mais espaço entre linhas\r\n            size: fontSize,\r\n            font,\r\n            color: rgb(0, 0, 0),\r\n          });\r\n        });\r\n        \r\n        xPos += historyColWidths[col];\r\n      });\r\n      \r\n      yPos -= rowHeight;\r\n    });\r\n    \r\n    console.log(\"✅ Template2 - Histórico desenhado com\", history.length, \"entradas\");\r\n  } else {\r\n    console.log(\"ℹ️ Template2 - Nenhum histórico para desenhar\");\r\n  }\r\n  \r\n  return await pdfDoc.save();\r\n}\r\n\r\n// Função principal para gerar PDF não editável\r\nexport async function generateNonEditablePdf(data, headers, dataObs, title = \"Procedimento\", imageBytes = null, pathFilename = \"\", history = []) {\r\n  console.log(\"🔍 generateNonEditablePdf recebeu history:\", history);\r\n  console.log(\"🔍 generateNonEditablePdf history length:\", history?.length);\r\n  \r\n  const { pdfDoc, page: firstPage, font } = await createBasePdf(title, imageBytes, pathFilename);\r\n\r\n  // Validações de entrada\r\n  const safeData = Array.isArray(data) && data.length > 0 ? data : [['', '', '', '', '']];\r\n  const safeHeaders = Array.isArray(headers) && headers.length > 0 ? headers : ['', '', '', '', ''];\r\n  const safeDataObs = Array.isArray(dataObs) && dataObs.length > 0 ? dataObs : [['']];\r\n  \r\n  // Desenha tabela de observações na primeira página COM headers cinza\r\n  const obsResult = await drawObsTableWithHeaders(firstPage, font, safeDataObs, imageBytes, pathFilename);\r\n  \r\n  // Agora temos que usar a última página e posição Y do resultado\r\n  let page = obsResult.currentPage;\r\n  let yPos = obsResult.currentYPosition - spaceBetweenTables;\r\n\r\n  // --- Quebra de texto e altura dinâmica das linhas ---\r\n  const fontSize = 8; // Definir fontSize para uso consistente\r\n  const lineHeight = fontSize + 2; // Definir lineHeight baseado no fontSize\r\n  const maxWidths = colWidths.map(w => w - 8);\r\n\r\n  // Função para remover emojis e caracteres Unicode que não são suportados pela fonte padrão\r\n  function removeEmojis(text) {\r\n    // Remove emojis e outros caracteres Unicode não suportados\r\n    return text.replace(/[\\u{1F600}-\\u{1F64F}]|[\\u{1F300}-\\u{1F5FF}]|[\\u{1F680}-\\u{1F6FF}]|[\\u{1F1E0}-\\u{1F1FF}]|[\\u{2600}-\\u{26FF}]|[\\u{2700}-\\u{27BF}]/gu, '');\r\n  }\r\n\r\n  // Calcula as linhas quebradas e alturas de cada linha\r\n  const wrappedData = safeData.map((row, rowIdx) =>\r\n    row.map((cell, col) => {\r\n      const cellText = (cell || '').toString();\r\n      \r\n      // Debug para documentos associados (coluna 3)\r\n      if (col === 3 && cellText.trim() !== '') {\r\n        console.log(`🔍 DEBUG - Documentos Associados linha ${rowIdx}:`, cellText);\r\n      }\r\n      \r\n      // Se é um link de vídeo, usa título + URL para calcular quebras\r\n      let textForWrapping = cellText;\r\n      if (cellText.startsWith('[VIDEO]') && cellText.includes('||')) {\r\n        const parts = cellText.split('||');\r\n        const title = parts[0].replace('[VIDEO] ', '').trim();\r\n        const url = parts[1];\r\n        textForWrapping = `${title} (${url})`; // Formato final que será exibido\r\n      } else {\r\n        textForWrapping = removeEmojis(cellText); // Remove emojis de texto normal\r\n      }\r\n      \r\n      const maxWidth = maxWidths[col] || 100;\r\n      return wrapText(textForWrapping, font, fontSize, maxWidth);\r\n    })\r\n  );\r\n  // Offsets de linhas para permitir dividir uma mesma linha em várias páginas\r\n  const rowLineOffsets = safeData.map((row) => row.map(() => 0));\r\n  const rowHeightsDynamic = wrappedData.map(\r\n    row => {\r\n      const heights = row.map(lines => {\r\n        const height = lines.length * lineHeight + 16;\r\n        return isNaN(height) ? 50 : height;\r\n      });\r\n      const maxHeight = Math.max(...heights, 50);\r\n      return isNaN(maxHeight) ? 50 : maxHeight;\r\n    }\r\n  );\r\n  rowHeightsDynamic.unshift(50); // header\r\n  \r\n\r\n  // Parâmetros de página\r\n  const totalWidth = colWidths.reduce((a, b) => a + b, 0);\r\n  const marginBottom = 25;\r\n\r\n  // Posição inicial da tabela principal - já configurada acima\r\n  let rowIndex = 0;\r\n  // Controla se o cabeçalho da tabela (nomes das colunas) já foi desenhado\r\n  let headerDrawn = false;\r\n\r\n  // Função para desenhar headers\r\n  function drawTableHeaders(page, y, headerHeight) {\r\n    const headerFontSize = 8; // Tamanho da fonte específico para os cabeçalhos\r\n    const headerLineHeight = 11;\r\n    let xPos = xStart;\r\n    safeHeaders.forEach((header, col) => {\r\n      const colWidth = colWidths[col] || 100;\r\n      \r\n      // Desenha fundo cinza do header\r\n      page.drawRectangle({\r\n        x: xPos,\r\n        y: y - headerHeight,\r\n        width: colWidth,\r\n        height: headerHeight,\r\n        color: rgb(0.7, 0.7, 0.7),\r\n        borderColor: rgb(0, 0, 0),\r\n        borderWidth: 1,\r\n      });\r\n      \r\n      const lines = (header || \"\").split('\\n');\r\n      const totalTextHeight = lines.length * headerLineHeight;\r\n      let startY = y - ((headerHeight - totalTextHeight) / 2) - headerFontSize;\r\n      lines.forEach((line, idx) => {\r\n        const textWidth = font.widthOfTextAtSize(line, headerFontSize);\r\n        const textX = xPos + (colWidth - textWidth) / 2;\r\n        const textY = startY - idx * headerLineHeight;\r\n        page.drawText(line, {\r\n          x: textX,\r\n          y: textY,\r\n          size: headerFontSize,\r\n          font,\r\n          color: rgb(0, 0, 0),\r\n        });\r\n      });\r\n      xPos += colWidths[col] || 100;\r\n    });\r\n  }\r\n\r\n  // Função para desenhar linhas horizontais e verticais da tabela\r\n  function drawTableGrid(page, yStartTable, rowHeights, numRows, drawTopLine = true) {\r\n    let y = yStartTable;\r\n    // Desenha linhas horizontais\r\n    for (let i = 0; i <= numRows; i++) {\r\n      if (i === 0 && !drawTopLine) {\r\n        y -= rowHeights[i] || 0;\r\n        continue;\r\n      }\r\n      page.drawLine({\r\n        start: { x: xStart, y: y },\r\n        end: { x: xStart + totalWidth, y: y },\r\n        thickness: 1,\r\n        color: rgb(0, 0, 0),\r\n      });\r\n      if (i < numRows) {\r\n        y -= rowHeights[i] || 0;\r\n      }\r\n    }\r\n    // Desenha linhas verticais\r\n    let xPos = xStart;\r\n    const totalVerticalHeight = rowHeights.slice(0, numRows + (drawTopLine ? 1 : 0)).reduce((a, b) => a + b, 0);\r\n    for (let j = 0; j <= colWidths.length; j++) {\r\n      page.drawLine({\r\n        start: { x: xPos, y: yStartTable },\r\n        end: { x: xPos, y: yStartTable - totalVerticalHeight },\r\n        thickness: 1,\r\n        color: rgb(0, 0, 0),\r\n      });\r\n      if (j < colWidths.length) {\r\n        xPos += colWidths[j];\r\n      }\r\n    }\r\n  }\r\n\r\n  // Desenha um \"pedaço\" (chunk) de uma linha muito alta que não cabe na página\r\n  function drawRowChunk(page, row, yTop, availableHeight, drawHeaderOnThisPage) {\r\n    // Se deve desenhar o header nesta página\r\n    let yCursor = yTop;\r\n    let headerHeightLocal = 0;\r\n    if (drawHeaderOnThisPage) {\r\n      headerHeightLocal = rowHeightsDynamic[0];\r\n      drawTableHeaders(page, yCursor, headerHeightLocal);\r\n      yCursor -= headerHeightLocal;\r\n      availableHeight -= headerHeightLocal;\r\n    }\r\n\r\n    // Quantidade máxima de linhas de texto que cabem no espaço disponível\r\n    const maxLinesFit = Math.max(1, Math.floor((availableHeight - 16) / lineHeight));\r\n    // Linhas restantes da linha atual (maior entre as colunas)\r\n    const maxRemainingLines = Math.max(\r\n      ...wrappedData[row].map((lines, col) => Math.max(0, lines.length - rowLineOffsets[row][col]))\r\n    );\r\n    const linesThisChunk = Math.max(1, Math.min(maxLinesFit, maxRemainingLines));\r\n    const chunkHeight = linesThisChunk * lineHeight + 16;\r\n\r\n    // Desenha grid do chunk (uma única linha de altura variável)\r\n    const totalWidth = colWidths.reduce((a, b) => a + b, 0);\r\n    // Linha superior\r\n    page.drawLine({ start: { x: xStart, y: yCursor }, end: { x: xStart + totalWidth, y: yCursor }, thickness: 1, color: rgb(0, 0, 0) });\r\n    // Linhas verticais\r\n    let xPosGrid = xStart;\r\n    for (let j = 0; j <= colWidths.length; j++) {\r\n      page.drawLine({ start: { x: xPosGrid, y: yCursor }, end: { x: xPosGrid, y: yCursor - chunkHeight }, thickness: 1, color: rgb(0, 0, 0) });\r\n      if (j < colWidths.length) xPosGrid += colWidths[j];\r\n    }\r\n    // Linha inferior\r\n    page.drawLine({ start: { x: xStart, y: yCursor - chunkHeight }, end: { x: xStart + totalWidth, y: yCursor - chunkHeight }, thickness: 1, color: rgb(0, 0, 0) });\r\n\r\n    // Desenha o conteúdo (subset de linhas por coluna)\r\n    let xPos = xStart;\r\n    for (let col = 0; col < safeData[row].length; col++) {\r\n      const allLines = wrappedData[row][col] || [];\r\n      const offset = rowLineOffsets[row][col] || 0;\r\n      const remaining = Math.max(0, allLines.length - offset);\r\n      const drawCount = Math.min(remaining, linesThisChunk);\r\n\r\n      let textY = yCursor - 8;\r\n      for (let i = 0; i < drawCount; i++) {\r\n        const line = allLines[offset + i];\r\n        const currentY = textY - i * lineHeight;\r\n        const cellBottom = yCursor - chunkHeight + 4;\r\n        if (currentY < cellBottom) break; // Garantia extra\r\n        page.drawText(line, {\r\n          x: xPos + 4,\r\n          y: currentY,\r\n          size: fontSize,\r\n          font,\r\n          color: rgb(0, 0, 0),\r\n          maxWidth: maxWidths[col] || 100,\r\n        });\r\n      }\r\n      // Avança o offset desta coluna\r\n      rowLineOffsets[row][col] = offset + drawCount;\r\n      xPos += colWidths[col];\r\n    }\r\n\r\n    return { drawnHeight: headerHeightLocal + chunkHeight, chunkHeight, headerHeightLocal, yAfter: yCursor - chunkHeight };\r\n  }\r\n\r\n  // Desenha a tabela principal, quebrando para nova página se necessário\r\n  while (rowIndex < safeData.length) {\r\n    // Calcular espaço disponível nesta página (não redefinir yPos automaticamente)\r\n    let availableHeight = yPos - marginBottom;\r\n\r\n  console.log(`📏 Espaço disponível na página atual = ${availableHeight} (header já desenhado: ${headerDrawn})`);\r\n\r\n    // Quantas linhas cabem nesta página\r\n  let rowsThisPage = 0;\r\n  let heightSum = headerDrawn ? 0 : rowHeightsDynamic[0]; // reserva espaço do header se ainda não foi desenhado\r\n    \r\n    // Melhor lógica de verificação de espaço\r\n    while (rowIndex + rowsThisPage < safeData.length) {\r\n      const nextRowHeight = rowHeightsDynamic[rowIndex + rowsThisPage + 1] || 50;\r\n      \r\n      // Verifica se a próxima linha cabe na página com margem de segurança\r\n      if (heightSum + nextRowHeight + 20 > availableHeight) {\r\n        console.log(`🔄 Quebra de página necessária: altura atual ${heightSum} + próxima linha ${nextRowHeight} > disponível ${availableHeight}`);\r\n        break;\r\n      }\r\n      \r\n      heightSum += nextRowHeight;\r\n      rowsThisPage++;\r\n    }\r\n    \r\n    // Se nenhuma linha cabe inteira nesta página, empurra tudo para a próxima página.\r\n    // Só divide uma linha se ela não couber nem numa nova página vazia (fallback raro).\r\n    if (rowsThisPage === 0 && rowIndex < safeData.length) {\r\n      const nextRowHeight = rowHeightsDynamic[rowIndex + 1] || 50;\r\n      const pageUsableHeight = (yStart - marginBottom) - rowHeightsDynamic[0]; // espaço abaixo do header numa nova página\r\n\r\n      if (nextRowHeight <= pageUsableHeight) {\r\n        // Cabe numa nova página: cria a nova página e volta para o loop (sem desenhar nada aqui)\r\n        const newPage = pdfDoc.addPage([pageSize[0], pageSize[1]]);\r\n        await addHeader(newPage, font, '', imageBytes, pathFilename); // logo + caminho em todas as páginas\r\n        page = newPage;\r\n        // Ainda não desenhámos o cabeçalho; manter como não desenhado para sair desenhado na nova página\r\n        yPos = yStart;\r\n        console.log(`➡️ Empurrando linha ${rowIndex} para a próxima página inteira.`);\r\n        continue; // recalcula availableHeight e rowsThisPage\r\n      } else {\r\n        // Nem numa página nova cabe: dividir em chunks (fallback)\r\n        console.log(`✂️ Linha ${rowIndex} é maior que uma página. Dividindo em páginas.`);\r\n\r\n        // Desenha um pedaço da linha atual nesta página\r\n        let yCursor = yPos;\r\n        const availableHere = availableHeight;\r\n        drawRowChunk(page, rowIndex, yCursor, availableHere, false); // não desenhar cabeçalho de colunas\r\n\r\n        // Continua em páginas seguintes até acabar\r\n        while (wrappedData[rowIndex].some((lines, col) => (rowLineOffsets[rowIndex][col] || 0) < lines.length)) {\r\n          const nextPage = pdfDoc.addPage([pageSize[0], pageSize[1]]);\r\n          await addHeader(nextPage, font, '', imageBytes, pathFilename);\r\n          page = nextPage;\r\n          drawRowChunk(page, rowIndex, yStart, (yStart - marginBottom), false);\r\n        }\r\n\r\n        rowIndex += 1; // linha completamente desenhada\r\n        // Cabeçalho da tabela já terá sido desenhado quando for a vez de linhas normais\r\n        yPos = yStart;\r\n        continue;\r\n      }\r\n    }\r\n\r\n    // Desenha grid e headers\r\n    const rowsToDraw = rowsThisPage > 0 ? rowsThisPage : 1;\r\n    const willDrawHeader = !headerDrawn; // indica se vamos desenhar o cabeçalho agora\r\n    if (willDrawHeader) {\r\n      drawTableGrid(page, yPos, [rowHeightsDynamic[0], ...rowHeightsDynamic.slice(rowIndex + 1, rowIndex + 1 + rowsToDraw)], rowsToDraw, true);\r\n      drawTableHeaders(page, yPos, rowHeightsDynamic[0]);\r\n      headerDrawn = true; // a partir daqui não voltamos a desenhar o cabeçalho\r\n    } else {\r\n      drawTableGrid(page, yPos, rowHeightsDynamic.slice(rowIndex + 1, rowIndex + 1 + rowsToDraw), rowsToDraw, false);\r\n    }\r\n\r\n    // Desenha dados\r\n    let yData = yPos - (willDrawHeader ? rowHeightsDynamic[0] : 0);\r\n    \r\n    console.log(`📊 Desenhando ${rowsToDraw} linhas a partir da linha ${rowIndex}`);\r\n    \r\n    for (let i = 0; i < rowsToDraw; i++) {\r\n      let xPos = xStart;\r\n      const row = rowIndex + i;\r\n      \r\n      // Validação adicional para garantir que os dados existem\r\n      if (!safeData[row] || !Array.isArray(safeData[row])) {\r\n        console.warn(`Linha ${row} não encontrada ou não é array:`, safeData[row]);\r\n        continue;\r\n      }\r\n      \r\n      if (!wrappedData[row] || !Array.isArray(wrappedData[row])) {\r\n        console.warn(`wrappedData linha ${row} não encontrada ou não é array:`, wrappedData[row]);\r\n        continue;\r\n      }\r\n      \r\n      for (let col = 0; col < safeData[row].length; col++) {\r\n        const lines = wrappedData[row][col];\r\n        if (!Array.isArray(lines)) {\r\n          console.warn(`lines não é array para row ${row}, col ${col}:`, lines);\r\n          continue;\r\n        }\r\n        \r\n        // Verifica se é um link de vídeo UMA VEZ por célula\r\n        const originalCellText = safeData[row][col] || '';\r\n        const isVideoLink = originalCellText.startsWith('[VIDEO]') && originalCellText.includes('||');\r\n        \r\n        let textY = yData - 8;\r\n        \r\n        // Debug para instruções de trabalho (coluna 4)\r\n        if (col === 4 && originalCellText.trim()) {\r\n          console.log(`📝 Instruções de trabalho linha ${row}:`, originalCellText);\r\n        }\r\n        \r\n        if (isVideoLink) {\r\n          // Para links de vídeo, desenha apenas o título\r\n          const parts = originalCellText.split('||');\r\n          const title = parts[0].replace('[VIDEO] ', '').trim();\r\n          const url = parts[1] || ''; // Extrai a URL\r\n          \r\n          console.log(`🎬 Processando vídeo: ${title}`);\r\n          \r\n          // Desenha apenas o título limpo como link\r\n          const textWidth = font.widthOfTextAtSize(title, fontSize);\r\n          \r\n          // Desenha o texto em azul para indicar que é um link\r\n          page.drawText(title, {\r\n            x: xPos + 4,\r\n            y: textY,\r\n            size: fontSize,\r\n            font,\r\n            color: rgb(0, 0, 1), // Azul para links\r\n            maxWidth: maxWidths[col] || 100,\r\n          });\r\n          \r\n          // Adiciona sublinhado para indicar visualmente que é um link\r\n          const underlineY = textY - 2;\r\n          page.drawLine({\r\n            start: { x: xPos + 4, y: underlineY },\r\n            end: { x: xPos + 4 + Math.min(textWidth, maxWidths[col] || 100), y: underlineY },\r\n            thickness: 0.5,\r\n            color: rgb(0, 0, 1),\r\n          });\r\n          \r\n          // Tenta criar anotação de link clicável usando API do pdf-lib\r\n          try {\r\n            // Cria uma anotação de link usando a API correta do pdf-lib\r\n            const linkRect = [\r\n              xPos + 4,\r\n              textY - 4,\r\n              xPos + 4 + Math.min(textWidth, maxWidths[col] || 100),\r\n              textY + fontSize + 2\r\n            ];\r\n            \r\n            // Cria o dicionário da anotação\r\n            const linkAnnot = pdfDoc.context.obj({\r\n              Type: 'Annot',\r\n              Subtype: 'Link',\r\n              Rect: linkRect,\r\n              A: {\r\n                Type: 'Action',\r\n                S: 'URI',\r\n                URI: url\r\n              },\r\n              Border: [0, 0, 0],\r\n              F: 4\r\n            });\r\n            \r\n            // Adiciona a anotação à página\r\n            const pageRef = page.ref;\r\n            const pageDict = pdfDoc.context.lookup(pageRef);\r\n            \r\n            // Obtém ou cria array de anotações\r\n            let annotsRef = pageDict.get(PDFName.of('Annots'));\r\n            if (!annotsRef) {\r\n              const annotsArray = pdfDoc.context.obj([linkAnnot]);\r\n              pageDict.set(PDFName.of('Annots'), annotsArray);\r\n            } else {\r\n              const annotsArray = pdfDoc.context.lookup(annotsRef);\r\n              if (annotsArray instanceof PDFArray) {\r\n                annotsArray.push(linkAnnot);\r\n              }\r\n            }\r\n            \r\n            console.log(`✅ Link clicável criado: \"${title}\" -> ${url}`);\r\n          } catch (error) {\r\n            console.warn('⚠️ Falha ao criar link clicável, mantendo apenas visual:', error);\r\n            console.log(`📝 URL do vídeo: ${url}`);\r\n          }\r\n        } else {\r\n          // Para texto normal (incluindo instruções de trabalho), desenha as linhas quebradas\r\n          if (originalCellText.trim()) {\r\n            // Verifica se há conteúdo válido para desenhar\r\n            const validLines = lines.filter(line => line && line.trim());\r\n            \r\n            if (validLines.length === 0) {\r\n              console.log(`⚠️ Nenhuma linha válida para desenhar na coluna ${col}, linha ${row}`);\r\n              return;\r\n            }\r\n            \r\n            validLines.forEach((line, lineIdx) => {\r\n                try {\r\n                  // Verifica se o texto cabe na célula horizontalmente\r\n                  const textWidth = font.widthOfTextAtSize(line, fontSize);\r\n                  const availableWidth = maxWidths[col] || 100;\r\n                  \r\n                  if (textWidth > availableWidth) {\r\n                    console.log(`⚠️ Texto muito largo na coluna ${col}: \"${line.substring(0, 30)}...\"`);\r\n                    console.log(`   Largura do texto: ${textWidth}px, disponível: ${availableWidth}px`);\r\n                  }\r\n                  \r\n                  // Calcula posição Y garantindo que não ultrapasse a célula\r\n                  const currentY = textY - lineIdx * lineHeight;\r\n                  const cellBottom = yData - rowHeightsDynamic[row + 1] + 4;\r\n                  \r\n                  if (currentY < cellBottom) {\r\n                    console.log(`⚠️ Texto ultrapassaria a célula na linha ${lineIdx}. Parando o desenho.`);\r\n                    return;\r\n                  }\r\n                  \r\n                  page.drawText(line, {\r\n                    x: xPos + 4,\r\n                    y: currentY,\r\n                    size: fontSize,\r\n                    font,\r\n                    color: rgb(0, 0, 0),\r\n                    maxWidth: availableWidth,\r\n                  });\r\n                  \r\n                  // Debug específico para instruções e documentos\r\n                  if ((col === 3 || col === 4) && lineIdx === 0) {\r\n                    console.log(`✅ Desenhado na coluna ${col === 3 ? 'Docs' : 'Instr'}, linha ${row}: \"${line}\"`);\r\n                  }\r\n                  \r\n                } catch (textError) {\r\n                  console.error(`❌ Erro ao desenhar texto na coluna ${col}, linha ${row}:`, textError);\r\n                  console.log(`📝 Texto problemático: \"${line}\"`);\r\n                  console.log(`� Posição: x=${xPos + 4}, y=${textY - lineIdx * lineHeight}`);\r\n                }\r\n            });\r\n          } else if (col === 3 || col === 4) {\r\n            // Debug para colunas importantes (Documentos Associados e Instruções)\r\n            console.log(`ℹ️ Célula vazia na coluna ${col === 3 ? 'Documentos Associados' : 'Instruções de Trabalho'}, linha ${row}`);\r\n            console.log(`   Dados originais: \"${originalCellText}\"`);\r\n            console.log(`   Linhas processadas:`, lines);\r\n          }\r\n        }\r\n        xPos += colWidths[col];\r\n      }\r\n      yData -= rowHeightsDynamic[row + 1];\r\n    }\r\n\r\n    // Avança para próximas linhas\r\n    rowIndex += rowsToDraw;\r\n    // Atualiza posição Y disponível na mesma página para continuar empurrando as células seguintes para baixo\r\n    yPos = yData;\r\n    \r\n    console.log(`✅ Desenhadas ${rowsToDraw} linhas. Próximo índice: ${rowIndex}/${safeData.length}`);\r\n    \r\n    // Se ainda há linhas para desenhar, só cria nova página se não houver espaço útil\r\n    if (rowIndex < safeData.length) {\r\n      const remainingSpace = yPos - marginBottom;\r\n      if (remainingSpace < 60) {\r\n        console.log(`📄 Pouco espaço restante (${remainingSpace}). Criando nova página.`);\r\n        const newPage = pdfDoc.addPage([pageSize[0], pageSize[1]]);\r\n        await addHeader(newPage, font, '', imageBytes, pathFilename);\r\n        page = newPage;\r\n        // O cabeçalho da tabela já foi desenhado anteriormente; manter headerDrawn=true\r\n        yPos = yStart;\r\n      } else {\r\n        // Continuar na mesma página (header já desenhado anteriormente)\r\n        // Nada a fazer aqui\r\n      }\r\n    }\r\n  }\r\n\r\n  // Desenhar histórico de alterações se existir (Template 1)\r\n  // Sempre na base do documento, depois de todas as tabelas\r\n  console.log(\"🔍 BEFORE drawing history - history:\", history);\r\n  console.log(\"🔍 BEFORE drawing history - history length:\", history?.length);\r\n  \r\n  if (history && history.length > 0) {\r\n    console.log(\"🔍 DEBUG Template1 - Desenhando histórico de alterações:\", history.length, \"entradas\");\r\n    \r\n    // Garantir espaço suficiente - sempre colocar numa nova secção\r\n    yPos -= 60; // Mais espaço antes do histórico\r\n    \r\n    // Definir margem inferior para verificar espaço disponível\r\n    const marginBottom = 50;\r\n    const espacoNecessario = 150; // Espaço mínimo para título + algumas linhas\r\n    \r\n    // Verificar se há espaço para pelo menos o cabeçalho\r\n    if (yPos - espacoNecessario < marginBottom) {\r\n      console.log(\"📄 Template1 - Criando nova página para histórico\");\r\n      page = pdfDoc.addPage([pageSize[0], pageSize[1]]);\r\n      yPos = yStart - 80; // Começar mais abaixo na nova página\r\n    }\r\n    \r\n    // Linha separadora antes do histórico\r\n    page.drawLine({\r\n      start: { x: xStart, y: yPos + 20 },\r\n      end: { x: xStart + 540, y: yPos + 20 },\r\n      thickness: 1,\r\n      color: rgb(0.7, 0.7, 0.7),\r\n    });\r\n    \r\n    // Título do histórico com destaque\r\n    page.drawText('Histórico de Alterações', {\r\n      x: xStart,\r\n      y: yPos,\r\n      size: 12,\r\n      font: font,\r\n      color: rgb(0, 0, 0),\r\n    });\r\n    yPos -= 25;\r\n    \r\n    // Cabeçalhos da tabela de histórico\r\n    const historyHeaders = ['Data', 'Utilizador', 'Ação', 'Mudou de', 'Para'];\r\n    // Larguras das colunas: [Data, Utilizador, Ação, Mudou de, Para] - Total deve ser 540\r\n    const historyColWidths = [80, 70, 60, 165, 165]; // Total: 540 - Distribuição equilibrada \r\n    let xPos = xStart;\r\n    \r\n    // Desenha cabeçalhos\r\n    historyHeaders.forEach((header, col) => {\r\n      // Fundo cinza para cabeçalho\r\n      page.drawRectangle({\r\n        x: xPos,\r\n        y: yPos - 15,\r\n        width: historyColWidths[col],\r\n        height: 15,\r\n        color: rgb(0.9, 0.9, 0.9),\r\n      });\r\n      \r\n      // Borda do cabeçalho\r\n      page.drawRectangle({\r\n        x: xPos,\r\n        y: yPos - 15,\r\n        width: historyColWidths[col],\r\n        height: 15,\r\n        borderColor: rgb(0, 0, 0),\r\n        borderWidth: 0.5,\r\n      });\r\n      \r\n      // Texto do cabeçalho\r\n      page.drawText(header, {\r\n        x: xPos + 4,\r\n        y: yPos - 10,\r\n        size: 9,\r\n        font: font,\r\n        color: rgb(0, 0, 0),\r\n      });\r\n      \r\n      xPos += historyColWidths[col];\r\n    });\r\n    \r\n    yPos -= 15;\r\n    \r\n    // Desenha linhas de histórico\r\n    history.forEach((entry, rowIdx) => {\r\n      // Processar descrição para separar \"de\" e \"para\"\r\n      const descricao = entry.descricao || '';\r\n      let mudouDe = '';\r\n      let para = '';\r\n      \r\n      // Verificar se é uma alteração com formato \"campo: de 'valor1' para 'valor2'\"\r\n      const matchAlteracao = descricao.match(/^(.+?):\\s*de\\s*[\"'](.+?)[\"']\\s*para\\s*[\"'](.+?)[\"']$/);\r\n      if (matchAlteracao) {\r\n        mudouDe = matchAlteracao[2];\r\n        para = matchAlteracao[3];\r\n      } else if (descricao.includes(' para ')) {\r\n        // Formato mais simples \"de X para Y\"\r\n        const parts = descricao.split(' para ');\r\n        if (parts.length === 2) {\r\n          mudouDe = parts[0].replace(/^.+?de\\s*[\"']?/, '').replace(/[\"']$/, '');\r\n          para = parts[1].replace(/[\"']$/, '');\r\n        }\r\n      } else {\r\n        // Se não conseguir separar, colocar toda a descrição em \"Para\"\r\n        para = descricao;\r\n      }\r\n      \r\n      const historyData = [entry.data || '', entry.utilizador || '', entry.acao || '', mudouDe, para];\r\n      \r\n      // Calcular altura necessária baseada no número real de linhas quebradas\r\n      let maxLinesInRow = 1;\r\n      const cellLines = []; // Array para armazenar as linhas quebradas de cada célula\r\n      \r\n      historyData.forEach((cellData, col) => {\r\n        // Calcular quantos caracteres cabem na largura da célula\r\n        const cellWidth = historyColWidths[col] - 6; // Largura da célula menos padding\r\n        const fontSize = 8;\r\n        const avgCharWidth = fontSize * 0.6; // Aproximação da largura média de caractere\r\n        const maxCharsPerLine = Math.floor(cellWidth / avgCharWidth);\r\n        \r\n        const words = cellData.split(' ');\r\n        const lines = [];\r\n        let currentLine = '';\r\n        \r\n        words.forEach(word => {\r\n          const testLine = currentLine ? currentLine + ' ' + word : word;\r\n          if (testLine.length <= maxCharsPerLine) {\r\n            currentLine = testLine;\r\n          } else {\r\n            if (currentLine) {\r\n              lines.push(currentLine);\r\n              currentLine = word;\r\n            } else {\r\n              // Palavra muito longa, forçar quebra\r\n              lines.push(word.substring(0, maxCharsPerLine));\r\n              currentLine = word.substring(maxCharsPerLine);\r\n            }\r\n          }\r\n        });\r\n        if (currentLine) lines.push(currentLine);\r\n        \r\n        cellLines[col] = lines;\r\n        maxLinesInRow = Math.max(maxLinesInRow, lines.length);\r\n      });\r\n      \r\n      // Calcular altura baseada no número real de linhas + padding generoso\r\n      const rowHeight = Math.max(30, maxLinesInRow * 13 + 18); // Altura mínima 30, 13px por linha + 18px padding\r\n      \r\n      // Verifica se há espaço para a linha\r\n      if (yPos - rowHeight < marginBottom) {\r\n        page = pdfDoc.addPage([pageSize[0], pageSize[1]]);\r\n        yPos = yStart - 20;\r\n      }\r\n      \r\n      xPos = xStart;\r\n      \r\n      historyData.forEach((cellData, col) => {\r\n        // Borda da célula\r\n        page.drawRectangle({\r\n          x: xPos,\r\n          y: yPos - rowHeight,\r\n          width: historyColWidths[col],\r\n          height: rowHeight,\r\n          borderColor: rgb(0, 0, 0),\r\n          borderWidth: 0.5,\r\n        });\r\n        \r\n        // Usar as linhas já calculadas\r\n        const lines = cellLines[col];\r\n        \r\n        // Desenhar cada linha de texto com espaçamento adequado\r\n        lines.forEach((line, lineIdx) => {\r\n          page.drawText(line, {\r\n            x: xPos + 3,\r\n            y: yPos - 16 - (lineIdx * 12), // Melhor posicionamento inicial e espaçamento\r\n            size: 8,\r\n            font: font,\r\n            color: rgb(0, 0, 0),\r\n          });\r\n        });\r\n        \r\n        xPos += historyColWidths[col];\r\n      });\r\n      \r\n      yPos -= rowHeight;\r\n    });\r\n    \r\n    console.log(\"✅ Histórico desenhado com\", history.length, \"entradas\");\r\n  } else {\r\n    console.log(\"ℹ️ Nenhum histórico para desenhar\");\r\n  }\r\n  \r\n  return await pdfDoc.save();\r\n}\r\n\r\n/**\r\n * @param {string} mainTableHtml\r\n * @param {string} obsTableHtml\r\n * @returns {Promise<Uint8Array>}\r\n */\r\nexport async function generateNonEditablePdfFromHtml(mainTableHtml, obsTableHtml, title = \"Procedimento\", imageBytes = null, pathFilename = \"\", history = []) {\r\n  const parser = new DOMParser();\r\n  // Função para extrair texto de uma célula, convertendo <br> em \\n\r\n  function getCellTextWithBreaks(cell) {\r\n    let text = \"\";\r\n    \r\n    // Verifica se é uma célula com componente especial (DocumentosAssociados ou InstrucoesTrabalho)\r\n    const hasSpecialComponent = cell.querySelector('.documentos-associados-container') || \r\n                               cell.querySelector('.instrucoes-trabalho-container');\r\n    \r\n    if (hasSpecialComponent) {\r\n      // Para componentes especiais, procura por input/textarea que contém o valor real\r\n      const hiddenInput = cell.querySelector('input[type=\"hidden\"]') || \r\n                         cell.querySelector('input[value]') ||\r\n                         cell.querySelector('textarea');\r\n      \r\n      if (hiddenInput && hiddenInput.value !== undefined) {\r\n        text = hiddenInput.value || '';\r\n        console.log(\"🔍 DEBUG - Valor extraído de componente especial:\", text);\r\n      } else {\r\n        // Fallback: procura por atributos data-value ou similar\r\n        const containerEl = cell.querySelector('[data-value]') || \r\n                           cell.querySelector('[data-current-value]');\r\n        if (containerEl) {\r\n          text = containerEl.getAttribute('data-value') || \r\n                 containerEl.getAttribute('data-current-value') || '';\r\n          console.log(\"🔍 DEBUG - Valor extraído de data-attribute:\", text);\r\n        } else {\r\n          // Se não encontrar o valor, tenta extrair texto visível\r\n          text = cell.textContent || cell.innerText || '';\r\n          console.log(\"🔍 DEBUG - Texto extraído como fallback:\", text);\r\n        }\r\n      }\r\n    } else {\r\n      // Para células normais\r\n      cell.childNodes.forEach(node => {\r\n        if (node.nodeType === 3) {\r\n          text += node.nodeValue.replace(/<br\\s*\\/?>/gi, \"\\n\");\r\n        } else if (node.nodeName === \"BR\") {\r\n          text += \"\\n\";\r\n        } else if (node.nodeType === 1) {\r\n          text += getCellTextWithBreaks(node);\r\n        }\r\n      });\r\n    }\r\n    \r\n    console.log(\"🔍 DEBUG - getCellTextWithBreaks resultado:\", text);\r\n    return text;\r\n  }\r\n\r\n  const htmlTableToArray = (html) => {\r\n    console.log(\"🔍 DEBUG - HTML recebido para conversão:\", html.substring(0, 500));\r\n    const doc = parser.parseFromString(html, \"text/html\");\r\n    const rows = [];\r\n    \r\n    // Verifica se é a tabela de observações (Template 1)\r\n    if (html.includes('tabela-observacoes')) {\r\n      console.log(\"🔍 DEBUG - Processando tabela de observações do Template 1\");\r\n      \r\n      // Para a tabela de observações, pega apenas as linhas com textarea (conteúdo das seções)\r\n      const contentRows = doc.querySelectorAll(\"tr\");\r\n      const sections = [];\r\n      \r\n      contentRows.forEach((tr, rowIdx) => {\r\n        const textarea = tr.querySelector(\"textarea\");\r\n        if (textarea && textarea.value !== undefined) {\r\n          const sectionContent = textarea.value || '';\r\n          console.log(`📝 Seção ${sections.length + 1} extraída:`, sectionContent.substring(0, 100) + \"...\");\r\n          sections.push([sectionContent]);\r\n        }\r\n      });\r\n      \r\n      // Garante que temos exatamente 5 seções na ordem correta\r\n      while (sections.length < 5) {\r\n        sections.push(['']);\r\n      }\r\n      \r\n      console.log(\"🔍 DEBUG - Seções finais:\", sections.map((s, i) => `${i+1}: ${s[0] ? s[0].substring(0, 30) : 'vazio'}...`));\r\n      return sections;\r\n    } else {\r\n      // Para outras tabelas (tabela principal)\r\n      doc.querySelectorAll(\"tr\").forEach((tr, rowIdx) => {\r\n        const cells = [];\r\n        tr.querySelectorAll(\"th,td\").forEach((cell, colIdx) => {\r\n          const cellText = getCellTextWithBreaks(cell);\r\n          if (colIdx === 4) { // Coluna de instruções\r\n            console.log(`🔍 DEBUG - Linha ${rowIdx}, Coluna ${colIdx} (Instruções):`, cellText);\r\n          }\r\n          if (colIdx === 3) { // Coluna de documentos associados\r\n            console.log(`🔍 DEBUG - Linha ${rowIdx}, Coluna ${colIdx} (Documentos):`, cellText);\r\n          }\r\n          cells.push(cellText);\r\n        });\r\n        rows.push(cells);\r\n      });\r\n      return rows;\r\n    }\r\n  };\r\n\r\n  const mainTableArr = htmlTableToArray(mainTableHtml);\r\n  const obsTableArr = htmlTableToArray(obsTableHtml);\r\n\r\n  console.log(\"🔍 DEBUG generateNonEditablePdfFromHtml - Histórico recebido:\", history);\r\n\r\n  const headers = mainTableArr[0] || [];\r\n  const data = mainTableArr.slice(1);\r\n  \r\n  // Para a tabela de observações, já temos o formato correto\r\n  const dataObs = obsTableArr;\r\n  \r\n  console.log(\"🔍 DEBUG - Dados finais para PDF:\");\r\n  console.log(\"  Headers:\", headers);\r\n  console.log(\"  Data (primeiras 2 linhas):\", data.slice(0, 2));\r\n  console.log(\"  DataObs:\", dataObs.map((obs, i) => `${i+1}: ${obs[0] ? obs[0].substring(0, 40) : 'vazio'}...`));\r\n  console.log(\"  History passado diretamente:\", history);\r\n\r\n  return await generateNonEditablePdf(data, headers, dataObs, title, imageBytes, pathFilename, history);\r\n}\r\n\r\n// Adicione esta função utilitária\r\nexport function drawProcessHeaderTable(page, font, yPos, donoProcesso, objetivoProcesso, servicosEntrada, servicoSaida) {\r\n  // Larguras das colunas ajustadas\r\n  const totalWidth = 540;\r\n  const leftColWidth = 200;\r\n  const rightColWidth = totalWidth - leftColWidth;\r\n  \r\n  // Calcular altura dinâmica para o objetivo do processo\r\n  const objetivoWrapped = wrapText(objetivoProcesso || '', font, 10, rightColWidth - 16);\r\n  const minRowHeight = 35;\r\n  const lineHeight = 12;\r\n  const padding = 10;\r\n  const objetivoRowHeight = Math.max(minRowHeight, (objetivoWrapped.length * lineHeight) + padding);\r\n  \r\n  const headerHeight = 30;\r\n  const entradaSaidaHeight = 25;\r\n  const contentHeight = 120;\r\n\r\n  // DONO DO PROCESSO\r\n  page.drawRectangle({\r\n    x: xStart,\r\n    y: yPos - headerHeight,\r\n    width: leftColWidth,\r\n    height: headerHeight,\r\n    color: rgb(0.7, 0.7, 0.7),\r\n    borderColor: rgb(0, 0, 0),\r\n    borderWidth: 1,\r\n  });\r\n  page.drawRectangle({\r\n    x: xStart + leftColWidth,\r\n    y: yPos - headerHeight,\r\n    width: rightColWidth,\r\n    height: headerHeight,\r\n    borderColor: rgb(0, 0, 0),\r\n    borderWidth: 1,\r\n  });\r\n  page.drawText('DONO DO PROCESSO', {\r\n    x: xStart + 8,\r\n    y: yPos - 12,\r\n    size: 10,\r\n    font,\r\n    color: rgb(0, 0, 0),\r\n  });\r\n  page.drawText('(nomeado):', {\r\n    x: xStart + 8,\r\n    y: yPos - 24,\r\n    size: 10,\r\n    font,\r\n    color: rgb(0, 0, 0),\r\n  });\r\n  \r\n  const donoWrapped = wrapText(donoProcesso || '', font, 10, rightColWidth - 16);\r\n  donoWrapped.forEach((line, idx) => {\r\n    page.drawText(line, {\r\n      x: xStart + leftColWidth + 8,\r\n      y: yPos - 15 - (idx * 12),\r\n      size: 10,\r\n      font,\r\n      color: rgb(0, 0, 0),\r\n    });\r\n  });\r\n\r\n  // OBJETIVO DO PROCESSO\r\n  page.drawRectangle({\r\n    x: xStart,\r\n    y: yPos - headerHeight - objetivoRowHeight,\r\n    width: leftColWidth,\r\n    height: objetivoRowHeight,\r\n    color: rgb(0.7, 0.7, 0.7),\r\n    borderColor: rgb(0, 0, 0),\r\n    borderWidth: 1,\r\n  });\r\n  page.drawRectangle({\r\n    x: xStart + leftColWidth,\r\n    y: yPos - headerHeight - objetivoRowHeight,\r\n    width: rightColWidth,\r\n    height: objetivoRowHeight,\r\n    borderColor: rgb(0, 0, 0),\r\n    borderWidth: 1,\r\n  });\r\n  page.drawText('OBJETIVO DO PROCESSO:', {\r\n    x: xStart + 8,\r\n    y: yPos - headerHeight - 20,\r\n    size: 10,\r\n    font,\r\n    color: rgb(0, 0, 0),\r\n  });\r\n  \r\n  objetivoWrapped.forEach((line, idx) => {\r\n    page.drawText(line, {\r\n      x: xStart + leftColWidth + 8,\r\n      y: yPos - headerHeight - 15 - (idx * 12),\r\n      size: 10,\r\n      font,\r\n      color: rgb(0, 0, 0),\r\n    });\r\n  });\r\n\r\n  // SERVIÇOS DE ENTRADAS / SAÍDA - Cabeçalho\r\n  page.drawRectangle({\r\n    x: xStart,\r\n    y: yPos - headerHeight - objetivoRowHeight - entradaSaidaHeight,\r\n    width: leftColWidth,\r\n    height: entradaSaidaHeight,\r\n    color: rgb(0.7, 0.7, 0.7),\r\n    borderColor: rgb(0, 0, 0),\r\n    borderWidth: 1,\r\n  });\r\n  page.drawRectangle({\r\n    x: xStart + leftColWidth,\r\n    y: yPos - headerHeight - objetivoRowHeight - entradaSaidaHeight,\r\n    width: rightColWidth,\r\n    height: entradaSaidaHeight,\r\n    color: rgb(0.7, 0.7, 0.7),\r\n    borderColor: rgb(0, 0, 0),\r\n    borderWidth: 1,\r\n  });\r\n  page.drawText('SERVIÇOS DE ENTRADAS', {\r\n    x: xStart + 8,\r\n    y: yPos - headerHeight - objetivoRowHeight - 16,\r\n    size: 10,\r\n    font,\r\n    color: rgb(0, 0, 0),\r\n  });\r\n  page.drawText('SERVIÇO DE SAÍDA', {\r\n    x: xStart + leftColWidth + 8,\r\n    y: yPos - headerHeight - objetivoRowHeight - 16,\r\n    size: 10,\r\n    font,\r\n    color: rgb(0, 0, 0),\r\n  });\r\n\r\n  // SERVIÇOS DE ENTRADAS / SAÍDA - Conteúdo\r\n  page.drawRectangle({\r\n    x: xStart,\r\n    y: yPos - headerHeight - objetivoRowHeight - entradaSaidaHeight - contentHeight,\r\n    width: leftColWidth,\r\n    height: contentHeight,\r\n    borderColor: rgb(0, 0, 0),\r\n    borderWidth: 1,\r\n  });\r\n  page.drawRectangle({\r\n    x: xStart + leftColWidth,\r\n    y: yPos - headerHeight - objetivoRowHeight - entradaSaidaHeight - contentHeight,\r\n    width: rightColWidth,\r\n    height: contentHeight,\r\n    borderColor: rgb(0, 0, 0),\r\n    borderWidth: 1,\r\n  });\r\n\r\n  // Texto dos serviços com quebra de linha adequada\r\n  let fontSize = 9;\r\n  \r\n  const entradaWrapped = wrapText(servicosEntrada || '', font, fontSize, leftColWidth - 16);\r\n  const saidaWrapped = wrapText(servicoSaida || '', font, fontSize, rightColWidth - 16);\r\n  \r\n  let entradaY = yPos - headerHeight - objetivoRowHeight - entradaSaidaHeight - 15;\r\n  let saidaY = entradaY;\r\n  \r\n  entradaWrapped.forEach((line, idx) => {\r\n    if (entradaY - (idx * 12) > yPos - headerHeight - objetivoRowHeight - entradaSaidaHeight - contentHeight + 5) {\r\n      page.drawText(line, {\r\n        x: xStart + 8,\r\n        y: entradaY - (idx * 12),\r\n        size: fontSize,\r\n        font,\r\n        color: rgb(0, 0, 0),\r\n      });\r\n    }\r\n  });\r\n  \r\n  saidaWrapped.forEach((line, idx) => {\r\n    if (saidaY - (idx * 12) > yPos - headerHeight - objetivoRowHeight - entradaSaidaHeight - contentHeight + 5) {\r\n      page.drawText(line, {\r\n        x: xStart + leftColWidth + 8,\r\n        y: saidaY - (idx * 12),\r\n        size: fontSize,\r\n        font,\r\n        color: rgb(0, 0, 0),\r\n      });\r\n    }\r\n  });\r\n\r\n  // Retorne a nova posição Y para continuar desenhando abaixo\r\n  return yPos - headerHeight - objetivoRowHeight - entradaSaidaHeight - contentHeight - 25;\r\n}\r\n\r\n// Função centralizada para o header do processo\r\nexport function drawProcessHeaderTableCentered(page, font, yPos, donoProcesso, objetivoProcesso, servicosEntrada, servicoSaida, xStartCentered) {\r\n  // Larguras das colunas ajustadas\r\n  const totalWidth = 540;\r\n  const leftColWidth = 200;\r\n  const rightColWidth = totalWidth - leftColWidth;\r\n  \r\n  // Calcular altura dinâmica para o objetivo do processo\r\n  const objetivoWrapped = wrapText(objetivoProcesso || '', font, 10, rightColWidth - 16);\r\n  const minRowHeight = 35;\r\n  const lineHeight = 12;\r\n  const padding = 10;\r\n  const objetivoRowHeight = Math.max(minRowHeight, (objetivoWrapped.length * lineHeight) + padding);\r\n  \r\n  const headerHeight = 30;\r\n  const entradaSaidaHeight = 25;\r\n  const contentHeight = 120;\r\n\r\n  // DONO DO PROCESSO\r\n  page.drawRectangle({\r\n    x: xStartCentered,\r\n    y: yPos - headerHeight,\r\n    width: leftColWidth,\r\n    height: headerHeight,\r\n    color: rgb(0.7, 0.7, 0.7),\r\n    borderColor: rgb(0, 0, 0),\r\n    borderWidth: 1,\r\n  });\r\n  page.drawRectangle({\r\n    x: xStartCentered + leftColWidth,\r\n    y: yPos - headerHeight,\r\n    width: rightColWidth,\r\n    height: headerHeight,\r\n    borderColor: rgb(0, 0, 0),\r\n    borderWidth: 1,\r\n  });\r\n  page.drawText('DONO DO PROCESSO', {\r\n    x: xStartCentered + 8,\r\n    y: yPos - 12,\r\n    size: 10,\r\n    font,\r\n    color: rgb(0, 0, 0),\r\n  });\r\n  page.drawText('(nomeado):', {\r\n    x: xStartCentered + 8,\r\n    y: yPos - 24,\r\n    size: 10,\r\n    font,\r\n    color: rgb(0, 0, 0),\r\n  });\r\n  \r\n  const donoWrapped = wrapText(donoProcesso || '', font, 10, rightColWidth - 16);\r\n  donoWrapped.forEach((line, idx) => {\r\n    page.drawText(line, {\r\n      x: xStartCentered + leftColWidth + 8,\r\n      y: yPos - 15 - (idx * 12),\r\n      size: 10,\r\n      font,\r\n      color: rgb(0, 0, 0),\r\n    });\r\n  });\r\n\r\n  // OBJETIVO DO PROCESSO\r\n  page.drawRectangle({\r\n    x: xStartCentered,\r\n    y: yPos - headerHeight - objetivoRowHeight,\r\n    width: leftColWidth,\r\n    height: objetivoRowHeight,\r\n    color: rgb(0.7, 0.7, 0.7),\r\n    borderColor: rgb(0, 0, 0),\r\n    borderWidth: 1,\r\n  });\r\n  page.drawRectangle({\r\n    x: xStartCentered + leftColWidth,\r\n    y: yPos - headerHeight - objetivoRowHeight,\r\n    width: rightColWidth,\r\n    height: objetivoRowHeight,\r\n    borderColor: rgb(0, 0, 0),\r\n    borderWidth: 1,\r\n  });\r\n  page.drawText('OBJETIVO DO PROCESSO:', {\r\n    x: xStartCentered + 8,\r\n    y: yPos - headerHeight - 20,\r\n    size: 10,\r\n    font,\r\n    color: rgb(0, 0, 0),\r\n  });\r\n  \r\n  objetivoWrapped.forEach((line, idx) => {\r\n    page.drawText(line, {\r\n      x: xStartCentered + leftColWidth + 8,\r\n      y: yPos - headerHeight - 15 - (idx * 12),\r\n      size: 10,\r\n      font,\r\n      color: rgb(0, 0, 0),\r\n    });\r\n  });\r\n\r\n  // SERVIÇOS DE ENTRADAS / SAÍDA - Cabeçalho\r\n  page.drawRectangle({\r\n    x: xStartCentered,\r\n    y: yPos - headerHeight - objetivoRowHeight - entradaSaidaHeight,\r\n    width: leftColWidth,\r\n    height: entradaSaidaHeight,\r\n    color: rgb(0.7, 0.7, 0.7),\r\n    borderColor: rgb(0, 0, 0),\r\n    borderWidth: 1,\r\n  });\r\n  page.drawRectangle({\r\n    x: xStartCentered + leftColWidth,\r\n    y: yPos - headerHeight - objetivoRowHeight - entradaSaidaHeight,\r\n    width: rightColWidth,\r\n    height: entradaSaidaHeight,\r\n    color: rgb(0.7, 0.7, 0.7),\r\n    borderColor: rgb(0, 0, 0),\r\n    borderWidth: 1,\r\n  });\r\n  page.drawText('SERVIÇOS DE ENTRADAS', {\r\n    x: xStartCentered + 8,\r\n    y: yPos - headerHeight - objetivoRowHeight - 16,\r\n    size: 10,\r\n    font,\r\n    color: rgb(0, 0, 0),\r\n  });\r\n  page.drawText('SERVIÇO DE SAÍDA', {\r\n    x: xStartCentered + leftColWidth + 8,\r\n    y: yPos - headerHeight - objetivoRowHeight - 16,\r\n    size: 10,\r\n    font,\r\n    color: rgb(0, 0, 0),\r\n  });\r\n\r\n  // SERVIÇOS DE ENTRADAS / SAÍDA - Conteúdo\r\n  page.drawRectangle({\r\n    x: xStartCentered,\r\n    y: yPos - headerHeight - objetivoRowHeight - entradaSaidaHeight - contentHeight,\r\n    width: leftColWidth,\r\n    height: contentHeight,\r\n    borderColor: rgb(0, 0, 0),\r\n    borderWidth: 1,\r\n  });\r\n  page.drawRectangle({\r\n    x: xStartCentered + leftColWidth,\r\n    y: yPos - headerHeight - objetivoRowHeight - entradaSaidaHeight - contentHeight,\r\n    width: rightColWidth,\r\n    height: contentHeight,\r\n    borderColor: rgb(0, 0, 0),\r\n    borderWidth: 1,\r\n  });\r\n\r\n  // Texto dos serviços com quebra de linha adequada\r\n  let fontSize = 9;\r\n  \r\n  const entradaWrapped = wrapText(servicosEntrada || '', font, fontSize, leftColWidth - 16);\r\n  const saidaWrapped = wrapText(servicoSaida || '', font, fontSize, rightColWidth - 16);\r\n  \r\n  let entradaY = yPos - headerHeight - objetivoRowHeight - entradaSaidaHeight - 15;\r\n  let saidaY = entradaY;\r\n  \r\n  entradaWrapped.forEach((line, idx) => {\r\n    if (entradaY - (idx * 12) > yPos - headerHeight - objetivoRowHeight - entradaSaidaHeight - contentHeight + 5) {\r\n      page.drawText(line, {\r\n        x: xStartCentered + 8,\r\n        y: entradaY - (idx * 12),\r\n        size: fontSize,\r\n        font,\r\n        color: rgb(0, 0, 0),\r\n      });\r\n    }\r\n  });\r\n  \r\n  saidaWrapped.forEach((line, idx) => {\r\n    if (saidaY - (idx * 12) > yPos - headerHeight - objetivoRowHeight - entradaSaidaHeight - contentHeight + 5) {\r\n      page.drawText(line, {\r\n        x: xStartCentered + leftColWidth + 8,\r\n        y: saidaY - (idx * 12),\r\n        size: fontSize,\r\n        font,\r\n        color: rgb(0, 0, 0),\r\n      });\r\n    }\r\n  });\r\n\r\n  // Retorne a nova posição Y para continuar desenhando abaixo\r\n  return yPos - headerHeight - objetivoRowHeight - entradaSaidaHeight - contentHeight - 25;\r\n}\r\n"],"mappings":"AAAA,OAASA,aAAa,CAAEC,QAAQ,CAAEC,QAAQ,CAAEC,MAAM,CAAEC,MAAM,CAAEC,SAAS,KAAQ,WAAW,CACxF,OAASC,cAAc,CAAEC,WAAW,CAAEC,YAAY,CAAEC,UAAU,CAAEC,SAAS,CAAEC,WAAW,CAAEC,YAAY,CAAEC,kBAAkB,CAAEC,kBAAkB,CAAEC,iBAAiB,KAAQ,aAAa,CACpL,OAASC,uBAAuB,CAAEC,uBAAuB,KAAQ,eAAe,CAChF,OAASC,WAAW,CAAEC,aAAa,CAAEC,GAAG,CAAEC,OAAO,CAAEC,QAAQ,CAAEC,OAAO,KAAQ,SAAS,CAErF;AACA,QAAS,CAAAC,6BAA6BA,CAACC,IAAI,CAAEC,SAAS,CAAEC,IAAI,CAAEC,IAAI,CAAoC,IAAlC,CAAAC,QAAQ,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,IAAE,CAAAG,SAAS,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,KAAK,CAClG,KAAM,CAAAI,SAAS,CAAGT,IAAI,CAACU,eAAe,CAACT,SAAS,CAAC,CACjD,GAAIO,SAAS,CAAE,CACbC,SAAS,CAACE,eAAe,CAAC,CAAC,CAC7B,CACAF,SAAS,CAACG,OAAO,CAACV,IAAI,EAAI,EAAE,CAAC,CAE7B;AACA,GAAI,CACF;AACAO,SAAS,CAACI,WAAW,CAACT,QAAQ,CAAC,CAC/BK,SAAS,CAACK,iBAAiB,CAACX,IAAI,CAAC,CACnC,CAAE,MAAOY,KAAK,CAAE,CACdC,OAAO,CAACC,IAAI,gCAAAC,MAAA,CAAgCjB,SAAS,MAAKc,KAAK,CAAC,CAChE,GAAI,CACF;AACAN,SAAS,CAACK,iBAAiB,CAACX,IAAI,CAAC,CACnC,CAAE,MAAOgB,CAAC,CAAE,CACVH,OAAO,CAACC,IAAI,gCAAAC,MAAA,CAAgCjB,SAAS,MAAKkB,CAAC,CAAC,CAC5D;AACAH,OAAO,CAACC,IAAI,uCAAAC,MAAA,CAAuCjB,SAAS,CAAE,CAAC,CACjE,CACF,CAEA,MAAO,CAAAQ,SAAS,CAClB,CAEA;AACA,MAAO,eAAe,CAAAW,mBAAmBA,CAAAC,IAAA,CAgBtC,IAhBuC,CACxCC,YAAY,CAAG,CAAC,CAChBC,IAAI,CACJC,OAAO,CACPC,OAAO,CACPC,UAAU,CACVC,UAAU,CACVC,YAAY,CACZC,gBAAgB,CAChBC,WAAW,CACXC,eAAe,CACfC,YAAY,CACZC,KAAK,CAAG,EAAE,CAAE;AACZC,UAAU,CAAG,IAAI,CAAE;AACnBC,YAAY,CAAG,EAAE,CAAE;AACnBC,OAAO,CAAG,EAAG;AACf,CAAC,CAAAf,IAAA,CACGL,OAAO,CAACqB,GAAG,CAAC,8CAA8C,CAAEF,YAAY,CAAC,CACzEnB,OAAO,CAACqB,GAAG,CAAC,yCAAyC,CAAED,OAAO,CAAC,CAC/DpB,OAAO,CAACqB,GAAG,CAAC,wCAAwC,CAAED,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAE9B,MAAM,CAAC,CAExE,GAAIgB,YAAY,GAAK,CAAC,CAAE,CACtB,MAAO,MAAM,CAAAgB,4BAA4B,CAAC,CACxCX,UAAU,CACVC,YAAY,CACZC,gBAAgB,CAChBC,WAAW,CACXC,eAAe,CACfC,YAAY,CACZC,KAAK,CACLC,UAAU,CACVC,YAAY,CACZC,OACF,CAAC,CAAC,CACJ,CAAC,IAAM,CACL,MAAO,MAAM,CAAAG,4BAA4B,CAAChB,IAAI,CAAEC,OAAO,CAAEC,OAAO,CAAEC,UAAU,CAAEO,KAAK,CAAEC,UAAU,CAAEC,YAAY,CAAE,GAAG,CAAEC,OAAO,CAAC,CAC9H,CACF,CAGA;AACA,MAAO,eAAe,CAAAG,4BAA4BA,CAAChB,IAAI,CAAEC,OAAO,CAAEC,OAAO,CAAEC,UAAU,CAA4G,IAA1G,CAAAO,KAAK,CAAA5B,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,cAAc,IAAE,CAAA6B,UAAU,CAAA7B,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,IAAE,CAAA8B,YAAY,CAAA9B,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,IAAE,CAAAmC,sBAAsB,CAAAnC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,GAAG,IAAE,CAAA+B,OAAO,CAAA/B,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CAC7L,KAAM,CAAEoC,MAAM,CAAEC,IAAI,CAAEvC,IAAK,CAAC,CAAG,KAAM,CAAA5B,aAAa,CAAC0D,KAAK,CAAEC,UAAU,CAAEC,YAAY,CAAC,CACnF,KAAM,CAAAnC,IAAI,CAAGyC,MAAM,CAACE,OAAO,CAAC,CAAC,CAC7B3B,OAAO,CAACqB,GAAG,CAAC,8CAA8C,CAAEF,YAAY,CAAC,CAEzE;AACA,KAAM,CAAAS,QAAQ,CAAGC,KAAK,CAACC,OAAO,CAACvB,IAAI,CAAC,CAAGA,IAAI,CAAG,EAAE,CAChD,KAAM,CAAAwB,WAAW,CAAGF,KAAK,CAACC,OAAO,CAACtB,OAAO,CAAC,CAAGA,OAAO,CAAG,EAAE,CAEzD;AACA,KAAM,CAAAwB,OAAO,CAAGhE,UAAU,CAACyC,OAAO,CAAC,CACnC,KAAM,CAAAwB,kBAAkB,CAAGzD,uBAAuB,CAACiC,OAAO,CAAEtB,IAAI,CAAC,CAEjE;AACA;AACA,KAAM,CAAA+C,gBAAgB,CAAG,EAAE,CAAE;AAC7B,KAAM,CAAAC,eAAe,CAAGF,kBAAkB,CAAGT,sBAAsB,CAEnExB,OAAO,CAACqB,GAAG,CAAC,UAAU,CAAEW,OAAO,CAAC,CAChChC,OAAO,CAACqB,GAAG,CAAC,qBAAqB,CAAEY,kBAAkB,CAAC,CACtDjC,OAAO,CAACqB,GAAG,CAAC,yBAAyB,CAAEG,sBAAsB,CAAC,CAC9DxB,OAAO,CAACqB,GAAG,CAAC,kBAAkB,CAAEc,eAAe,CAAC,CAChDnC,OAAO,CAACqB,GAAG,CAAC,cAAc,CAAEO,QAAQ,CAACtC,MAAM,CAAC,CAC5CU,OAAO,CAACqB,GAAG,CAAC,SAAS,CAAE1D,MAAM,CAAC,CAC9BqC,OAAO,CAACqB,GAAG,CAAC,qBAAqB,CAAEjD,kBAAkB,CAAC,CAEtD;AACAL,YAAY,CAAC2D,IAAI,CAAEvC,IAAI,CAAEsB,OAAO,CAAC,CAEjC,GAAI,CAAA2B,IAAI,CAAGzE,MAAM,CACjB,KAAM,CAAAyB,QAAQ,CAAG,CAAC,CAAG;AACrB,KAAM,CAAAiD,QAAQ,CAAGnE,WAAW,CAAC,CAAC,CAAC,CAAG,CAAC,CACnC,KAAM,CAAAoE,UAAU,CAAGlD,QAAQ,CAAG,CAAC,CAC/B,KAAM,CAAAmD,WAAW,CAAGV,KAAK,CAACW,IAAI,CAAC,CAAElD,MAAM,CAAE0C,OAAQ,CAAC,CAAE,CAACS,CAAC,CAAEC,CAAC,GACvDb,KAAK,CAACC,OAAO,CAACrB,OAAO,CAAC,EAAIoB,KAAK,CAACC,OAAO,CAACrB,OAAO,CAACiC,CAAC,CAAC,CAAC,CAAGjC,OAAO,CAACiC,CAAC,CAAC,CAAG,CAAC,EAAE,CACxE,CAAC,CACD,KAAM,CAAAC,aAAa,CAAGJ,WAAW,CAACK,GAAG,CAACC,GAAG,EAAI,CAC3C,KAAM,CAAA3D,IAAI,CAAG2D,GAAG,CAAC,CAAC,CAAC,EAAI,EAAE,CACzB,KAAM,CAAAC,KAAK,CAAGtF,QAAQ,CAAC0B,IAAI,CAAEC,IAAI,CAAEC,QAAQ,CAAEiD,QAAQ,CAAC,CACtD,MAAO,CAAAU,IAAI,CAACC,GAAG,CAAC7E,YAAY,CAAE2E,KAAK,CAACxD,MAAM,CAAGgD,UAAU,CAAG,EAAE,CAAC,CAC/D,CAAC,CAAC,CAEF;AACA,IAAK,GAAI,CAAAO,GAAG,CAAG,CAAC,CAAEA,GAAG,CAAGb,OAAO,CAAEa,GAAG,EAAE,CAAE,CACtC,KAAM,CAAA5D,SAAS,YAAAiB,MAAA,CAAc2C,GAAG,CAAG,CAAC,CAAE,CACtC,KAAM,CAAApD,SAAS,CAAGV,6BAA6B,CAACC,IAAI,CAAEC,SAAS,CAAEwB,OAAO,EAAIA,OAAO,CAACoC,GAAG,CAAC,CAAGpC,OAAO,CAACoC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAG,EAAE,CAAE1D,IAAI,CAAE,CAAC,CAAE,IAAI,CAAC,CAE/H;AACAM,SAAS,CAACwD,SAAS,CAACvB,IAAI,CAAE,CACxBwB,CAAC,CAAExF,MAAM,CAAG,CAAC,CACbyF,CAAC,CAAEf,IAAI,CAAGO,aAAa,CAACE,GAAG,CAAC,CAAG,CAAC,CAChCO,KAAK,CAAElF,WAAW,CAAC,CAAC,CAAC,CAAG,CAAC,CACzBmF,MAAM,CAAEV,aAAa,CAACE,GAAG,CAAC,CAAG,CAAC,CAC9BS,SAAS,CAAE3E,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACvB4E,eAAe,CAAE5E,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAC7B6E,MAAM,CAAEjE,SACV,CAAC,CAAC,CAEF6C,IAAI,EAAIO,aAAa,CAACE,GAAG,CAAC,CAC5B,CAEA;AACA,GAAI,CAAAY,WAAW,CAAG/B,IAAI,CACtB,GAAI,CAAAgC,WAAW,CAAG/F,MAAM,CAAGsE,kBAAkB,CAAG7D,kBAAkB,CAElE,GAAI+D,eAAe,CAAE,CACnB;AACAsB,WAAW,CAAGhC,MAAM,CAACkC,OAAO,CAAClG,QAAQ,CAAC,CAEtC;AACA,GAAIyD,UAAU,EAAIC,YAAY,CAAE,CAC9B,KAAM,CAAAvD,SAAS,CAAC6F,WAAW,CAAEtE,IAAI,CAAE8B,KAAK,CAAEC,UAAU,CAAEC,YAAY,CAAC,CACrE,CAEAuC,WAAW,CAAG/F,MAAM,CAAE;AACtBqC,OAAO,CAACqB,GAAG,CAAC,gEAAgE,CAAEqC,WAAW,CAAC,CAC5F,CAEA;AACA,KAAM,CAAAE,UAAU,CAAG/B,KAAK,CAACD,QAAQ,CAACtC,MAAM,CAAG,CAAC,CAAC,CAACuE,IAAI,CAAC,EAAE,CAAC,CAAE;AAExD;AACA;AACAhG,cAAc,CAAC4F,WAAW,CAAEtB,eAAe,CAAG,CAAC,CAAGF,kBAAkB,CAAEE,eAAe,CAAGxE,MAAM,CAAG,IAAI,CAAEiG,UAAU,CAAC,CAElH;AACA,GAAI,CAAAE,IAAI,CAAGpG,MAAM,CACjB,KAAM,CAAAqG,QAAQ,CAAG5B,eAAe,CAAGxE,MAAM,CAAIA,MAAM,CAAGsE,kBAAkB,CAAG7D,kBAAmB,CAC9F,KAAM,CAAA4F,YAAY,CAAGJ,UAAU,CAAC,CAAC,CAAC,EAAI,EAAE,CAExC7B,WAAW,CAACkC,OAAO,CAAC,CAACC,MAAM,CAAEC,GAAG,GAAK,CACnC,KAAM,CAAAC,QAAQ,CAAGnG,SAAS,CAACkG,GAAG,CAAC,EAAI,GAAG,CAEtC;AACAV,WAAW,CAACY,aAAa,CAAC,CACxBnB,CAAC,CAAEY,IAAI,CACPX,CAAC,CAAEY,QAAQ,CAAGC,YAAY,CAC1BZ,KAAK,CAAEgB,QAAQ,CACff,MAAM,CAAEW,YAAY,CACpBM,KAAK,CAAE3F,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,CACzB4F,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CAEF;AACA,KAAM,CAAA1B,KAAK,CAAGoB,MAAM,CAACO,KAAK,CAAC,IAAI,CAAC,CAChC,KAAM,CAAArF,QAAQ,CAAG,CAAC,CAClB,KAAM,CAAAkD,UAAU,CAAG,EAAE,CACrB,KAAM,CAAAoC,eAAe,CAAG5B,KAAK,CAACxD,MAAM,CAAGgD,UAAU,CACjD,GAAI,CAAAqC,MAAM,CAAGZ,QAAQ,CAAI,CAACC,YAAY,CAAGU,eAAe,EAAI,CAAE,CAAGtF,QAAQ,CAEzE0D,KAAK,CAACmB,OAAO,CAAC,CAACW,IAAI,CAAEC,GAAG,GAAK,CAC3B,KAAM,CAAAC,SAAS,CAAG3F,IAAI,CAAC4F,iBAAiB,CAACH,IAAI,CAAExF,QAAQ,CAAC,CACxD,KAAM,CAAA4F,KAAK,CAAGlB,IAAI,CAAG,CAACM,QAAQ,CAAGU,SAAS,EAAI,CAAC,CAC/C,KAAM,CAAAG,KAAK,CAAGN,MAAM,CAAGE,GAAG,CAAGvC,UAAU,CAEvCmB,WAAW,CAACyB,QAAQ,CAACN,IAAI,CAAE,CACzB1B,CAAC,CAAE8B,KAAK,CACR7B,CAAC,CAAE8B,KAAK,CACRE,IAAI,CAAE/F,QAAQ,CACdD,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFmF,IAAI,EAAIM,QAAQ,CAClB,CAAC,CAAC,CAEF,GAAI,CAAAgB,IAAI,CAAGjD,eAAe,CAAGxE,MAAM,CAAIA,MAAM,CAAGsE,kBAAkB,CAAG7D,kBAAmB,CACxF4B,OAAO,CAACqB,GAAG,CAAC,qCAAqC,CAAE+D,IAAI,CAAC,CACxDpF,OAAO,CAACqB,GAAG,CAAC,SAAS,CAAE1D,MAAM,CAAE,qBAAqB,CAAEsE,kBAAkB,CAAE,qBAAqB,CAAE7D,kBAAkB,CAAC,CAEpH,IAAK,GAAI,CAAAyE,GAAG,CAAG,CAAC,CAAEA,GAAG,CAAGjB,QAAQ,CAACtC,MAAM,CAAEuD,GAAG,EAAE,CAAE,CAC9C,GAAI,CAAAiB,IAAI,CAAGpG,MAAM,CACjB,IAAK,GAAI,CAAAyG,GAAG,CAAG,CAAC,CAAEA,GAAG,CAAG,CAAC,CAAEA,GAAG,EAAE,CAAE,CAChC,KAAM,CAAAlF,SAAS,YAAAiB,MAAA,CAAc2C,GAAG,CAAG,CAAC,OAAA3C,MAAA,CAAKiE,GAAG,CAAG,CAAC,CAAE,CAClD,KAAM,CAAA1E,SAAS,CAAGV,6BAA6B,CAACC,IAAI,CAAEC,SAAS,CAAE2C,QAAQ,CAACiB,GAAG,CAAC,EAAIjB,QAAQ,CAACiB,GAAG,CAAC,CAACsB,GAAG,CAAC,CAAGvC,QAAQ,CAACiB,GAAG,CAAC,CAACsB,GAAG,CAAC,CAAG,EAAE,CAAEhF,IAAI,CAAE,CAAC,CAAE,IAAI,CAAC,CAE9I;AACAM,SAAS,CAACwD,SAAS,CAACQ,WAAW,CAAE,CAC/BP,CAAC,CAAEY,IAAI,CAAG,CAAC,CACXX,CAAC,CAAEiC,IAAI,CAAGxB,UAAU,CAACf,GAAG,CAAG,CAAC,CAAC,CAAG,CAAC,CACjCO,KAAK,CAAEnF,SAAS,CAACkG,GAAG,CAAC,CAAG,CAAC,CACzBd,MAAM,CAAEO,UAAU,CAACf,GAAG,CAAG,CAAC,CAAC,CAAG,CAAC,CAC/BS,SAAS,CAAE3E,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACvB4E,eAAe,CAAE5E,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAC7B6E,MAAM,CAAEjE,SACV,CAAC,CAAC,CAEFuE,IAAI,EAAI7F,SAAS,CAACkG,GAAG,CAAC,CACxB,CACAiB,IAAI,EAAIxB,UAAU,CAACf,GAAG,CAAG,CAAC,CAAC,CAC7B,CAEA,MAAO,MAAM,CAAApB,MAAM,CAAC4D,IAAI,CAAC,CAAC,CAC5B,CAEA;AAEA,MAAO,eAAe,CAAA/D,4BAA4BA,CAAAgE,KAAA,CAAyK,IAAxK,CAAE3E,UAAU,CAAEC,YAAY,CAAEC,gBAAgB,CAAEC,WAAW,CAAEC,eAAe,CAAEC,YAAY,CAAEC,KAAK,CAAG,cAAc,CAAEC,UAAU,CAAG,IAAI,CAAEC,YAAY,CAAG,EAAE,CAAEC,OAAO,CAAG,EAAG,CAAC,CAAAkE,KAAA,CACvN,KAAM,CAAE7D,MAAM,CAAEC,IAAI,CAAEvC,IAAK,CAAC,CAAG,KAAM,CAAA5B,aAAa,CAAC0D,KAAK,CAAEC,UAAU,CAAEC,YAAY,CAAC,CACnF,KAAM,CAAAnC,IAAI,CAAGyC,MAAM,CAACE,OAAO,CAAC,CAAC,CAE7B3B,OAAO,CAACqB,GAAG,CAAC,uCAAuC,CAAEN,eAAe,CAAC,CACrEf,OAAO,CAACqB,GAAG,CAAC,oCAAoC,CAAEL,YAAY,CAAC,CAE/D,GAAI,CAAAoE,IAAI,CAAGzH,MAAM,CAEjB;AACA+D,IAAI,CAACwD,QAAQ,CAAC,8BAA8B,CAAE,CAAEhC,CAAC,CAAExF,MAAM,CAAEyF,CAAC,CAAEiC,IAAI,CAAED,IAAI,CAAE,EAAE,CAAEhG,IAAK,CAAC,CAAC,CACrF,KAAM,CAAAoG,SAAS,CAAGxG,6BAA6B,CAACC,IAAI,CAAE,eAAe,CAAE4B,YAAY,CAAEzB,IAAI,CAAE,EAAE,CAAE,IAAI,CAAC,CACpGoG,SAAS,CAACtC,SAAS,CAACvB,IAAI,CAAE,CAAEwB,CAAC,CAAExF,MAAM,CAAG,GAAG,CAAEyF,CAAC,CAAEiC,IAAI,CAAG,CAAC,CAAEhC,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,EAAG,CAAC,CAAC,CACnF+B,IAAI,EAAI,EAAE,CAEV;AACA1D,IAAI,CAACwD,QAAQ,CAAC,uBAAuB,CAAE,CAAEhC,CAAC,CAAExF,MAAM,CAAEyF,CAAC,CAAEiC,IAAI,CAAED,IAAI,CAAE,EAAE,CAAEhG,IAAK,CAAC,CAAC,CAC9E,KAAM,CAAAqG,aAAa,CAAGzG,6BAA6B,CAACC,IAAI,CAAE,mBAAmB,CAAE6B,gBAAgB,CAAE1B,IAAI,CAAE,EAAE,CAAE,IAAI,CAAC,CAChHqG,aAAa,CAACvC,SAAS,CAACvB,IAAI,CAAE,CAAEwB,CAAC,CAAExF,MAAM,CAAG,GAAG,CAAEyF,CAAC,CAAEiC,IAAI,CAAG,CAAC,CAAEhC,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,EAAG,CAAC,CAAC,CACvF+B,IAAI,EAAI,EAAE,CAEV;AACA1D,IAAI,CAACwD,QAAQ,CAAC,sBAAsB,CAAE,CAAEhC,CAAC,CAAExF,MAAM,CAAEyF,CAAC,CAAEiC,IAAI,CAAED,IAAI,CAAE,EAAE,CAAEhG,IAAK,CAAC,CAAC,CAC7EuC,IAAI,CAACwD,QAAQ,CAAC,kBAAkB,CAAE,CAAEhC,CAAC,CAAExF,MAAM,CAAG,GAAG,CAAEyF,CAAC,CAAEiC,IAAI,CAAED,IAAI,CAAE,EAAE,CAAEhG,IAAK,CAAC,CAAC,CAC/E,KAAM,CAAAsG,YAAY,CAAG1G,6BAA6B,CAACC,IAAI,CAAE,kBAAkB,CAAE+B,eAAe,CAAE5B,IAAI,CAAE,EAAE,CAAE,IAAI,CAAC,CAC7Ga,OAAO,CAACqB,GAAG,CAAC,0CAA0C,CAAEN,eAAe,EAAI,EAAE,CAAC,CAC9E0E,YAAY,CAACxC,SAAS,CAACvB,IAAI,CAAE,CAAEwB,CAAC,CAAExF,MAAM,CAAEyF,CAAC,CAAEiC,IAAI,CAAG,EAAE,CAAEhC,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,EAAG,CAAC,CAAC,CACjF,KAAM,CAAAqC,UAAU,CAAG3G,6BAA6B,CAACC,IAAI,CAAE,eAAe,CAAEgC,YAAY,CAAE7B,IAAI,CAAE,EAAE,CAAE,IAAI,CAAC,CACrGa,OAAO,CAACqB,GAAG,CAAC,uCAAuC,CAAEL,YAAY,EAAI,EAAE,CAAC,CACxE0E,UAAU,CAACzC,SAAS,CAACvB,IAAI,CAAE,CAAEwB,CAAC,CAAExF,MAAM,CAAG,GAAG,CAAEyF,CAAC,CAAEiC,IAAI,CAAG,EAAE,CAAEhC,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,EAAG,CAAC,CAAC,CACrF+B,IAAI,EAAI,EAAE,CAEV;AACA,KAAM,CAAA5E,OAAO,CAAG,CACd,uBAAuB,CACvB,0BAA0B,CAC1B,qBAAqB,CACrB,kBAAkB,CAClB,mBAAmB,CACnB,iBAAiB,CAClB,CAED;AACAnC,kBAAkB,CAACqD,IAAI,CAAEvC,IAAI,CAAEiG,IAAI,CAAEzE,UAAU,CAAEH,OAAO,CAAC,CAEzD;AACA,GAAI,CAAAmF,OAAO,CAAGP,IAAI,CAAG,EAAE,CAAE;AACzB,IAAK,GAAI,CAAAvC,GAAG,CAAG,CAAC,CAAEA,GAAG,CAAGlC,UAAU,CAACrB,MAAM,CAAEuD,GAAG,EAAE,CAAE,CAChD,GAAI,CAAAiB,IAAI,CAAGpG,MAAM,CACjB,IAAK,GAAI,CAAAyG,GAAG,CAAG,CAAC,CAAEA,GAAG,CAAGxD,UAAU,CAACkC,GAAG,CAAC,CAACvD,MAAM,CAAE6E,GAAG,EAAE,CAAE,CACrD,KAAM,CAAAlF,SAAS,gBAAAiB,MAAA,CAAkB2C,GAAG,CAAG,CAAC,OAAA3C,MAAA,CAAKiE,GAAG,CAAG,CAAC,CAAE,CACtD,KAAM,CAAA1E,SAAS,CAAGV,6BAA6B,CAACC,IAAI,CAAEC,SAAS,CAAE0B,UAAU,CAACkC,GAAG,CAAC,CAACsB,GAAG,CAAC,CAAEhF,IAAI,CAAE,CAAC,CAAE,KAAK,CAAC,CACtGM,SAAS,CAACwD,SAAS,CAACvB,IAAI,CAAE,CAAEwB,CAAC,CAAEY,IAAI,CAAG,CAAC,CAAEX,CAAC,CAAEwC,OAAO,CAAG,CAAC,CAAEvC,KAAK,CAAE9E,iBAAiB,CAAC6F,GAAG,CAAC,CAAG,CAAC,CAAEd,MAAM,CAAE,EAAG,CAAC,CAAC,CACzGS,IAAI,EAAIxF,iBAAiB,CAAC6F,GAAG,CAAC,CAChC,CACAwB,OAAO,EAAI,EAAE,CACf,CAEA;AACA,GAAI,CAAAC,YAAY,CAAGD,OAAO,CAAG,EAAE,CAC/BjE,IAAI,CAACwD,QAAQ,CAAC,0CAA0C,CAAE,CAAEhC,CAAC,CAAExF,MAAM,CAAEyF,CAAC,CAAEyC,YAAY,CAAET,IAAI,CAAE,EAAE,CAAEhG,IAAK,CAAC,CAAC,CACzGyG,YAAY,EAAI,EAAE,CAElB;AACA,GAAI/D,KAAK,CAACC,OAAO,CAAChB,WAAW,CAAC,CAAE,CAC9B;AACAA,WAAW,CAACmD,OAAO,CAAC,CAAC4B,SAAS,CAAEC,KAAK,GAAK,CACxC,KAAM,CAAA7G,SAAS,iBAAAiB,MAAA,CAAmB4F,KAAK,CAAG,CAAC,CAAE,CAC7C,KAAM,CAAArG,SAAS,CAAGV,6BAA6B,CAACC,IAAI,CAAEC,SAAS,CAAE4G,SAAS,EAAI,EAAE,CAAE1G,IAAI,CAAE,EAAE,CAAE,IAAI,CAAC,CACjGM,SAAS,CAACwD,SAAS,CAACvB,IAAI,CAAE,CAAEwB,CAAC,CAAExF,MAAM,CAAEyF,CAAC,CAAEyC,YAAY,CAAExC,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,EAAG,CAAC,CAAC,CACjFuC,YAAY,EAAI,EAAE,CACpB,CAAC,CAAC,CACJ,CAAC,IAAM,CACL;AACA,KAAM,CAAAG,eAAe,CAAG,CAAC,gBAAgB,CAAE,gBAAgB,CAAE,gBAAgB,CAAC,CAC9EA,eAAe,CAAC9B,OAAO,CAAEhF,SAAS,EAAK,CACrC,KAAM,CAAAQ,SAAS,CAAGV,6BAA6B,CAACC,IAAI,CAAEC,SAAS,CAAE6B,WAAW,CAAC7B,SAAS,CAAC,EAAI,EAAE,CAAEE,IAAI,CAAE,EAAE,CAAE,IAAI,CAAC,CAC9GM,SAAS,CAACwD,SAAS,CAACvB,IAAI,CAAE,CAAEwB,CAAC,CAAExF,MAAM,CAAEyF,CAAC,CAAEyC,YAAY,CAAExC,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,EAAG,CAAC,CAAC,CACjFuC,YAAY,EAAI,EAAE,CACpB,CAAC,CAAC,CACJ,CAEA,MAAO,MAAM,CAAAnE,MAAM,CAAC4D,IAAI,CAAC,CAAC,CAC5B,CAEA;AACA,MAAO,eAAe,CAAAW,+BAA+BA,CAACrF,UAAU,CAAEC,YAAY,CAAEC,gBAAgB,CAAEC,WAAW,CAAEC,eAAe,CAAEC,YAAY,CAAyE,IAAvE,CAAAC,KAAK,CAAA5B,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,cAAc,IAAE,CAAA6B,UAAU,CAAA7B,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,IAAE,CAAA8B,YAAY,CAAA9B,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,IAAE,CAAA6B,OAAO,CAAA/B,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CACjNW,OAAO,CAACqB,GAAG,CAAC,8DAA8D,CAAED,OAAO,CAAC,CACpFpB,OAAO,CAACqB,GAAG,CAAC,4DAA4D,CAAED,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAE9B,MAAM,CAAC,CAE1F,KAAM,CAAEmC,MAAM,CAAEC,IAAI,CAAEvC,IAAK,CAAC,CAAG,KAAM,CAAA5B,aAAa,CAAC0D,KAAK,CAAEC,UAAU,CAAEC,YAAY,CAAC,CACnF,GAAI,CAAA8E,UAAU,CAAGvE,IAAI,CAAE;AAEvB;AACA,KAAM,CAAAwE,cAAc,CAAGrE,KAAK,CAACC,OAAO,CAACnB,UAAU,CAAC,EAAIA,UAAU,CAACrB,MAAM,CAAG,CAAC,CAAGqB,UAAU,CAAG,CAAC,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CAAC,CACnH,KAAM,CAAAwF,eAAe,CAAGtE,KAAK,CAACC,OAAO,CAAChB,WAAW,CAAC,EAAIA,WAAW,CAACxB,MAAM,CAAG,CAAC,CAAGwB,WAAW,CAAG,CAAC,EAAE,CAAC,CACjG,KAAM,CAAAsF,gBAAgB,CAAGxF,YAAY,EAAI,EAAE,CAC3C,KAAM,CAAAyF,oBAAoB,CAAGxF,gBAAgB,EAAI,EAAE,CACnD,KAAM,CAAAyF,mBAAmB,CAAGvF,eAAe,EAAI,EAAE,CACjD,KAAM,CAAAwF,gBAAgB,CAAGvF,YAAY,EAAI,EAAE,CAE3C;AACA,KAAM,CAAAwF,WAAW,CAAIC,GAAG,EAAK,CAC3B,KAAM,CAAAC,CAAC,CAAG,CAACD,GAAG,SAAHA,GAAG,UAAHA,GAAG,CAAI,EAAE,EAAEE,QAAQ,CAAC,CAAC,CAChC;AACA,MAAO,cAAa,CAACC,IAAI,CAACF,CAAC,CAAC,CAAG,EAAE,CAAGA,CAAC,CACvC,CAAC,CAED;AACA,KAAM,CAAAG,eAAe,CAAGX,cAAc,CAACtD,GAAG,CAACC,GAAG,EAAIhB,KAAK,CAACC,OAAO,CAACe,GAAG,CAAC,CAAGA,GAAG,CAACD,GAAG,CAAC4D,WAAW,CAAC,CAAG,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CAAC,CACvH,KAAM,CAAAM,gBAAgB,CAAGX,eAAe,CAACvD,GAAG,CAAC4D,WAAW,CAAC,CAACO,MAAM,CAAC7H,IAAI,EAAIA,IAAI,GAAK,EAAE,CAAC,CACrF,KAAM,CAAA8H,iBAAiB,CAAGR,WAAW,CAACJ,gBAAgB,CAAC,CACvD,KAAM,CAAAa,qBAAqB,CAAGT,WAAW,CAACH,oBAAoB,CAAC,CAC/D,KAAM,CAAAa,oBAAoB,CAAGV,WAAW,CAACF,mBAAmB,CAAC,CAC7D,KAAM,CAAAa,iBAAiB,CAAGX,WAAW,CAACD,gBAAgB,CAAC,CAGvDvG,OAAO,CAACqB,GAAG,CAAC,uDAAuD,CAAC,CACpErB,OAAO,CAACqB,GAAG,CAAC,gBAAgB,CAAE6E,cAAc,CAAC,CAC7ClG,OAAO,CAACqB,GAAG,CAAC,kBAAkB,CAAE+E,gBAAgB,CAAC,CACjDpG,OAAO,CAACqB,GAAG,CAAC,mCAAmC,CAAEgF,oBAAoB,CAAC,CACtErG,OAAO,CAACqB,GAAG,CAAC,iBAAiB,CAAE8E,eAAe,CAAC,CAC/CnG,OAAO,CAACqB,GAAG,CAAC,qBAAqB,CAAEiF,mBAAmB,CAAC,CACvDtG,OAAO,CAACqB,GAAG,CAAC,kBAAkB,CAAEkF,gBAAgB,CAAC,CAEjD;AACA,GAAI,CAACF,oBAAoB,EAAIA,oBAAoB,CAACe,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CAC/DpH,OAAO,CAACC,IAAI,CAAC,0DAA0D,CAAC,CAC1E,CAEA;AACA,KAAM,CAAAoH,SAAS,CAAG5J,QAAQ,CAAC,CAAC,CAAC,CAC7B,KAAM,CAAA6J,UAAU,CAAG,GAAG,CACtB,KAAM,CAAAC,cAAc,CAAG,CAACF,SAAS,CAAGC,UAAU,EAAI,CAAC,CAEnD;AACA,GAAI,CAAAlC,IAAI,CAAGoC,8BAA8B,CAAC9F,IAAI,CAAEvC,IAAI,CAAExB,MAAM,CAAEqJ,iBAAiB,CAAEC,qBAAqB,CAAEC,oBAAoB,CAAEC,iBAAiB,CAAEI,cAAc,CAAC,CAEhKvH,OAAO,CAACqB,GAAG,CAAC,mBAAmB,CAAE+D,IAAI,CAAC,CAAE;AAExC;AACA,KAAM,CAAA5E,OAAO,CAAG,CACd,wBAAwB,CACxB,2BAA2B,CAC3B,sBAAsB,CACtB,mBAAmB,CACnB,oBAAoB,CACpB,kBAAkB,CACnB,CAED;AACA,KAAM,CAAAiH,aAAa,CAAG,EAAE,CACxB,GAAI,CAAAC,KAAK,CAAGtC,IAAI,CAAG,CAAC,CAEpB;AACA,KAAM,CAAAuC,YAAY,CAAIC,OAAO,EAAK,CAChC,GAAI,CAAAC,QAAQ,CAAG,CAAC,CAChBD,OAAO,CAAC3D,OAAO,CAAC,CAAC6D,QAAQ,CAAEC,MAAM,GAAK,CACpC,KAAM,CAAAC,YAAY,CAAGxK,QAAQ,CAAEsK,QAAQ,EAAI,EAAE,CAAG3I,IAAI,CAAE,CAAC,CAAEb,iBAAiB,CAACyJ,MAAM,CAAC,CAAG,CAAC,CAAC,CACvFF,QAAQ,CAAG9E,IAAI,CAACC,GAAG,CAAC6E,QAAQ,CAAEG,YAAY,CAAC1I,MAAM,CAAC,CACpD,CAAC,CAAC,CACF,MAAO,CAAAyD,IAAI,CAACC,GAAG,CAACyE,aAAa,CAAEI,QAAQ,CAAG,EAAE,CAAG,EAAE,CAAC,CACpD,CAAC,CAED;AACA,KAAM,CAAAjE,UAAU,CAAGiD,eAAe,CAACjE,GAAG,CAACC,GAAG,EAAI8E,YAAY,CAAC9E,GAAG,CAAC,CAAC,CAChE,KAAM,CAAAmB,YAAY,CAAG,EAAE,CAEvB;AACA,KAAM,CAAAiE,YAAY,CAAG,EAAE,CACvB,GAAI,CAAAxE,WAAW,CAAG/B,IAAI,CAEtB,KAAM,CAAAwG,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,KAAM,CAAAC,OAAO,CAAG1G,MAAM,CAACkC,OAAO,CAAC,CAAClG,QAAQ,CAAC,CAAC,CAAC,CAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAC1D,KAAM,CAAAG,SAAS,CAACuK,OAAO,CAAEhJ,IAAI,CAAE8B,KAAK,CAAEC,UAAU,CAAEC,YAAY,CAAC,CAC/D,MAAO,CAAAgH,OAAO,CAChB,CAAC,CAED,KAAM,CAAAC,mBAAmB,CAAGA,CAACC,EAAE,CAAEC,IAAI,GAAK,CACxC,GAAI,CAAAC,SAAS,CAAGhB,cAAc,CAC9B/G,OAAO,CAACyD,OAAO,CAAC,CAACC,MAAM,CAAEW,GAAG,GAAK,CAC/B;AACAwD,EAAE,CAAChE,aAAa,CAAC,CACfnB,CAAC,CAAEqF,SAAS,CACZpF,CAAC,CAAEmF,IAAI,CAAGtE,YAAY,CACtBZ,KAAK,CAAE9E,iBAAiB,CAACuG,GAAG,CAAC,CAC7BxB,MAAM,CAAEW,YAAY,CACpBM,KAAK,CAAE3F,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,CACzB4F,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CACF;AACA,KAAM,CAAAgE,WAAW,CAAGtE,MAAM,CAACO,KAAK,CAAC,IAAI,CAAC,CACtC+D,WAAW,CAACvE,OAAO,CAAC,CAACW,IAAI,CAAE6D,OAAO,GAAK,CACrCJ,EAAE,CAACnD,QAAQ,CAACN,IAAI,CAAE,CAChB1B,CAAC,CAAEqF,SAAS,CAAG,CAAC,CAChBpF,CAAC,CAAEmF,IAAI,CAAG,EAAE,CAAIG,OAAO,CAAG,EAAG,CAC7BtD,IAAI,CAAE,CAAC,CACPhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACJ,CAAC,CAAC,CACF4J,SAAS,EAAIjK,iBAAiB,CAACuG,GAAG,CAAC,CACrC,CAAC,CAAC,CACJ,CAAC,CAED;AACAuD,mBAAmB,CAAC3E,WAAW,CAAEiE,KAAK,CAAC,CACvC,GAAI,CAAAgB,QAAQ,CAAGhB,KAAK,CAAG1D,YAAY,CAEnC,IAAK,GAAI,CAAAnB,GAAG,CAAG,CAAC,CAAEA,GAAG,CAAGgE,eAAe,CAACvH,MAAM,CAAEuD,GAAG,EAAE,CAAE,CACrD,KAAM,CAAA8F,SAAS,CAAG/E,UAAU,CAACf,GAAG,CAAC,CAEjC;AACA,GAAI6F,QAAQ,CAAGC,SAAS,CAAGV,YAAY,CAAE,CACvCxE,WAAW,CAAG,KAAM,CAAAyE,aAAa,CAAC,CAAC,CACnCE,mBAAmB,CAAC3E,WAAW,CAAE9F,MAAM,CAAC,CACxC+K,QAAQ,CAAG/K,MAAM,CAAGqG,YAAY,CAClC,CAEA,GAAI,CAAA4E,KAAK,CAAGrB,cAAc,CAC1B;AACA,IAAK,GAAI,CAAApD,GAAG,CAAG,CAAC,CAAEA,GAAG,CAAG0C,eAAe,CAAChE,GAAG,CAAC,CAACvD,MAAM,CAAE6E,GAAG,EAAE,CAAE,CAC1DV,WAAW,CAACY,aAAa,CAAC,CACxBnB,CAAC,CAAE0F,KAAK,CACRzF,CAAC,CAAEuF,QAAQ,CAAGC,SAAS,CACvBvF,KAAK,CAAE9E,iBAAiB,CAAC6F,GAAG,CAAC,CAC7Bd,MAAM,CAAEsF,SAAS,CACjBpE,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CAEF,KAAM,CAAAsD,QAAQ,CAAGjB,eAAe,CAAChE,GAAG,CAAC,CAACsB,GAAG,CAAC,EAAI,EAAE,CAChD,KAAM,CAAA6D,YAAY,CAAGxK,QAAQ,CAACsK,QAAQ,CAAE3I,IAAI,CAAE,CAAC,CAAEb,iBAAiB,CAAC6F,GAAG,CAAC,CAAG,CAAC,CAAC,CAE5E6D,YAAY,CAAC/D,OAAO,CAAC,CAACW,IAAI,CAAE6D,OAAO,GAAK,CACtC,GAAIA,OAAO,CAAG,CAAC,CAAE,CACf,KAAM,CAAAI,cAAc,CAAGvK,iBAAiB,CAAC6F,GAAG,CAAC,CAAG,CAAC,CACjD,KAAM,CAAAW,SAAS,CAAG3F,IAAI,CAAC4F,iBAAiB,CAACH,IAAI,CAAE,CAAC,CAAC,CACjD,GAAIE,SAAS,EAAI+D,cAAc,CAAE,CAC/BpF,WAAW,CAACyB,QAAQ,CAACN,IAAI,CAAE,CACzB1B,CAAC,CAAE0F,KAAK,CAAG,CAAC,CACZzF,CAAC,CAAEuF,QAAQ,CAAG,EAAE,CAAID,OAAO,CAAG,EAAG,CACjCtD,IAAI,CAAE,CAAC,CACPhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACJ,CAAC,IAAM,CACL,GAAI,CAAAmK,aAAa,CAAGlE,IAAI,CACxB,MAAOzF,IAAI,CAAC4F,iBAAiB,CAAC+D,aAAa,CAAG,KAAK,CAAE,CAAC,CAAC,CAAGD,cAAc,EAAIC,aAAa,CAACxJ,MAAM,CAAG,CAAC,CAAE,CACpGwJ,aAAa,CAAGA,aAAa,CAACC,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAC5C,CACAtF,WAAW,CAACyB,QAAQ,CAAC4D,aAAa,EAAIA,aAAa,CAACxJ,MAAM,CAAGsF,IAAI,CAACtF,MAAM,CAAG,KAAK,CAAG,EAAE,CAAC,CAAE,CACtF4D,CAAC,CAAE0F,KAAK,CAAG,CAAC,CACZzF,CAAC,CAAEuF,QAAQ,CAAG,EAAE,CAAID,OAAO,CAAG,EAAG,CACjCtD,IAAI,CAAE,CAAC,CACPhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACJ,CACF,CACF,CAAC,CAAC,CAEFiK,KAAK,EAAItK,iBAAiB,CAAC6F,GAAG,CAAC,CACjC,CACAuE,QAAQ,EAAIC,SAAS,CACvB,CAEA;AACAvD,IAAI,CAAGsD,QAAQ,CAEf;AACAtD,IAAI,EAAI,EAAE,CAEV,KAAM,CAAA4D,oBAAoB,CAAGA,CAACX,EAAE,CAAEC,IAAI,GAAK,CACzCD,EAAE,CAAChE,aAAa,CAAC,CACfnB,CAAC,CAAEqE,cAAc,CACjBpE,CAAC,CAAEmF,IAAI,CAAG,EAAE,CACZlF,KAAK,CAAE,GAAG,CACVC,MAAM,CAAE,EAAE,CACViB,KAAK,CAAE3F,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,CACzB4F,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CACF6D,EAAE,CAACnD,QAAQ,CAAC,0CAA0C,CAAE,CACtDhC,CAAC,CAAEqE,cAAc,CAAG,EAAE,CACtBpE,CAAC,CAAEmF,IAAI,CAAG,EAAE,CACZnD,IAAI,CAAE,EAAE,CACRhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACJ,CAAC,CAED;AACA,GAAIyG,IAAI,CAAG,EAAE,CAAG6C,YAAY,CAAE,CAC5BxE,WAAW,CAAG,KAAM,CAAAyE,aAAa,CAAC,CAAC,CACnC9C,IAAI,CAAGzH,MAAM,CACf,CACAqL,oBAAoB,CAACvF,WAAW,CAAE2B,IAAI,CAAC,CACvCA,IAAI,EAAI,EAAE,CAEV;AACA,KAAM,CAAA6D,oBAAoB,CAAGnC,gBAAgB,CAACiC,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAAE;AAC5D,IAAK,GAAI,CAAAlE,GAAG,CAAG,CAAC,CAAEA,GAAG,CAAGoE,oBAAoB,CAAC3J,MAAM,CAAEuF,GAAG,EAAE,CAAE,CAC1D,KAAM,CAAAgB,SAAS,CAAGoD,oBAAoB,CAACpE,GAAG,CAAC,CAC3C,KAAM,CAAA3F,IAAI,CAAG,CAAC2G,SAAS,EAAI,EAAE,EAAEc,QAAQ,CAAC,CAAC,CAACS,IAAI,CAAC,CAAC,CAChD,GAAIlI,IAAI,EAAIA,IAAI,GAAK,gBAAgB,EAAI,CAACA,IAAI,CAACgK,QAAQ,CAAC,OAAO,CAAC,CAAE,CAAE;AAClE,KAAM,CAAApG,KAAK,CAAGtF,QAAQ,CAAC0B,IAAI,CAAEC,IAAI,CAAE,CAAC,CAAE,GAAG,CAAC,CAC1C,KAAM,CAAAgK,eAAe,CAAGpG,IAAI,CAACC,GAAG,CAAC,EAAE,CAAEF,KAAK,CAACxD,MAAM,CAAG,EAAE,CAAG,EAAE,CAAC,CAE5D;AACA,GAAI8F,IAAI,CAAG+D,eAAe,CAAGlB,YAAY,CAAE,CACzCxE,WAAW,CAAG,KAAM,CAAAyE,aAAa,CAAC,CAAC,CACnC;AACAc,oBAAoB,CAACvF,WAAW,CAAE9F,MAAM,CAAC,CACzCyH,IAAI,CAAGzH,MAAM,CAAG,EAAE,CACpB,CAEA;AACA8F,WAAW,CAACY,aAAa,CAAC,CACxBnB,CAAC,CAAEqE,cAAc,CACjBpE,CAAC,CAAEiC,IAAI,CAAG+D,eAAe,CACzB/F,KAAK,CAAE,GAAG,CACVC,MAAM,CAAE8F,eAAe,CACvB5E,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CAEF;AACA1B,KAAK,CAACmB,OAAO,CAAC,CAACW,IAAI,CAAE6D,OAAO,GAAK,CAC/B,GAAIA,OAAO,CAAG,EAAE,CAAE,CAAE;AAClB;AACA,KAAM,CAAAI,cAAc,CAAG,GAAG,CAAE;AAE5B;AACA,KAAM,CAAA/D,SAAS,CAAG3F,IAAI,CAAC4F,iBAAiB,CAACH,IAAI,CAAE,CAAC,CAAC,CAEjD,GAAIE,SAAS,EAAI+D,cAAc,CAAE,CAC/B;AACApF,WAAW,CAACyB,QAAQ,CAACN,IAAI,CAAE,CACzB1B,CAAC,CAAEqE,cAAc,CAAG,EAAE,CACtBpE,CAAC,CAAEiC,IAAI,CAAG,EAAE,CAAIqD,OAAO,CAAG,EAAG,CAC7BtD,IAAI,CAAE,CAAC,CACPhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACJ,CAAC,IAAM,CACL;AACA,GAAI,CAAAmK,aAAa,CAAGlE,IAAI,CACxB,MAAOzF,IAAI,CAAC4F,iBAAiB,CAAC+D,aAAa,CAAG,KAAK,CAAE,CAAC,CAAC,CAAGD,cAAc,EAAIC,aAAa,CAACxJ,MAAM,CAAG,CAAC,CAAE,CACpGwJ,aAAa,CAAGA,aAAa,CAACC,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAC5C,CAEAtF,WAAW,CAACyB,QAAQ,CAAC4D,aAAa,EAAIA,aAAa,CAACxJ,MAAM,CAAGsF,IAAI,CAACtF,MAAM,CAAG,KAAK,CAAG,EAAE,CAAC,CAAE,CACtF4D,CAAC,CAAEqE,cAAc,CAAG,EAAE,CACtBpE,CAAC,CAAEiC,IAAI,CAAG,EAAE,CAAIqD,OAAO,CAAG,EAAG,CAC7BtD,IAAI,CAAE,CAAC,CACPhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACJ,CACF,CACF,CAAC,CAAC,CAEFyG,IAAI,EAAI+D,eAAe,CACzB,CACF,CAEA;AACA;AACA,GAAI/H,OAAO,EAAIA,OAAO,CAAC9B,MAAM,CAAG,CAAC,CAAE,CACjCU,OAAO,CAACqB,GAAG,CAAC,0DAA0D,CAAED,OAAO,CAAC9B,MAAM,CAAE,UAAU,CAAC,CAEnG;AACA8F,IAAI,EAAI,EAAE,CAAE;AAEZ;AACA,KAAM,CAAA6C,YAAY,CAAG,EAAE,CACvB,KAAM,CAAAmB,gBAAgB,CAAG,GAAG,CAAE;AAE9B,GAAIhE,IAAI,CAAGgE,gBAAgB,CAAGnB,YAAY,CAAE,CAC1CjI,OAAO,CAACqB,GAAG,CAAC,mDAAmD,CAAC,CAChE,KAAM,CAAA8G,OAAO,CAAG1G,MAAM,CAACkC,OAAO,CAAC,CAAClG,QAAQ,CAAC,CAAC,CAAC,CAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAC1D2H,IAAI,CAAGzH,MAAM,CAAG,EAAE,CAAE;AACpBsI,UAAU,CAAGkC,OAAO,CACtB,CAEA;AACAlC,UAAU,CAACoD,QAAQ,CAAC,CAClBC,KAAK,CAAE,CAAEpG,CAAC,CAAExF,MAAM,CAAEyF,CAAC,CAAEiC,IAAI,CAAG,EAAG,CAAC,CAClCmE,GAAG,CAAE,CAAErG,CAAC,CAAExF,MAAM,CAAG,GAAG,CAAEyF,CAAC,CAAEiC,IAAI,CAAG,EAAG,CAAC,CACtCoE,SAAS,CAAE,CAAC,CACZlF,KAAK,CAAE3F,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAC1B,CAAC,CAAC,CAEF;AACAsH,UAAU,CAACf,QAAQ,CAAC,yBAAyB,CAAE,CAC7ChC,CAAC,CAAExF,MAAM,CACTyF,CAAC,CAAEiC,IAAI,CACPD,IAAI,CAAE,EAAE,CACRhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACFyG,IAAI,EAAI,EAAE,CAEV;AACA;AACA,QAAS,CAAAqE,eAAeA,CAACvK,IAAI,CAAEmD,QAAQ,CAAElD,IAAI,CAAEC,QAAQ,CAAE,CACvD,GAAI,CAACF,IAAI,CAAE,MAAO,CAAC,EAAE,CAAC,CAEtB;AACA,KAAM,CAAAwK,SAAS,CAAGxK,IAAI,CAACyK,OAAO,CAAC,WAAW,CAAE,GAAG,CAAC,CAACA,OAAO,CAAC,MAAM,CAAE,GAAG,CAAC,CAACvC,IAAI,CAAC,CAAC,CAC5E,GAAI,CAACsC,SAAS,CAAE,MAAO,CAAC,EAAE,CAAC,CAE3B,KAAM,CAAAE,KAAK,CAAGF,SAAS,CAACjF,KAAK,CAAC,GAAG,CAAC,CAClC,KAAM,CAAA3B,KAAK,CAAG,EAAE,CAChB,GAAI,CAAA+G,WAAW,CAAG,EAAE,CAEpBD,KAAK,CAAC3F,OAAO,CAAC6F,IAAI,EAAI,CACpB,KAAM,CAAAC,QAAQ,CAAGF,WAAW,CAAGA,WAAW,CAAG,GAAG,CAAGC,IAAI,CAAGA,IAAI,CAC9D,GAAI,CACF,KAAM,CAAAE,SAAS,CAAG7K,IAAI,CAAC4F,iBAAiB,CAACgF,QAAQ,CAAE3K,QAAQ,CAAC,CAC5D,GAAI4K,SAAS,EAAI3H,QAAQ,CAAE,CACzBwH,WAAW,CAAGE,QAAQ,CACxB,CAAC,IAAM,CACL,GAAIF,WAAW,CAAE/G,KAAK,CAACmH,IAAI,CAACJ,WAAW,CAAC,CACxC;AACA,GAAI,CACF,GAAI1K,IAAI,CAAC4F,iBAAiB,CAAC+E,IAAI,CAAE1K,QAAQ,CAAC,CAAGiD,QAAQ,CAAE,CACrD,GAAI,CAAA6H,OAAO,CAAGJ,IAAI,CAClB,MAAOI,OAAO,CAAC5K,MAAM,CAAG,CAAC,CAAE,CACzB,GAAI,CAAAoD,CAAC,CAAG,CAAC,CACT,MAAOA,CAAC,EAAIwH,OAAO,CAAC5K,MAAM,CAAE,CAC1B,GAAI,CACF,GAAIH,IAAI,CAAC4F,iBAAiB,CAACmF,OAAO,CAACC,SAAS,CAAC,CAAC,CAAEzH,CAAC,CAAC,CAAEtD,QAAQ,CAAC,CAAGiD,QAAQ,CAAE,MAC1EK,CAAC,EAAE,CACL,CAAE,MAAOvC,CAAC,CAAE,CACV,MACF,CACF,CACA,GAAIuC,CAAC,CAAG,CAAC,CAAE,CACTI,KAAK,CAACmH,IAAI,CAACC,OAAO,CAACC,SAAS,CAAC,CAAC,CAAEzH,CAAC,CAAC,CAAC,CAAC,CAAC,CACrCwH,OAAO,CAAGA,OAAO,CAACC,SAAS,CAACzH,CAAC,CAAC,CAAC,CAAC,CAClC,CAAC,IAAM,CACL;AACAI,KAAK,CAACmH,IAAI,CAACC,OAAO,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC,CAC7BF,OAAO,CAAGA,OAAO,CAACC,SAAS,CAAC,CAAC,CAAC,CAChC,CACF,CACAN,WAAW,CAAG,EAAE,CAClB,CAAC,IAAM,CACLA,WAAW,CAAGC,IAAI,CACpB,CACF,CAAE,MAAO3J,CAAC,CAAE,CACV;AACA0J,WAAW,CAAGC,IAAI,CACpB,CACF,CACF,CAAE,MAAO3J,CAAC,CAAE,CACV;AACA,GAAI4J,QAAQ,CAACzK,MAAM,EAAI,EAAE,CAAE,CAAE;AAC3BuK,WAAW,CAAGE,QAAQ,CACxB,CAAC,IAAM,CACL,GAAIF,WAAW,CAAE/G,KAAK,CAACmH,IAAI,CAACJ,WAAW,CAAC,CACxCA,WAAW,CAAGC,IAAI,CACpB,CACF,CACF,CAAC,CAAC,CAEF,GAAID,WAAW,CAAE/G,KAAK,CAACmH,IAAI,CAACJ,WAAW,CAAC,CACxC,MAAO,CAAA/G,KAAK,CAACxD,MAAM,CAAG,CAAC,CAAGwD,KAAK,CAAG,CAAC,EAAE,CAAC,CACxC,CACA,KAAM,CAAAuH,cAAc,CAAG,CAAC,MAAM,CAAE,YAAY,CAAE,MAAM,CAAE,UAAU,CAAE,MAAM,CAAC,CACzE,KAAM,CAAAC,gBAAgB,CAAG,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE,GAAG,CAAC,CAAE;AACjD,GAAI,CAAAxG,IAAI,CAAGpG,MAAM,CAEjB;AACA2M,cAAc,CAACpG,OAAO,CAAC,CAACC,MAAM,CAAEC,GAAG,GAAK,CACtC;AACA8B,UAAU,CAAC5B,aAAa,CAAC,CACvBnB,CAAC,CAAEY,IAAI,CACPX,CAAC,CAAEiC,IAAI,CAAG,EAAE,CACZhC,KAAK,CAAEkH,gBAAgB,CAACnG,GAAG,CAAC,CAC5Bd,MAAM,CAAE,EAAE,CACViB,KAAK,CAAE3F,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAC1B,CAAC,CAAC,CAEF;AACAsH,UAAU,CAAC5B,aAAa,CAAC,CACvBnB,CAAC,CAAEY,IAAI,CACPX,CAAC,CAAEiC,IAAI,CAAG,EAAE,CACZhC,KAAK,CAAEkH,gBAAgB,CAACnG,GAAG,CAAC,CAC5Bd,MAAM,CAAE,EAAE,CACVkB,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,GACf,CAAC,CAAC,CAEF;AACAyB,UAAU,CAACf,QAAQ,CAAChB,MAAM,CAAE,CAC1BhB,CAAC,CAAEY,IAAI,CAAG,CAAC,CACXX,CAAC,CAAEiC,IAAI,CAAG,EAAE,CACZD,IAAI,CAAE,EAAE,CACRhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CAEFmF,IAAI,EAAIwG,gBAAgB,CAACnG,GAAG,CAAC,CAC/B,CAAC,CAAC,CAEFiB,IAAI,EAAI,EAAE,CAEV;AACAhE,OAAO,CAAC6C,OAAO,CAAC,CAACsG,KAAK,CAAEC,MAAM,GAAK,CACjC;AACA,KAAM,CAAAC,SAAS,CAAGF,KAAK,CAACE,SAAS,EAAI,EAAE,CACvC,GAAI,CAAAC,OAAO,CAAG,EAAE,CAChB,GAAI,CAAAC,IAAI,CAAG,EAAE,CAEb;AACA,KAAM,CAAAC,cAAc,CAAGH,SAAS,CAACI,KAAK,CAAC,sDAAsD,CAAC,CAC9F,GAAID,cAAc,CAAE,CAClBF,OAAO,CAAGE,cAAc,CAAC,CAAC,CAAC,CAC3BD,IAAI,CAAGC,cAAc,CAAC,CAAC,CAAC,CAC1B,CAAC,IAAM,IAAIH,SAAS,CAACvB,QAAQ,CAAC,QAAQ,CAAC,CAAE,CACvC;AACA,KAAM,CAAA4B,KAAK,CAAGL,SAAS,CAAChG,KAAK,CAAC,QAAQ,CAAC,CACvC,GAAIqG,KAAK,CAACxL,MAAM,GAAK,CAAC,CAAE,CACtBoL,OAAO,CAAGI,KAAK,CAAC,CAAC,CAAC,CAACnB,OAAO,CAAC,gBAAgB,CAAE,EAAE,CAAC,CAACA,OAAO,CAAC,OAAO,CAAE,EAAE,CAAC,CACrEgB,IAAI,CAAGG,KAAK,CAAC,CAAC,CAAC,CAACnB,OAAO,CAAC,OAAO,CAAE,EAAE,CAAC,CACtC,CACF,CAAC,IAAM,CACL;AACAgB,IAAI,CAAGF,SAAS,CAClB,CAEA;AACA,KAAM,CAAArL,QAAQ,CAAG,CAAC,CAClB,KAAM,CAAA2L,WAAW,CAAG,CAACR,KAAK,CAAChK,IAAI,EAAI,EAAE,CAAEgK,KAAK,CAACS,UAAU,EAAI,EAAE,CAAET,KAAK,CAACU,IAAI,EAAI,EAAE,CAAEP,OAAO,CAAEC,IAAI,CAAC,CAC/F,GAAI,CAAAO,SAAS,CAAG,EAAE,CAClB,GAAI,CAAAC,aAAa,CAAG,CAAC,CACrBJ,WAAW,CAAC9G,OAAO,CAAC,CAACmH,QAAQ,CAAEjH,GAAG,GAAK,CACrC,KAAM,CAAA9B,QAAQ,CAAGiI,gBAAgB,CAACnG,GAAG,CAAC,CAAG,CAAC,CAC1C;AACA+G,SAAS,CAAC/G,GAAG,CAAC,CAAGsF,eAAe,CAAC2B,QAAQ,CAAE/I,QAAQ,CAAElD,IAAI,CAAEC,QAAQ,CAAC,CACpE+L,aAAa,CAAGpI,IAAI,CAACC,GAAG,CAACmI,aAAa,CAAED,SAAS,CAAC/G,GAAG,CAAC,CAAC7E,MAAM,CAAC,CAChE,CAAC,CAAC,CAEF;AAEA;AACA,KAAM,CAAAqJ,SAAS,CAAG5F,IAAI,CAACC,GAAG,CAAC,EAAE,CAAEmI,aAAa,CAAG,EAAE,CAAG,EAAE,CAAC,CAAE;AAEzD;AACA,GAAI/F,IAAI,CAAGuD,SAAS,CAAGV,YAAY,CAAE,CACnC,KAAM,CAAAE,OAAO,CAAG1G,MAAM,CAACkC,OAAO,CAAC,CAAClG,QAAQ,CAAC,CAAC,CAAC,CAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAC1D2H,IAAI,CAAGzH,MAAM,CAAG,EAAE,CAClBsI,UAAU,CAAGkC,OAAO,CACtB,CAEArE,IAAI,CAAGpG,MAAM,CAEbqN,WAAW,CAAC9G,OAAO,CAAC,CAACmH,QAAQ,CAAEjH,GAAG,GAAK,CACrC;AACA8B,UAAU,CAAC5B,aAAa,CAAC,CACvBnB,CAAC,CAAEY,IAAI,CACPX,CAAC,CAAEiC,IAAI,CAAGuD,SAAS,CACnBvF,KAAK,CAAEkH,gBAAgB,CAACnG,GAAG,CAAC,CAC5Bd,MAAM,CAAEsF,SAAS,CACjBpE,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,GACf,CAAC,CAAC,CAEF;AACA,KAAM,CAAA1B,KAAK,CAAGoI,SAAS,CAAC/G,GAAG,CAAC,CAC5B;AACArB,KAAK,CAACmB,OAAO,CAAC,CAACW,IAAI,CAAE6D,OAAO,GAAK,CAC/BxC,UAAU,CAACf,QAAQ,CAACN,IAAI,CAAE,CACxB1B,CAAC,CAAEY,IAAI,CAAG,CAAC,CACXX,CAAC,CAAEiC,IAAI,CAAG,EAAE,CAAIqD,OAAO,CAAG,EAAG,CAAE;AAC/BtD,IAAI,CAAE/F,QAAQ,CACdD,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFmF,IAAI,EAAIwG,gBAAgB,CAACnG,GAAG,CAAC,CAC/B,CAAC,CAAC,CAEFiB,IAAI,EAAIuD,SAAS,CACnB,CAAC,CAAC,CAEF3I,OAAO,CAACqB,GAAG,CAAC,uCAAuC,CAAED,OAAO,CAAC9B,MAAM,CAAE,UAAU,CAAC,CAClF,CAAC,IAAM,CACLU,OAAO,CAACqB,GAAG,CAAC,+CAA+C,CAAC,CAC9D,CAEA,MAAO,MAAM,CAAAI,MAAM,CAAC4D,IAAI,CAAC,CAAC,CAC5B,CAEA;AACA,MAAO,eAAe,CAAAgG,sBAAsBA,CAAC9K,IAAI,CAAEC,OAAO,CAAEC,OAAO,CAA8E,IAA5E,CAAAQ,KAAK,CAAA5B,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,cAAc,IAAE,CAAA6B,UAAU,CAAA7B,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,IAAE,CAAA8B,YAAY,CAAA9B,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,IAAE,CAAA+B,OAAO,CAAA/B,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CAC7IW,OAAO,CAACqB,GAAG,CAAC,4CAA4C,CAAED,OAAO,CAAC,CAClEpB,OAAO,CAACqB,GAAG,CAAC,2CAA2C,CAAED,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAE9B,MAAM,CAAC,CAEzE,KAAM,CAAEmC,MAAM,CAAEC,IAAI,CAAE4J,SAAS,CAAEnM,IAAK,CAAC,CAAG,KAAM,CAAA5B,aAAa,CAAC0D,KAAK,CAAEC,UAAU,CAAEC,YAAY,CAAC,CAE9F;AACA,KAAM,CAAAS,QAAQ,CAAGC,KAAK,CAACC,OAAO,CAACvB,IAAI,CAAC,EAAIA,IAAI,CAACjB,MAAM,CAAG,CAAC,CAAGiB,IAAI,CAAG,CAAC,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CAAC,CACvF,KAAM,CAAAwB,WAAW,CAAGF,KAAK,CAACC,OAAO,CAACtB,OAAO,CAAC,EAAIA,OAAO,CAAClB,MAAM,CAAG,CAAC,CAAGkB,OAAO,CAAG,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CACjG,KAAM,CAAA+B,WAAW,CAAGV,KAAK,CAACC,OAAO,CAACrB,OAAO,CAAC,EAAIA,OAAO,CAACnB,MAAM,CAAG,CAAC,CAAGmB,OAAO,CAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAEnF;AACA,KAAM,CAAA8K,SAAS,CAAG,KAAM,CAAAhN,uBAAuB,CAAC+M,SAAS,CAAEnM,IAAI,CAAEoD,WAAW,CAAErB,UAAU,CAAEC,YAAY,CAAC,CAEvG;AACA,GAAI,CAAAO,IAAI,CAAG6J,SAAS,CAAC9H,WAAW,CAChC,GAAI,CAAA2B,IAAI,CAAGmG,SAAS,CAACC,gBAAgB,CAAGpN,kBAAkB,CAE1D;AACA,KAAM,CAAAgB,QAAQ,CAAG,CAAC,CAAE;AACpB,KAAM,CAAAkD,UAAU,CAAGlD,QAAQ,CAAG,CAAC,CAAE;AACjC,KAAM,CAAAqM,SAAS,CAAGxN,SAAS,CAAC2E,GAAG,CAAC8I,CAAC,EAAIA,CAAC,CAAG,CAAC,CAAC,CAE3C;AACA,QAAS,CAAAC,YAAYA,CAACzM,IAAI,CAAE,CAC1B;AACA,MAAO,CAAAA,IAAI,CAACyK,OAAO,CAAC,gKAAmI,CAAE,EAAE,CAAC,CAC9J,CAEA;AACA,KAAM,CAAAiC,WAAW,CAAGhK,QAAQ,CAACgB,GAAG,CAAC,CAACC,GAAG,CAAE2H,MAAM,GAC3C3H,GAAG,CAACD,GAAG,CAAC,CAACiJ,IAAI,CAAE1H,GAAG,GAAK,CACrB,KAAM,CAAA2D,QAAQ,CAAG,CAAC+D,IAAI,EAAI,EAAE,EAAElF,QAAQ,CAAC,CAAC,CAExC;AACA,GAAIxC,GAAG,GAAK,CAAC,EAAI2D,QAAQ,CAACV,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CACvCpH,OAAO,CAACqB,GAAG,qDAAAnB,MAAA,CAA2CsK,MAAM,MAAK1C,QAAQ,CAAC,CAC5E,CAEA;AACA,GAAI,CAAAgE,eAAe,CAAGhE,QAAQ,CAC9B,GAAIA,QAAQ,CAACiE,UAAU,CAAC,SAAS,CAAC,EAAIjE,QAAQ,CAACoB,QAAQ,CAAC,IAAI,CAAC,CAAE,CAC7D,KAAM,CAAA4B,KAAK,CAAGhD,QAAQ,CAACrD,KAAK,CAAC,IAAI,CAAC,CAClC,KAAM,CAAAxD,KAAK,CAAG6J,KAAK,CAAC,CAAC,CAAC,CAACnB,OAAO,CAAC,UAAU,CAAE,EAAE,CAAC,CAACvC,IAAI,CAAC,CAAC,CACrD,KAAM,CAAA4E,GAAG,CAAGlB,KAAK,CAAC,CAAC,CAAC,CACpBgB,eAAe,IAAA5L,MAAA,CAAMe,KAAK,OAAAf,MAAA,CAAK8L,GAAG,KAAG,CAAE;AACzC,CAAC,IAAM,CACLF,eAAe,CAAGH,YAAY,CAAC7D,QAAQ,CAAC,CAAE;AAC5C,CAEA,KAAM,CAAAzF,QAAQ,CAAGoJ,SAAS,CAACtH,GAAG,CAAC,EAAI,GAAG,CACtC,MAAO,CAAA3G,QAAQ,CAACsO,eAAe,CAAE3M,IAAI,CAAEC,QAAQ,CAAEiD,QAAQ,CAAC,CAC5D,CAAC,CACH,CAAC,CACD;AACA,KAAM,CAAA4J,cAAc,CAAGrK,QAAQ,CAACgB,GAAG,CAAEC,GAAG,EAAKA,GAAG,CAACD,GAAG,CAAC,IAAM,CAAC,CAAC,CAAC,CAC9D,KAAM,CAAAsJ,iBAAiB,CAAGN,WAAW,CAAChJ,GAAG,CACvCC,GAAG,EAAI,CACL,KAAM,CAAAsJ,OAAO,CAAGtJ,GAAG,CAACD,GAAG,CAACE,KAAK,EAAI,CAC/B,KAAM,CAAAO,MAAM,CAAGP,KAAK,CAACxD,MAAM,CAAGgD,UAAU,CAAG,EAAE,CAC7C,MAAO,CAAA8J,KAAK,CAAC/I,MAAM,CAAC,CAAG,EAAE,CAAGA,MAAM,CACpC,CAAC,CAAC,CACF,KAAM,CAAAgJ,SAAS,CAAGtJ,IAAI,CAACC,GAAG,CAAC,GAAGmJ,OAAO,CAAE,EAAE,CAAC,CAC1C,MAAO,CAAAC,KAAK,CAACC,SAAS,CAAC,CAAG,EAAE,CAAGA,SAAS,CAC1C,CACF,CAAC,CACDH,iBAAiB,CAACI,OAAO,CAAC,EAAE,CAAC,CAAE;AAG/B;AACA,KAAM,CAAAC,UAAU,CAAGtO,SAAS,CAACuO,MAAM,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAAGC,CAAC,CAAE,CAAC,CAAC,CACvD,KAAM,CAAAzE,YAAY,CAAG,EAAE,CAEvB;AACA,GAAI,CAAA0E,QAAQ,CAAG,CAAC,CAChB;AACA,GAAI,CAAAC,WAAW,CAAG,KAAK,CAEvB;AACA,QAAS,CAAAC,gBAAgBA,CAACnL,IAAI,CAAEyB,CAAC,CAAEa,YAAY,CAAE,CAC/C,KAAM,CAAA8I,cAAc,CAAG,CAAC,CAAE;AAC1B,KAAM,CAAAC,gBAAgB,CAAG,EAAE,CAC3B,GAAI,CAAAjJ,IAAI,CAAGpG,MAAM,CACjBqE,WAAW,CAACkC,OAAO,CAAC,CAACC,MAAM,CAAEC,GAAG,GAAK,CACnC,KAAM,CAAAC,QAAQ,CAAGnG,SAAS,CAACkG,GAAG,CAAC,EAAI,GAAG,CAEtC;AACAzC,IAAI,CAAC2C,aAAa,CAAC,CACjBnB,CAAC,CAAEY,IAAI,CACPX,CAAC,CAAEA,CAAC,CAAGa,YAAY,CACnBZ,KAAK,CAAEgB,QAAQ,CACff,MAAM,CAAEW,YAAY,CACpBM,KAAK,CAAE3F,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,CACzB4F,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CAEF,KAAM,CAAA1B,KAAK,CAAG,CAACoB,MAAM,EAAI,EAAE,EAAEO,KAAK,CAAC,IAAI,CAAC,CACxC,KAAM,CAAAC,eAAe,CAAG5B,KAAK,CAACxD,MAAM,CAAGyN,gBAAgB,CACvD,GAAI,CAAApI,MAAM,CAAGxB,CAAC,CAAI,CAACa,YAAY,CAAGU,eAAe,EAAI,CAAE,CAAGoI,cAAc,CACxEhK,KAAK,CAACmB,OAAO,CAAC,CAACW,IAAI,CAAEC,GAAG,GAAK,CAC3B,KAAM,CAAAC,SAAS,CAAG3F,IAAI,CAAC4F,iBAAiB,CAACH,IAAI,CAAEkI,cAAc,CAAC,CAC9D,KAAM,CAAA9H,KAAK,CAAGlB,IAAI,CAAG,CAACM,QAAQ,CAAGU,SAAS,EAAI,CAAC,CAC/C,KAAM,CAAAG,KAAK,CAAGN,MAAM,CAAGE,GAAG,CAAGkI,gBAAgB,CAC7CrL,IAAI,CAACwD,QAAQ,CAACN,IAAI,CAAE,CAClB1B,CAAC,CAAE8B,KAAK,CACR7B,CAAC,CAAE8B,KAAK,CACRE,IAAI,CAAE2H,cAAc,CACpB3N,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACJ,CAAC,CAAC,CACFmF,IAAI,EAAI7F,SAAS,CAACkG,GAAG,CAAC,EAAI,GAAG,CAC/B,CAAC,CAAC,CACJ,CAEA;AACA,QAAS,CAAA6I,aAAaA,CAACtL,IAAI,CAAEuL,WAAW,CAAErJ,UAAU,CAAEsJ,OAAO,CAAsB,IAApB,CAAAC,WAAW,CAAA9N,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CAC/E,GAAI,CAAA8D,CAAC,CAAG8J,WAAW,CACnB;AACA,IAAK,GAAI,CAAAvK,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAIwK,OAAO,CAAExK,CAAC,EAAE,CAAE,CACjC,GAAIA,CAAC,GAAK,CAAC,EAAI,CAACyK,WAAW,CAAE,CAC3BhK,CAAC,EAAIS,UAAU,CAAClB,CAAC,CAAC,EAAI,CAAC,CACvB,SACF,CACAhB,IAAI,CAAC2H,QAAQ,CAAC,CACZC,KAAK,CAAE,CAAEpG,CAAC,CAAExF,MAAM,CAAEyF,CAAC,CAAEA,CAAE,CAAC,CAC1BoG,GAAG,CAAE,CAAErG,CAAC,CAAExF,MAAM,CAAG6O,UAAU,CAAEpJ,CAAC,CAAEA,CAAE,CAAC,CACrCqG,SAAS,CAAE,CAAC,CACZlF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACF,GAAI+D,CAAC,CAAGwK,OAAO,CAAE,CACf/J,CAAC,EAAIS,UAAU,CAAClB,CAAC,CAAC,EAAI,CAAC,CACzB,CACF,CACA;AACA,GAAI,CAAAoB,IAAI,CAAGpG,MAAM,CACjB,KAAM,CAAA0P,mBAAmB,CAAGxJ,UAAU,CAACmF,KAAK,CAAC,CAAC,CAAEmE,OAAO,EAAIC,WAAW,CAAG,CAAC,CAAG,CAAC,CAAC,CAAC,CAACX,MAAM,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAAGC,CAAC,CAAE,CAAC,CAAC,CAC3G,IAAK,GAAI,CAAAW,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAIpP,SAAS,CAACqB,MAAM,CAAE+N,CAAC,EAAE,CAAE,CAC1C3L,IAAI,CAAC2H,QAAQ,CAAC,CACZC,KAAK,CAAE,CAAEpG,CAAC,CAAEY,IAAI,CAAEX,CAAC,CAAE8J,WAAY,CAAC,CAClC1D,GAAG,CAAE,CAAErG,CAAC,CAAEY,IAAI,CAAEX,CAAC,CAAE8J,WAAW,CAAGG,mBAAoB,CAAC,CACtD5D,SAAS,CAAE,CAAC,CACZlF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACF,GAAI0O,CAAC,CAAGpP,SAAS,CAACqB,MAAM,CAAE,CACxBwE,IAAI,EAAI7F,SAAS,CAACoP,CAAC,CAAC,CACtB,CACF,CACF,CAEA;AACA,QAAS,CAAAC,YAAYA,CAAC5L,IAAI,CAAEmB,GAAG,CAAEyF,IAAI,CAAEiF,eAAe,CAAEC,oBAAoB,CAAE,CAC5E;AACA,GAAI,CAAAC,OAAO,CAAGnF,IAAI,CAClB,GAAI,CAAAoF,iBAAiB,CAAG,CAAC,CACzB,GAAIF,oBAAoB,CAAE,CACxBE,iBAAiB,CAAGxB,iBAAiB,CAAC,CAAC,CAAC,CACxCW,gBAAgB,CAACnL,IAAI,CAAE+L,OAAO,CAAEC,iBAAiB,CAAC,CAClDD,OAAO,EAAIC,iBAAiB,CAC5BH,eAAe,EAAIG,iBAAiB,CACtC,CAEA;AACA,KAAM,CAAAC,WAAW,CAAG5K,IAAI,CAACC,GAAG,CAAC,CAAC,CAAED,IAAI,CAAC6K,KAAK,CAAC,CAACL,eAAe,CAAG,EAAE,EAAIjL,UAAU,CAAC,CAAC,CAChF;AACA,KAAM,CAAAuL,iBAAiB,CAAG9K,IAAI,CAACC,GAAG,CAChC,GAAG4I,WAAW,CAAC/I,GAAG,CAAC,CAACD,GAAG,CAAC,CAACE,KAAK,CAAEqB,GAAG,GAAKpB,IAAI,CAACC,GAAG,CAAC,CAAC,CAAEF,KAAK,CAACxD,MAAM,CAAG2M,cAAc,CAACpJ,GAAG,CAAC,CAACsB,GAAG,CAAC,CAAC,CAC9F,CAAC,CACD,KAAM,CAAA2J,cAAc,CAAG/K,IAAI,CAACC,GAAG,CAAC,CAAC,CAAED,IAAI,CAACgL,GAAG,CAACJ,WAAW,CAAEE,iBAAiB,CAAC,CAAC,CAC5E,KAAM,CAAAG,WAAW,CAAGF,cAAc,CAAGxL,UAAU,CAAG,EAAE,CAEpD;AACA,KAAM,CAAAiK,UAAU,CAAGtO,SAAS,CAACuO,MAAM,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAAGC,CAAC,CAAE,CAAC,CAAC,CACvD;AACAhL,IAAI,CAAC2H,QAAQ,CAAC,CAAEC,KAAK,CAAE,CAAEpG,CAAC,CAAExF,MAAM,CAAEyF,CAAC,CAAEsK,OAAQ,CAAC,CAAElE,GAAG,CAAE,CAAErG,CAAC,CAAExF,MAAM,CAAG6O,UAAU,CAAEpJ,CAAC,CAAEsK,OAAQ,CAAC,CAAEjE,SAAS,CAAE,CAAC,CAAElF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACnI;AACA,GAAI,CAAAsP,QAAQ,CAAGvQ,MAAM,CACrB,IAAK,GAAI,CAAA2P,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAIpP,SAAS,CAACqB,MAAM,CAAE+N,CAAC,EAAE,CAAE,CAC1C3L,IAAI,CAAC2H,QAAQ,CAAC,CAAEC,KAAK,CAAE,CAAEpG,CAAC,CAAE+K,QAAQ,CAAE9K,CAAC,CAAEsK,OAAQ,CAAC,CAAElE,GAAG,CAAE,CAAErG,CAAC,CAAE+K,QAAQ,CAAE9K,CAAC,CAAEsK,OAAO,CAAGO,WAAY,CAAC,CAAExE,SAAS,CAAE,CAAC,CAAElF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACxI,GAAI0O,CAAC,CAAGpP,SAAS,CAACqB,MAAM,CAAE2O,QAAQ,EAAIhQ,SAAS,CAACoP,CAAC,CAAC,CACpD,CACA;AACA3L,IAAI,CAAC2H,QAAQ,CAAC,CAAEC,KAAK,CAAE,CAAEpG,CAAC,CAAExF,MAAM,CAAEyF,CAAC,CAAEsK,OAAO,CAAGO,WAAY,CAAC,CAAEzE,GAAG,CAAE,CAAErG,CAAC,CAAExF,MAAM,CAAG6O,UAAU,CAAEpJ,CAAC,CAAEsK,OAAO,CAAGO,WAAY,CAAC,CAAExE,SAAS,CAAE,CAAC,CAAElF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAE/J;AACA,GAAI,CAAAmF,IAAI,CAAGpG,MAAM,CACjB,IAAK,GAAI,CAAAyG,GAAG,CAAG,CAAC,CAAEA,GAAG,CAAGvC,QAAQ,CAACiB,GAAG,CAAC,CAACvD,MAAM,CAAE6E,GAAG,EAAE,CAAE,CACnD,KAAM,CAAA+J,QAAQ,CAAGtC,WAAW,CAAC/I,GAAG,CAAC,CAACsB,GAAG,CAAC,EAAI,EAAE,CAC5C,KAAM,CAAAgK,MAAM,CAAGlC,cAAc,CAACpJ,GAAG,CAAC,CAACsB,GAAG,CAAC,EAAI,CAAC,CAC5C,KAAM,CAAAiK,SAAS,CAAGrL,IAAI,CAACC,GAAG,CAAC,CAAC,CAAEkL,QAAQ,CAAC5O,MAAM,CAAG6O,MAAM,CAAC,CACvD,KAAM,CAAAE,SAAS,CAAGtL,IAAI,CAACgL,GAAG,CAACK,SAAS,CAAEN,cAAc,CAAC,CAErD,GAAI,CAAA7I,KAAK,CAAGwI,OAAO,CAAG,CAAC,CACvB,IAAK,GAAI,CAAA/K,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG2L,SAAS,CAAE3L,CAAC,EAAE,CAAE,CAClC,KAAM,CAAAkC,IAAI,CAAGsJ,QAAQ,CAACC,MAAM,CAAGzL,CAAC,CAAC,CACjC,KAAM,CAAAgG,QAAQ,CAAGzD,KAAK,CAAGvC,CAAC,CAAGJ,UAAU,CACvC,KAAM,CAAAgM,UAAU,CAAGb,OAAO,CAAGO,WAAW,CAAG,CAAC,CAC5C,GAAItF,QAAQ,CAAG4F,UAAU,CAAE,MAAO;AAClC5M,IAAI,CAACwD,QAAQ,CAACN,IAAI,CAAE,CAClB1B,CAAC,CAAEY,IAAI,CAAG,CAAC,CACXX,CAAC,CAAEuF,QAAQ,CACXvD,IAAI,CAAE/F,QAAQ,CACdD,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACnB0D,QAAQ,CAAEoJ,SAAS,CAACtH,GAAG,CAAC,EAAI,GAC9B,CAAC,CAAC,CACJ,CACA;AACA8H,cAAc,CAACpJ,GAAG,CAAC,CAACsB,GAAG,CAAC,CAAGgK,MAAM,CAAGE,SAAS,CAC7CvK,IAAI,EAAI7F,SAAS,CAACkG,GAAG,CAAC,CACxB,CAEA,MAAO,CAAEoK,WAAW,CAAEb,iBAAiB,CAAGM,WAAW,CAAEA,WAAW,CAAEN,iBAAiB,CAAEc,MAAM,CAAEf,OAAO,CAAGO,WAAY,CAAC,CACxH,CAEA;AACA,MAAOrB,QAAQ,CAAG/K,QAAQ,CAACtC,MAAM,CAAE,CACjC;AACA,GAAI,CAAAiO,eAAe,CAAGnI,IAAI,CAAG6C,YAAY,CAE3CjI,OAAO,CAACqB,GAAG,8DAAAnB,MAAA,CAA2CqN,eAAe,+BAAArN,MAAA,CAA0B0M,WAAW,KAAG,CAAC,CAE5G;AACF,GAAI,CAAA6B,YAAY,CAAG,CAAC,CACpB,GAAI,CAAAC,SAAS,CAAG9B,WAAW,CAAG,CAAC,CAAGV,iBAAiB,CAAC,CAAC,CAAC,CAAE;AAEtD;AACA,MAAOS,QAAQ,CAAG8B,YAAY,CAAG7M,QAAQ,CAACtC,MAAM,CAAE,CAChD,KAAM,CAAAqP,aAAa,CAAGzC,iBAAiB,CAACS,QAAQ,CAAG8B,YAAY,CAAG,CAAC,CAAC,EAAI,EAAE,CAE1E;AACA,GAAIC,SAAS,CAAGC,aAAa,CAAG,EAAE,CAAGpB,eAAe,CAAE,CACpDvN,OAAO,CAACqB,GAAG,iEAAAnB,MAAA,CAAiDwO,SAAS,yBAAAxO,MAAA,CAAoByO,aAAa,sBAAAzO,MAAA,CAAiBqN,eAAe,CAAE,CAAC,CACzI,MACF,CAEAmB,SAAS,EAAIC,aAAa,CAC1BF,YAAY,EAAE,CAChB,CAEA;AACA;AACA,GAAIA,YAAY,GAAK,CAAC,EAAI9B,QAAQ,CAAG/K,QAAQ,CAACtC,MAAM,CAAE,CACpD,KAAM,CAAAqP,aAAa,CAAGzC,iBAAiB,CAACS,QAAQ,CAAG,CAAC,CAAC,EAAI,EAAE,CAC3D,KAAM,CAAAiC,gBAAgB,CAAIjR,MAAM,CAAGsK,YAAY,CAAIiE,iBAAiB,CAAC,CAAC,CAAC,CAAE;AAEzE,GAAIyC,aAAa,EAAIC,gBAAgB,CAAE,CACrC;AACA,KAAM,CAAAzG,OAAO,CAAG1G,MAAM,CAACkC,OAAO,CAAC,CAAClG,QAAQ,CAAC,CAAC,CAAC,CAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAC1D,KAAM,CAAAG,SAAS,CAACuK,OAAO,CAAEhJ,IAAI,CAAE,EAAE,CAAE+B,UAAU,CAAEC,YAAY,CAAC,CAAE;AAC9DO,IAAI,CAAGyG,OAAO,CACd;AACA/C,IAAI,CAAGzH,MAAM,CACbqC,OAAO,CAACqB,GAAG,kCAAAnB,MAAA,CAAwByM,QAAQ,yCAAiC,CAAC,CAC7E,SAAU;AACZ,CAAC,IAAM,CACL;AACA3M,OAAO,CAACqB,GAAG,uBAAAnB,MAAA,CAAayM,QAAQ,2DAAgD,CAAC,CAEjF;AACA,GAAI,CAAAc,OAAO,CAAGrI,IAAI,CAClB,KAAM,CAAAyJ,aAAa,CAAGtB,eAAe,CACrCD,YAAY,CAAC5L,IAAI,CAAEiL,QAAQ,CAAEc,OAAO,CAAEoB,aAAa,CAAE,KAAK,CAAC,CAAE;AAE7D;AACA,MAAOjD,WAAW,CAACe,QAAQ,CAAC,CAACmC,IAAI,CAAC,CAAChM,KAAK,CAAEqB,GAAG,GAAK,CAAC8H,cAAc,CAACU,QAAQ,CAAC,CAACxI,GAAG,CAAC,EAAI,CAAC,EAAIrB,KAAK,CAACxD,MAAM,CAAC,CAAE,CACtG,KAAM,CAAAyP,QAAQ,CAAGtN,MAAM,CAACkC,OAAO,CAAC,CAAClG,QAAQ,CAAC,CAAC,CAAC,CAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAC3D,KAAM,CAAAG,SAAS,CAACmR,QAAQ,CAAE5P,IAAI,CAAE,EAAE,CAAE+B,UAAU,CAAEC,YAAY,CAAC,CAC7DO,IAAI,CAAGqN,QAAQ,CACfzB,YAAY,CAAC5L,IAAI,CAAEiL,QAAQ,CAAEhP,MAAM,CAAGA,MAAM,CAAGsK,YAAY,CAAG,KAAK,CAAC,CACtE,CAEA0E,QAAQ,EAAI,CAAC,CAAE;AACf;AACAvH,IAAI,CAAGzH,MAAM,CACb,SACF,CACF,CAEA;AACA,KAAM,CAAAqR,UAAU,CAAGP,YAAY,CAAG,CAAC,CAAGA,YAAY,CAAG,CAAC,CACtD,KAAM,CAAAQ,cAAc,CAAG,CAACrC,WAAW,CAAE;AACrC,GAAIqC,cAAc,CAAE,CAClBjC,aAAa,CAACtL,IAAI,CAAE0D,IAAI,CAAE,CAAC8G,iBAAiB,CAAC,CAAC,CAAC,CAAE,GAAGA,iBAAiB,CAACnD,KAAK,CAAC4D,QAAQ,CAAG,CAAC,CAAEA,QAAQ,CAAG,CAAC,CAAGqC,UAAU,CAAC,CAAC,CAAEA,UAAU,CAAE,IAAI,CAAC,CACxInC,gBAAgB,CAACnL,IAAI,CAAE0D,IAAI,CAAE8G,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAClDU,WAAW,CAAG,IAAI,CAAE;AACtB,CAAC,IAAM,CACLI,aAAa,CAACtL,IAAI,CAAE0D,IAAI,CAAE8G,iBAAiB,CAACnD,KAAK,CAAC4D,QAAQ,CAAG,CAAC,CAAEA,QAAQ,CAAG,CAAC,CAAGqC,UAAU,CAAC,CAAEA,UAAU,CAAE,KAAK,CAAC,CAChH,CAEA;AACA,GAAI,CAAAE,KAAK,CAAG9J,IAAI,EAAI6J,cAAc,CAAG/C,iBAAiB,CAAC,CAAC,CAAC,CAAG,CAAC,CAAC,CAE9DlM,OAAO,CAACqB,GAAG,4BAAAnB,MAAA,CAAkB8O,UAAU,+BAAA9O,MAAA,CAA6ByM,QAAQ,CAAE,CAAC,CAE/E,IAAK,GAAI,CAAAjK,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGsM,UAAU,CAAEtM,CAAC,EAAE,CAAE,CACnC,GAAI,CAAAoB,IAAI,CAAGpG,MAAM,CACjB,KAAM,CAAAmF,GAAG,CAAG8J,QAAQ,CAAGjK,CAAC,CAExB;AACA,GAAI,CAACd,QAAQ,CAACiB,GAAG,CAAC,EAAI,CAAChB,KAAK,CAACC,OAAO,CAACF,QAAQ,CAACiB,GAAG,CAAC,CAAC,CAAE,CACnD7C,OAAO,CAACC,IAAI,UAAAC,MAAA,CAAU2C,GAAG,6CAAmCjB,QAAQ,CAACiB,GAAG,CAAC,CAAC,CAC1E,SACF,CAEA,GAAI,CAAC+I,WAAW,CAAC/I,GAAG,CAAC,EAAI,CAAChB,KAAK,CAACC,OAAO,CAAC8J,WAAW,CAAC/I,GAAG,CAAC,CAAC,CAAE,CACzD7C,OAAO,CAACC,IAAI,sBAAAC,MAAA,CAAsB2C,GAAG,6CAAmC+I,WAAW,CAAC/I,GAAG,CAAC,CAAC,CACzF,SACF,CAEA,IAAK,GAAI,CAAAsB,GAAG,CAAG,CAAC,CAAEA,GAAG,CAAGvC,QAAQ,CAACiB,GAAG,CAAC,CAACvD,MAAM,CAAE6E,GAAG,EAAE,CAAE,CACnD,KAAM,CAAArB,KAAK,CAAG8I,WAAW,CAAC/I,GAAG,CAAC,CAACsB,GAAG,CAAC,CACnC,GAAI,CAACtC,KAAK,CAACC,OAAO,CAACgB,KAAK,CAAC,CAAE,CACzB9C,OAAO,CAACC,IAAI,qCAAAC,MAAA,CAA+B2C,GAAG,WAAA3C,MAAA,CAASiE,GAAG,MAAKrB,KAAK,CAAC,CACrE,SACF,CAEA;AACA,KAAM,CAAAqM,gBAAgB,CAAGvN,QAAQ,CAACiB,GAAG,CAAC,CAACsB,GAAG,CAAC,EAAI,EAAE,CACjD,KAAM,CAAAiL,WAAW,CAAGD,gBAAgB,CAACpD,UAAU,CAAC,SAAS,CAAC,EAAIoD,gBAAgB,CAACjG,QAAQ,CAAC,IAAI,CAAC,CAE7F,GAAI,CAAAjE,KAAK,CAAGiK,KAAK,CAAG,CAAC,CAErB;AACA,GAAI/K,GAAG,GAAK,CAAC,EAAIgL,gBAAgB,CAAC/H,IAAI,CAAC,CAAC,CAAE,CACxCpH,OAAO,CAACqB,GAAG,oDAAAnB,MAAA,CAAoC2C,GAAG,MAAKsM,gBAAgB,CAAC,CAC1E,CAEA,GAAIC,WAAW,CAAE,CACf;AACA,KAAM,CAAAtE,KAAK,CAAGqE,gBAAgB,CAAC1K,KAAK,CAAC,IAAI,CAAC,CAC1C,KAAM,CAAAxD,KAAK,CAAG6J,KAAK,CAAC,CAAC,CAAC,CAACnB,OAAO,CAAC,UAAU,CAAE,EAAE,CAAC,CAACvC,IAAI,CAAC,CAAC,CACrD,KAAM,CAAA4E,GAAG,CAAGlB,KAAK,CAAC,CAAC,CAAC,EAAI,EAAE,CAAE;AAE5B9K,OAAO,CAACqB,GAAG,uCAAAnB,MAAA,CAA0Be,KAAK,CAAE,CAAC,CAE7C;AACA,KAAM,CAAA6D,SAAS,CAAG3F,IAAI,CAAC4F,iBAAiB,CAAC9D,KAAK,CAAE7B,QAAQ,CAAC,CAEzD;AACAsC,IAAI,CAACwD,QAAQ,CAACjE,KAAK,CAAE,CACnBiC,CAAC,CAAEY,IAAI,CAAG,CAAC,CACXX,CAAC,CAAE8B,KAAK,CACRE,IAAI,CAAE/F,QAAQ,CACdD,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE;AACrB0D,QAAQ,CAAEoJ,SAAS,CAACtH,GAAG,CAAC,EAAI,GAC9B,CAAC,CAAC,CAEF;AACA,KAAM,CAAAkL,UAAU,CAAGpK,KAAK,CAAG,CAAC,CAC5BvD,IAAI,CAAC2H,QAAQ,CAAC,CACZC,KAAK,CAAE,CAAEpG,CAAC,CAAEY,IAAI,CAAG,CAAC,CAAEX,CAAC,CAAEkM,UAAW,CAAC,CACrC9F,GAAG,CAAE,CAAErG,CAAC,CAAEY,IAAI,CAAG,CAAC,CAAGf,IAAI,CAACgL,GAAG,CAACjJ,SAAS,CAAE2G,SAAS,CAACtH,GAAG,CAAC,EAAI,GAAG,CAAC,CAAEhB,CAAC,CAAEkM,UAAW,CAAC,CAChF7F,SAAS,CAAE,GAAG,CACdlF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CAEF;AACA,GAAI,CACF;AACA,KAAM,CAAA2Q,QAAQ,CAAG,CACfxL,IAAI,CAAG,CAAC,CACRmB,KAAK,CAAG,CAAC,CACTnB,IAAI,CAAG,CAAC,CAAGf,IAAI,CAACgL,GAAG,CAACjJ,SAAS,CAAE2G,SAAS,CAACtH,GAAG,CAAC,EAAI,GAAG,CAAC,CACrDc,KAAK,CAAG7F,QAAQ,CAAG,CAAC,CACrB,CAED;AACA,KAAM,CAAAmQ,SAAS,CAAG9N,MAAM,CAAC+N,OAAO,CAACC,GAAG,CAAC,CACnCC,IAAI,CAAE,OAAO,CACbC,OAAO,CAAE,MAAM,CACfC,IAAI,CAAEN,QAAQ,CACdO,CAAC,CAAE,CACDH,IAAI,CAAE,QAAQ,CACdI,CAAC,CAAE,KAAK,CACRC,GAAG,CAAE/D,GACP,CAAC,CACDgE,MAAM,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACjBC,CAAC,CAAE,CACL,CAAC,CAAC,CAEF;AACA,KAAM,CAAAC,OAAO,CAAGxO,IAAI,CAACyO,GAAG,CACxB,KAAM,CAAAC,QAAQ,CAAG3O,MAAM,CAAC+N,OAAO,CAACa,MAAM,CAACH,OAAO,CAAC,CAE/C;AACA,GAAI,CAAAI,SAAS,CAAGF,QAAQ,CAACG,GAAG,CAAC3R,OAAO,CAAC4R,EAAE,CAAC,QAAQ,CAAC,CAAC,CAClD,GAAI,CAACF,SAAS,CAAE,CACd,KAAM,CAAAG,WAAW,CAAGhP,MAAM,CAAC+N,OAAO,CAACC,GAAG,CAAC,CAACF,SAAS,CAAC,CAAC,CACnDa,QAAQ,CAACM,GAAG,CAAC9R,OAAO,CAAC4R,EAAE,CAAC,QAAQ,CAAC,CAAEC,WAAW,CAAC,CACjD,CAAC,IAAM,CACL,KAAM,CAAAA,WAAW,CAAGhP,MAAM,CAAC+N,OAAO,CAACa,MAAM,CAACC,SAAS,CAAC,CACpD,GAAIG,WAAW,WAAY,CAAA5R,QAAQ,CAAE,CACnC4R,WAAW,CAACxG,IAAI,CAACsF,SAAS,CAAC,CAC7B,CACF,CAEAvP,OAAO,CAACqB,GAAG,sCAAAnB,MAAA,CAA6Be,KAAK,WAAAf,MAAA,CAAQ8L,GAAG,CAAE,CAAC,CAC7D,CAAE,MAAOjM,KAAK,CAAE,CACdC,OAAO,CAACC,IAAI,CAAC,0DAA0D,CAAEF,KAAK,CAAC,CAC/EC,OAAO,CAACqB,GAAG,kCAAAnB,MAAA,CAAqB8L,GAAG,CAAE,CAAC,CACxC,CACF,CAAC,IAAM,CACL;AACA,GAAImD,gBAAgB,CAAC/H,IAAI,CAAC,CAAC,CAAE,CAC3B;AACA,KAAM,CAAAuJ,UAAU,CAAG7N,KAAK,CAACiE,MAAM,CAACnC,IAAI,EAAIA,IAAI,EAAIA,IAAI,CAACwC,IAAI,CAAC,CAAC,CAAC,CAE5D,GAAIuJ,UAAU,CAACrR,MAAM,GAAK,CAAC,CAAE,CAC3BU,OAAO,CAACqB,GAAG,iEAAAnB,MAAA,CAAoDiE,GAAG,aAAAjE,MAAA,CAAW2C,GAAG,CAAE,CAAC,CACnF,OACF,CAEA8N,UAAU,CAAC1M,OAAO,CAAC,CAACW,IAAI,CAAE6D,OAAO,GAAK,CAClC,GAAI,CACF;AACA,KAAM,CAAA3D,SAAS,CAAG3F,IAAI,CAAC4F,iBAAiB,CAACH,IAAI,CAAExF,QAAQ,CAAC,CACxD,KAAM,CAAAyJ,cAAc,CAAG4C,SAAS,CAACtH,GAAG,CAAC,EAAI,GAAG,CAE5C,GAAIW,SAAS,CAAG+D,cAAc,CAAE,CAC9B7I,OAAO,CAACqB,GAAG,6CAAAnB,MAAA,CAAmCiE,GAAG,SAAAjE,MAAA,CAAM0E,IAAI,CAACuF,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,SAAM,CAAC,CACnFnK,OAAO,CAACqB,GAAG,yBAAAnB,MAAA,CAAyB4E,SAAS,wBAAA5E,MAAA,CAAmB2I,cAAc,MAAI,CAAC,CACrF,CAEA;AACA,KAAM,CAAAH,QAAQ,CAAGzD,KAAK,CAAGwD,OAAO,CAAGnG,UAAU,CAC7C,KAAM,CAAAgM,UAAU,CAAGY,KAAK,CAAGhD,iBAAiB,CAACrJ,GAAG,CAAG,CAAC,CAAC,CAAG,CAAC,CAEzD,GAAI6F,QAAQ,CAAG4F,UAAU,CAAE,CACzBtO,OAAO,CAACqB,GAAG,0DAAAnB,MAAA,CAA6CuI,OAAO,wBAAsB,CAAC,CACtF,OACF,CAEA/G,IAAI,CAACwD,QAAQ,CAACN,IAAI,CAAE,CAClB1B,CAAC,CAAEY,IAAI,CAAG,CAAC,CACXX,CAAC,CAAEuF,QAAQ,CACXvD,IAAI,CAAE/F,QAAQ,CACdD,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACnB0D,QAAQ,CAAEwG,cACZ,CAAC,CAAC,CAEF;AACA,GAAI,CAAC1E,GAAG,GAAK,CAAC,EAAIA,GAAG,GAAK,CAAC,GAAKsE,OAAO,GAAK,CAAC,CAAE,CAC7CzI,OAAO,CAACqB,GAAG,+BAAAnB,MAAA,CAA0BiE,GAAG,GAAK,CAAC,CAAG,MAAM,CAAG,OAAO,aAAAjE,MAAA,CAAW2C,GAAG,SAAA3C,MAAA,CAAM0E,IAAI,MAAG,CAAC,CAC/F,CAEF,CAAE,MAAOgM,SAAS,CAAE,CAClB5Q,OAAO,CAACD,KAAK,4CAAAG,MAAA,CAAuCiE,GAAG,aAAAjE,MAAA,CAAW2C,GAAG,MAAK+N,SAAS,CAAC,CACpF5Q,OAAO,CAACqB,GAAG,0CAAAnB,MAAA,CAA4B0E,IAAI,MAAG,CAAC,CAC/C5E,OAAO,CAACqB,GAAG,4BAAAnB,MAAA,CAAiB4D,IAAI,CAAG,CAAC,SAAA5D,MAAA,CAAO+E,KAAK,CAAGwD,OAAO,CAAGnG,UAAU,CAAE,CAAC,CAC5E,CACJ,CAAC,CAAC,CACJ,CAAC,IAAM,IAAI6B,GAAG,GAAK,CAAC,EAAIA,GAAG,GAAK,CAAC,CAAE,CACjC;AACAnE,OAAO,CAACqB,GAAG,2CAAAnB,MAAA,CAA8BiE,GAAG,GAAK,CAAC,CAAG,uBAAuB,CAAG,wBAAwB,aAAAjE,MAAA,CAAW2C,GAAG,CAAE,CAAC,CACxH7C,OAAO,CAACqB,GAAG,0BAAAnB,MAAA,CAAyBiP,gBAAgB,MAAG,CAAC,CACxDnP,OAAO,CAACqB,GAAG,0BAA2ByB,KAAK,CAAC,CAC9C,CACF,CACAgB,IAAI,EAAI7F,SAAS,CAACkG,GAAG,CAAC,CACxB,CACA+K,KAAK,EAAIhD,iBAAiB,CAACrJ,GAAG,CAAG,CAAC,CAAC,CACrC,CAEA;AACA8J,QAAQ,EAAIqC,UAAU,CACtB;AACA5J,IAAI,CAAG8J,KAAK,CAEZlP,OAAO,CAACqB,GAAG,sBAAAnB,MAAA,CAAiB8O,UAAU,oCAAA9O,MAAA,CAA4ByM,QAAQ,MAAAzM,MAAA,CAAI0B,QAAQ,CAACtC,MAAM,CAAE,CAAC,CAEhG;AACA,GAAIqN,QAAQ,CAAG/K,QAAQ,CAACtC,MAAM,CAAE,CAC9B,KAAM,CAAAuR,cAAc,CAAGzL,IAAI,CAAG6C,YAAY,CAC1C,GAAI4I,cAAc,CAAG,EAAE,CAAE,CACvB7Q,OAAO,CAACqB,GAAG,2CAAAnB,MAAA,CAA8B2Q,cAAc,8BAAyB,CAAC,CACjF,KAAM,CAAA1I,OAAO,CAAG1G,MAAM,CAACkC,OAAO,CAAC,CAAClG,QAAQ,CAAC,CAAC,CAAC,CAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAC1D,KAAM,CAAAG,SAAS,CAACuK,OAAO,CAAEhJ,IAAI,CAAE,EAAE,CAAE+B,UAAU,CAAEC,YAAY,CAAC,CAC5DO,IAAI,CAAGyG,OAAO,CACd;AACA/C,IAAI,CAAGzH,MAAM,CACf,CAAC,IAAM,CACL;AACA;AAAA,CAEJ,CACF,CAEA;AACA;AACAqC,OAAO,CAACqB,GAAG,CAAC,sCAAsC,CAAED,OAAO,CAAC,CAC5DpB,OAAO,CAACqB,GAAG,CAAC,6CAA6C,CAAED,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAE9B,MAAM,CAAC,CAE3E,GAAI8B,OAAO,EAAIA,OAAO,CAAC9B,MAAM,CAAG,CAAC,CAAE,CACjCU,OAAO,CAACqB,GAAG,CAAC,0DAA0D,CAAED,OAAO,CAAC9B,MAAM,CAAE,UAAU,CAAC,CAEnG;AACA8F,IAAI,EAAI,EAAE,CAAE;AAEZ;AACA,KAAM,CAAA6C,YAAY,CAAG,EAAE,CACvB,KAAM,CAAAmB,gBAAgB,CAAG,GAAG,CAAE;AAE9B;AACA,GAAIhE,IAAI,CAAGgE,gBAAgB,CAAGnB,YAAY,CAAE,CAC1CjI,OAAO,CAACqB,GAAG,CAAC,mDAAmD,CAAC,CAChEK,IAAI,CAAGD,MAAM,CAACkC,OAAO,CAAC,CAAClG,QAAQ,CAAC,CAAC,CAAC,CAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CACjD2H,IAAI,CAAGzH,MAAM,CAAG,EAAE,CAAE;AACtB,CAEA;AACA+D,IAAI,CAAC2H,QAAQ,CAAC,CACZC,KAAK,CAAE,CAAEpG,CAAC,CAAExF,MAAM,CAAEyF,CAAC,CAAEiC,IAAI,CAAG,EAAG,CAAC,CAClCmE,GAAG,CAAE,CAAErG,CAAC,CAAExF,MAAM,CAAG,GAAG,CAAEyF,CAAC,CAAEiC,IAAI,CAAG,EAAG,CAAC,CACtCoE,SAAS,CAAE,CAAC,CACZlF,KAAK,CAAE3F,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAC1B,CAAC,CAAC,CAEF;AACA+C,IAAI,CAACwD,QAAQ,CAAC,yBAAyB,CAAE,CACvChC,CAAC,CAAExF,MAAM,CACTyF,CAAC,CAAEiC,IAAI,CACPD,IAAI,CAAE,EAAE,CACRhG,IAAI,CAAEA,IAAI,CACVmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACFyG,IAAI,EAAI,EAAE,CAEV;AACA,KAAM,CAAAiF,cAAc,CAAG,CAAC,MAAM,CAAE,YAAY,CAAE,MAAM,CAAE,UAAU,CAAE,MAAM,CAAC,CACzE;AACA,KAAM,CAAAC,gBAAgB,CAAG,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE,GAAG,CAAC,CAAE;AACjD,GAAI,CAAAxG,IAAI,CAAGpG,MAAM,CAEjB;AACA2M,cAAc,CAACpG,OAAO,CAAC,CAACC,MAAM,CAAEC,GAAG,GAAK,CACtC;AACAzC,IAAI,CAAC2C,aAAa,CAAC,CACjBnB,CAAC,CAAEY,IAAI,CACPX,CAAC,CAAEiC,IAAI,CAAG,EAAE,CACZhC,KAAK,CAAEkH,gBAAgB,CAACnG,GAAG,CAAC,CAC5Bd,MAAM,CAAE,EAAE,CACViB,KAAK,CAAE3F,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAC1B,CAAC,CAAC,CAEF;AACA+C,IAAI,CAAC2C,aAAa,CAAC,CACjBnB,CAAC,CAAEY,IAAI,CACPX,CAAC,CAAEiC,IAAI,CAAG,EAAE,CACZhC,KAAK,CAAEkH,gBAAgB,CAACnG,GAAG,CAAC,CAC5Bd,MAAM,CAAE,EAAE,CACVkB,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,GACf,CAAC,CAAC,CAEF;AACA9C,IAAI,CAACwD,QAAQ,CAAChB,MAAM,CAAE,CACpBhB,CAAC,CAAEY,IAAI,CAAG,CAAC,CACXX,CAAC,CAAEiC,IAAI,CAAG,EAAE,CACZD,IAAI,CAAE,CAAC,CACPhG,IAAI,CAAEA,IAAI,CACVmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CAEFmF,IAAI,EAAIwG,gBAAgB,CAACnG,GAAG,CAAC,CAC/B,CAAC,CAAC,CAEFiB,IAAI,EAAI,EAAE,CAEV;AACAhE,OAAO,CAAC6C,OAAO,CAAC,CAACsG,KAAK,CAAEC,MAAM,GAAK,CACjC;AACA,KAAM,CAAAC,SAAS,CAAGF,KAAK,CAACE,SAAS,EAAI,EAAE,CACvC,GAAI,CAAAC,OAAO,CAAG,EAAE,CAChB,GAAI,CAAAC,IAAI,CAAG,EAAE,CAEb;AACA,KAAM,CAAAC,cAAc,CAAGH,SAAS,CAACI,KAAK,CAAC,sDAAsD,CAAC,CAC9F,GAAID,cAAc,CAAE,CAClBF,OAAO,CAAGE,cAAc,CAAC,CAAC,CAAC,CAC3BD,IAAI,CAAGC,cAAc,CAAC,CAAC,CAAC,CAC1B,CAAC,IAAM,IAAIH,SAAS,CAACvB,QAAQ,CAAC,QAAQ,CAAC,CAAE,CACvC;AACA,KAAM,CAAA4B,KAAK,CAAGL,SAAS,CAAChG,KAAK,CAAC,QAAQ,CAAC,CACvC,GAAIqG,KAAK,CAACxL,MAAM,GAAK,CAAC,CAAE,CACtBoL,OAAO,CAAGI,KAAK,CAAC,CAAC,CAAC,CAACnB,OAAO,CAAC,gBAAgB,CAAE,EAAE,CAAC,CAACA,OAAO,CAAC,OAAO,CAAE,EAAE,CAAC,CACrEgB,IAAI,CAAGG,KAAK,CAAC,CAAC,CAAC,CAACnB,OAAO,CAAC,OAAO,CAAE,EAAE,CAAC,CACtC,CACF,CAAC,IAAM,CACL;AACAgB,IAAI,CAAGF,SAAS,CAClB,CAEA,KAAM,CAAAM,WAAW,CAAG,CAACR,KAAK,CAAChK,IAAI,EAAI,EAAE,CAAEgK,KAAK,CAACS,UAAU,EAAI,EAAE,CAAET,KAAK,CAACU,IAAI,EAAI,EAAE,CAAEP,OAAO,CAAEC,IAAI,CAAC,CAE/F;AACA,GAAI,CAAAQ,aAAa,CAAG,CAAC,CACrB,KAAM,CAAAD,SAAS,CAAG,EAAE,CAAE;AAEtBH,WAAW,CAAC9G,OAAO,CAAC,CAACmH,QAAQ,CAAEjH,GAAG,GAAK,CACrC;AACA,KAAM,CAAA2M,SAAS,CAAGxG,gBAAgB,CAACnG,GAAG,CAAC,CAAG,CAAC,CAAE;AAC7C,KAAM,CAAA/E,QAAQ,CAAG,CAAC,CAClB,KAAM,CAAA2R,YAAY,CAAG3R,QAAQ,CAAG,GAAG,CAAE;AACrC,KAAM,CAAA4R,eAAe,CAAGjO,IAAI,CAAC6K,KAAK,CAACkD,SAAS,CAAGC,YAAY,CAAC,CAE5D,KAAM,CAAAnH,KAAK,CAAGwB,QAAQ,CAAC3G,KAAK,CAAC,GAAG,CAAC,CACjC,KAAM,CAAA3B,KAAK,CAAG,EAAE,CAChB,GAAI,CAAA+G,WAAW,CAAG,EAAE,CAEpBD,KAAK,CAAC3F,OAAO,CAAC6F,IAAI,EAAI,CACpB,KAAM,CAAAC,QAAQ,CAAGF,WAAW,CAAGA,WAAW,CAAG,GAAG,CAAGC,IAAI,CAAGA,IAAI,CAC9D,GAAIC,QAAQ,CAACzK,MAAM,EAAI0R,eAAe,CAAE,CACtCnH,WAAW,CAAGE,QAAQ,CACxB,CAAC,IAAM,CACL,GAAIF,WAAW,CAAE,CACf/G,KAAK,CAACmH,IAAI,CAACJ,WAAW,CAAC,CACvBA,WAAW,CAAGC,IAAI,CACpB,CAAC,IAAM,CACL;AACAhH,KAAK,CAACmH,IAAI,CAACH,IAAI,CAACK,SAAS,CAAC,CAAC,CAAE6G,eAAe,CAAC,CAAC,CAC9CnH,WAAW,CAAGC,IAAI,CAACK,SAAS,CAAC6G,eAAe,CAAC,CAC/C,CACF,CACF,CAAC,CAAC,CACF,GAAInH,WAAW,CAAE/G,KAAK,CAACmH,IAAI,CAACJ,WAAW,CAAC,CAExCqB,SAAS,CAAC/G,GAAG,CAAC,CAAGrB,KAAK,CACtBqI,aAAa,CAAGpI,IAAI,CAACC,GAAG,CAACmI,aAAa,CAAErI,KAAK,CAACxD,MAAM,CAAC,CACvD,CAAC,CAAC,CAEF;AACA,KAAM,CAAAqJ,SAAS,CAAG5F,IAAI,CAACC,GAAG,CAAC,EAAE,CAAEmI,aAAa,CAAG,EAAE,CAAG,EAAE,CAAC,CAAE;AAEzD;AACA,GAAI/F,IAAI,CAAGuD,SAAS,CAAGV,YAAY,CAAE,CACnCvG,IAAI,CAAGD,MAAM,CAACkC,OAAO,CAAC,CAAClG,QAAQ,CAAC,CAAC,CAAC,CAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CACjD2H,IAAI,CAAGzH,MAAM,CAAG,EAAE,CACpB,CAEAmG,IAAI,CAAGpG,MAAM,CAEbqN,WAAW,CAAC9G,OAAO,CAAC,CAACmH,QAAQ,CAAEjH,GAAG,GAAK,CACrC;AACAzC,IAAI,CAAC2C,aAAa,CAAC,CACjBnB,CAAC,CAAEY,IAAI,CACPX,CAAC,CAAEiC,IAAI,CAAGuD,SAAS,CACnBvF,KAAK,CAAEkH,gBAAgB,CAACnG,GAAG,CAAC,CAC5Bd,MAAM,CAAEsF,SAAS,CACjBpE,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,GACf,CAAC,CAAC,CAEF;AACA,KAAM,CAAA1B,KAAK,CAAGoI,SAAS,CAAC/G,GAAG,CAAC,CAE5B;AACArB,KAAK,CAACmB,OAAO,CAAC,CAACW,IAAI,CAAE6D,OAAO,GAAK,CAC/B/G,IAAI,CAACwD,QAAQ,CAACN,IAAI,CAAE,CAClB1B,CAAC,CAAEY,IAAI,CAAG,CAAC,CACXX,CAAC,CAAEiC,IAAI,CAAG,EAAE,CAAIqD,OAAO,CAAG,EAAG,CAAE;AAC/BtD,IAAI,CAAE,CAAC,CACPhG,IAAI,CAAEA,IAAI,CACVmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFmF,IAAI,EAAIwG,gBAAgB,CAACnG,GAAG,CAAC,CAC/B,CAAC,CAAC,CAEFiB,IAAI,EAAIuD,SAAS,CACnB,CAAC,CAAC,CAEF3I,OAAO,CAACqB,GAAG,CAAC,2BAA2B,CAAED,OAAO,CAAC9B,MAAM,CAAE,UAAU,CAAC,CACtE,CAAC,IAAM,CACLU,OAAO,CAACqB,GAAG,CAAC,mCAAmC,CAAC,CAClD,CAEA,MAAO,MAAM,CAAAI,MAAM,CAAC4D,IAAI,CAAC,CAAC,CAC5B,CAEA;AACA;AACA;AACA;AACA,GACA,MAAO,eAAe,CAAA4L,8BAA8BA,CAACC,aAAa,CAAEC,YAAY,CAA8E,IAA5E,CAAAlQ,KAAK,CAAA5B,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,cAAc,IAAE,CAAA6B,UAAU,CAAA7B,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,IAAE,CAAA8B,YAAY,CAAA9B,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,IAAE,CAAA+B,OAAO,CAAA/B,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CAC1J,KAAM,CAAA+R,MAAM,CAAG,GAAI,CAAAC,SAAS,CAAC,CAAC,CAC9B;AACA,QAAS,CAAAC,qBAAqBA,CAACzF,IAAI,CAAE,CACnC,GAAI,CAAA3M,IAAI,CAAG,EAAE,CAEb;AACA,KAAM,CAAAqS,mBAAmB,CAAG1F,IAAI,CAAC2F,aAAa,CAAC,kCAAkC,CAAC,EACvD3F,IAAI,CAAC2F,aAAa,CAAC,gCAAgC,CAAC,CAE/E,GAAID,mBAAmB,CAAE,CACvB;AACA,KAAM,CAAAE,WAAW,CAAG5F,IAAI,CAAC2F,aAAa,CAAC,sBAAsB,CAAC,EAC3C3F,IAAI,CAAC2F,aAAa,CAAC,cAAc,CAAC,EAClC3F,IAAI,CAAC2F,aAAa,CAAC,UAAU,CAAC,CAEjD,GAAIC,WAAW,EAAIA,WAAW,CAACC,KAAK,GAAKnS,SAAS,CAAE,CAClDL,IAAI,CAAGuS,WAAW,CAACC,KAAK,EAAI,EAAE,CAC9B1R,OAAO,CAACqB,GAAG,CAAC,mDAAmD,CAAEnC,IAAI,CAAC,CACxE,CAAC,IAAM,CACL;AACA,KAAM,CAAAyS,WAAW,CAAG9F,IAAI,CAAC2F,aAAa,CAAC,cAAc,CAAC,EACnC3F,IAAI,CAAC2F,aAAa,CAAC,sBAAsB,CAAC,CAC7D,GAAIG,WAAW,CAAE,CACfzS,IAAI,CAAGyS,WAAW,CAACC,YAAY,CAAC,YAAY,CAAC,EACtCD,WAAW,CAACC,YAAY,CAAC,oBAAoB,CAAC,EAAI,EAAE,CAC3D5R,OAAO,CAACqB,GAAG,CAAC,8CAA8C,CAAEnC,IAAI,CAAC,CACnE,CAAC,IAAM,CACL;AACAA,IAAI,CAAG2M,IAAI,CAACgG,WAAW,EAAIhG,IAAI,CAACiG,SAAS,EAAI,EAAE,CAC/C9R,OAAO,CAACqB,GAAG,CAAC,0CAA0C,CAAEnC,IAAI,CAAC,CAC/D,CACF,CACF,CAAC,IAAM,CACL;AACA2M,IAAI,CAACkG,UAAU,CAAC9N,OAAO,CAAC+N,IAAI,EAAI,CAC9B,GAAIA,IAAI,CAACC,QAAQ,GAAK,CAAC,CAAE,CACvB/S,IAAI,EAAI8S,IAAI,CAACE,SAAS,CAACvI,OAAO,CAAC,cAAc,CAAE,IAAI,CAAC,CACtD,CAAC,IAAM,IAAIqI,IAAI,CAACG,QAAQ,GAAK,IAAI,CAAE,CACjCjT,IAAI,EAAI,IAAI,CACd,CAAC,IAAM,IAAI8S,IAAI,CAACC,QAAQ,GAAK,CAAC,CAAE,CAC9B/S,IAAI,EAAIoS,qBAAqB,CAACU,IAAI,CAAC,CACrC,CACF,CAAC,CAAC,CACJ,CAEAhS,OAAO,CAACqB,GAAG,CAAC,6CAA6C,CAAEnC,IAAI,CAAC,CAChE,MAAO,CAAAA,IAAI,CACb,CAEA,KAAM,CAAAkT,gBAAgB,CAAIC,IAAI,EAAK,CACjCrS,OAAO,CAACqB,GAAG,CAAC,0CAA0C,CAAEgR,IAAI,CAAClI,SAAS,CAAC,CAAC,CAAE,GAAG,CAAC,CAAC,CAC/E,KAAM,CAAAmI,GAAG,CAAGlB,MAAM,CAACmB,eAAe,CAACF,IAAI,CAAE,WAAW,CAAC,CACrD,KAAM,CAAAG,IAAI,CAAG,EAAE,CAEf;AACA,GAAIH,IAAI,CAACnJ,QAAQ,CAAC,oBAAoB,CAAC,CAAE,CACvClJ,OAAO,CAACqB,GAAG,CAAC,4DAA4D,CAAC,CAEzE;AACA,KAAM,CAAAoR,WAAW,CAAGH,GAAG,CAACI,gBAAgB,CAAC,IAAI,CAAC,CAC9C,KAAM,CAAAC,QAAQ,CAAG,EAAE,CAEnBF,WAAW,CAACxO,OAAO,CAAC,CAAC2O,EAAE,CAAEpI,MAAM,GAAK,CAClC,KAAM,CAAAqI,QAAQ,CAAGD,EAAE,CAACpB,aAAa,CAAC,UAAU,CAAC,CAC7C,GAAIqB,QAAQ,EAAIA,QAAQ,CAACnB,KAAK,GAAKnS,SAAS,CAAE,CAC5C,KAAM,CAAAuT,cAAc,CAAGD,QAAQ,CAACnB,KAAK,EAAI,EAAE,CAC3C1R,OAAO,CAACqB,GAAG,6BAAAnB,MAAA,CAAayS,QAAQ,CAACrT,MAAM,CAAG,CAAC,kBAAcwT,cAAc,CAAC3I,SAAS,CAAC,CAAC,CAAE,GAAG,CAAC,CAAG,KAAK,CAAC,CAClGwI,QAAQ,CAAC1I,IAAI,CAAC,CAAC6I,cAAc,CAAC,CAAC,CACjC,CACF,CAAC,CAAC,CAEF;AACA,MAAOH,QAAQ,CAACrT,MAAM,CAAG,CAAC,CAAE,CAC1BqT,QAAQ,CAAC1I,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CACrB,CAEAjK,OAAO,CAACqB,GAAG,CAAC,2BAA2B,CAAEsR,QAAQ,CAAC/P,GAAG,CAAC,CAAC8D,CAAC,CAAEhE,CAAC,MAAAxC,MAAA,CAAQwC,CAAC,CAAC,CAAC,OAAAxC,MAAA,CAAKwG,CAAC,CAAC,CAAC,CAAC,CAAGA,CAAC,CAAC,CAAC,CAAC,CAACyD,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAAG,OAAO,OAAK,CAAC,CAAC,CACxH,MAAO,CAAAwI,QAAQ,CACjB,CAAC,IAAM,CACL;AACAL,GAAG,CAACI,gBAAgB,CAAC,IAAI,CAAC,CAACzO,OAAO,CAAC,CAAC2O,EAAE,CAAEpI,MAAM,GAAK,CACjD,KAAM,CAAAuI,KAAK,CAAG,EAAE,CAChBH,EAAE,CAACF,gBAAgB,CAAC,OAAO,CAAC,CAACzO,OAAO,CAAC,CAAC4H,IAAI,CAAE9D,MAAM,GAAK,CACrD,KAAM,CAAAD,QAAQ,CAAGwJ,qBAAqB,CAACzF,IAAI,CAAC,CAC5C,GAAI9D,MAAM,GAAK,CAAC,CAAE,CAAE;AAClB/H,OAAO,CAACqB,GAAG,+BAAAnB,MAAA,CAAqBsK,MAAM,cAAAtK,MAAA,CAAY6H,MAAM,yBAAkBD,QAAQ,CAAC,CACrF,CACA,GAAIC,MAAM,GAAK,CAAC,CAAE,CAAE;AAClB/H,OAAO,CAACqB,GAAG,+BAAAnB,MAAA,CAAqBsK,MAAM,cAAAtK,MAAA,CAAY6H,MAAM,mBAAkBD,QAAQ,CAAC,CACrF,CACAiL,KAAK,CAAC9I,IAAI,CAACnC,QAAQ,CAAC,CACtB,CAAC,CAAC,CACF0K,IAAI,CAACvI,IAAI,CAAC8I,KAAK,CAAC,CAClB,CAAC,CAAC,CACF,MAAO,CAAAP,IAAI,CACb,CACF,CAAC,CAED,KAAM,CAAAQ,YAAY,CAAGZ,gBAAgB,CAAClB,aAAa,CAAC,CACpD,KAAM,CAAA+B,WAAW,CAAGb,gBAAgB,CAACjB,YAAY,CAAC,CAElDnR,OAAO,CAACqB,GAAG,CAAC,+DAA+D,CAAED,OAAO,CAAC,CAErF,KAAM,CAAAZ,OAAO,CAAGwS,YAAY,CAAC,CAAC,CAAC,EAAI,EAAE,CACrC,KAAM,CAAAzS,IAAI,CAAGyS,YAAY,CAACjK,KAAK,CAAC,CAAC,CAAC,CAElC;AACA,KAAM,CAAAtI,OAAO,CAAGwS,WAAW,CAE3BjT,OAAO,CAACqB,GAAG,CAAC,mCAAmC,CAAC,CAChDrB,OAAO,CAACqB,GAAG,CAAC,YAAY,CAAEb,OAAO,CAAC,CAClCR,OAAO,CAACqB,GAAG,CAAC,8BAA8B,CAAEd,IAAI,CAACwI,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAC7D/I,OAAO,CAACqB,GAAG,CAAC,YAAY,CAAEZ,OAAO,CAACmC,GAAG,CAAC,CAACsQ,GAAG,CAAExQ,CAAC,MAAAxC,MAAA,CAAQwC,CAAC,CAAC,CAAC,OAAAxC,MAAA,CAAKgT,GAAG,CAAC,CAAC,CAAC,CAAGA,GAAG,CAAC,CAAC,CAAC,CAAC/I,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAAG,OAAO,OAAK,CAAC,CAAC,CAC9GnK,OAAO,CAACqB,GAAG,CAAC,gCAAgC,CAAED,OAAO,CAAC,CAEtD,MAAO,MAAM,CAAAiK,sBAAsB,CAAC9K,IAAI,CAAEC,OAAO,CAAEC,OAAO,CAAEQ,KAAK,CAAEC,UAAU,CAAEC,YAAY,CAAEC,OAAO,CAAC,CACvG,CAEA;AACA,MAAO,SAAS,CAAA+R,sBAAsBA,CAACzR,IAAI,CAAEvC,IAAI,CAAEiG,IAAI,CAAExE,YAAY,CAAEC,gBAAgB,CAAEE,eAAe,CAAEC,YAAY,CAAE,CACtH;AACA,KAAM,CAAAuL,UAAU,CAAG,GAAG,CACtB,KAAM,CAAA6G,YAAY,CAAG,GAAG,CACxB,KAAM,CAAAC,aAAa,CAAG9G,UAAU,CAAG6G,YAAY,CAE/C;AACA,KAAM,CAAAE,eAAe,CAAG9V,QAAQ,CAACqD,gBAAgB,EAAI,EAAE,CAAE1B,IAAI,CAAE,EAAE,CAAEkU,aAAa,CAAG,EAAE,CAAC,CACtF,KAAM,CAAAE,YAAY,CAAG,EAAE,CACvB,KAAM,CAAAjR,UAAU,CAAG,EAAE,CACrB,KAAM,CAAAkR,OAAO,CAAG,EAAE,CAClB,KAAM,CAAAC,iBAAiB,CAAG1Q,IAAI,CAACC,GAAG,CAACuQ,YAAY,CAAGD,eAAe,CAAChU,MAAM,CAAGgD,UAAU,CAAIkR,OAAO,CAAC,CAEjG,KAAM,CAAAxP,YAAY,CAAG,EAAE,CACvB,KAAM,CAAA0P,kBAAkB,CAAG,EAAE,CAC7B,KAAM,CAAAC,aAAa,CAAG,GAAG,CAEzB;AACAjS,IAAI,CAAC2C,aAAa,CAAC,CACjBnB,CAAC,CAAExF,MAAM,CACTyF,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CACtBZ,KAAK,CAAEgQ,YAAY,CACnB/P,MAAM,CAAEW,YAAY,CACpBM,KAAK,CAAE3F,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,CACzB4F,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CACF9C,IAAI,CAAC2C,aAAa,CAAC,CACjBnB,CAAC,CAAExF,MAAM,CAAG0V,YAAY,CACxBjQ,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CACtBZ,KAAK,CAAEiQ,aAAa,CACpBhQ,MAAM,CAAEW,YAAY,CACpBO,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CACF9C,IAAI,CAACwD,QAAQ,CAAC,kBAAkB,CAAE,CAChChC,CAAC,CAAExF,MAAM,CAAG,CAAC,CACbyF,CAAC,CAAEiC,IAAI,CAAG,EAAE,CACZD,IAAI,CAAE,EAAE,CACRhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACF+C,IAAI,CAACwD,QAAQ,CAAC,YAAY,CAAE,CAC1BhC,CAAC,CAAExF,MAAM,CAAG,CAAC,CACbyF,CAAC,CAAEiC,IAAI,CAAG,EAAE,CACZD,IAAI,CAAE,EAAE,CACRhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CAEF,KAAM,CAAAiV,WAAW,CAAGpW,QAAQ,CAACoD,YAAY,EAAI,EAAE,CAAEzB,IAAI,CAAE,EAAE,CAAEkU,aAAa,CAAG,EAAE,CAAC,CAC9EO,WAAW,CAAC3P,OAAO,CAAC,CAACW,IAAI,CAAEC,GAAG,GAAK,CACjCnD,IAAI,CAACwD,QAAQ,CAACN,IAAI,CAAE,CAClB1B,CAAC,CAAExF,MAAM,CAAG0V,YAAY,CAAG,CAAC,CAC5BjQ,CAAC,CAAEiC,IAAI,CAAG,EAAE,CAAIP,GAAG,CAAG,EAAG,CACzBM,IAAI,CAAE,EAAE,CACRhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF;AACA+C,IAAI,CAAC2C,aAAa,CAAC,CACjBnB,CAAC,CAAExF,MAAM,CACTyF,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAC1CrQ,KAAK,CAAEgQ,YAAY,CACnB/P,MAAM,CAAEoQ,iBAAiB,CACzBnP,KAAK,CAAE3F,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,CACzB4F,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CACF9C,IAAI,CAAC2C,aAAa,CAAC,CACjBnB,CAAC,CAAExF,MAAM,CAAG0V,YAAY,CACxBjQ,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAC1CrQ,KAAK,CAAEiQ,aAAa,CACpBhQ,MAAM,CAAEoQ,iBAAiB,CACzBlP,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CACF9C,IAAI,CAACwD,QAAQ,CAAC,uBAAuB,CAAE,CACrChC,CAAC,CAAExF,MAAM,CAAG,CAAC,CACbyF,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CAAG,EAAE,CAC3BmB,IAAI,CAAE,EAAE,CACRhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CAEF2U,eAAe,CAACrP,OAAO,CAAC,CAACW,IAAI,CAAEC,GAAG,GAAK,CACrCnD,IAAI,CAACwD,QAAQ,CAACN,IAAI,CAAE,CAClB1B,CAAC,CAAExF,MAAM,CAAG0V,YAAY,CAAG,CAAC,CAC5BjQ,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CAAG,EAAE,CAAIa,GAAG,CAAG,EAAG,CACxCM,IAAI,CAAE,EAAE,CACRhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF;AACA+C,IAAI,CAAC2C,aAAa,CAAC,CACjBnB,CAAC,CAAExF,MAAM,CACTyF,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAAGC,kBAAkB,CAC/DtQ,KAAK,CAAEgQ,YAAY,CACnB/P,MAAM,CAAEqQ,kBAAkB,CAC1BpP,KAAK,CAAE3F,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,CACzB4F,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CACF9C,IAAI,CAAC2C,aAAa,CAAC,CACjBnB,CAAC,CAAExF,MAAM,CAAG0V,YAAY,CACxBjQ,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAAGC,kBAAkB,CAC/DtQ,KAAK,CAAEiQ,aAAa,CACpBhQ,MAAM,CAAEqQ,kBAAkB,CAC1BpP,KAAK,CAAE3F,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,CACzB4F,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CACF9C,IAAI,CAACwD,QAAQ,CAAC,sBAAsB,CAAE,CACpChC,CAAC,CAAExF,MAAM,CAAG,CAAC,CACbyF,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAAG,EAAE,CAC/CtO,IAAI,CAAE,EAAE,CACRhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACF+C,IAAI,CAACwD,QAAQ,CAAC,kBAAkB,CAAE,CAChChC,CAAC,CAAExF,MAAM,CAAG0V,YAAY,CAAG,CAAC,CAC5BjQ,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAAG,EAAE,CAC/CtO,IAAI,CAAE,EAAE,CACRhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CAEF;AACA+C,IAAI,CAAC2C,aAAa,CAAC,CACjBnB,CAAC,CAAExF,MAAM,CACTyF,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAAGC,kBAAkB,CAAGC,aAAa,CAC/EvQ,KAAK,CAAEgQ,YAAY,CACnB/P,MAAM,CAAEsQ,aAAa,CACrBpP,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CACF9C,IAAI,CAAC2C,aAAa,CAAC,CACjBnB,CAAC,CAAExF,MAAM,CAAG0V,YAAY,CACxBjQ,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAAGC,kBAAkB,CAAGC,aAAa,CAC/EvQ,KAAK,CAAEiQ,aAAa,CACpBhQ,MAAM,CAAEsQ,aAAa,CACrBpP,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CAEF;AACA,GAAI,CAAApF,QAAQ,CAAG,CAAC,CAEhB,KAAM,CAAAyU,cAAc,CAAGrW,QAAQ,CAACuD,eAAe,EAAI,EAAE,CAAE5B,IAAI,CAAEC,QAAQ,CAAEgU,YAAY,CAAG,EAAE,CAAC,CACzF,KAAM,CAAAU,YAAY,CAAGtW,QAAQ,CAACwD,YAAY,EAAI,EAAE,CAAE7B,IAAI,CAAEC,QAAQ,CAAEiU,aAAa,CAAG,EAAE,CAAC,CAErF,GAAI,CAAAU,QAAQ,CAAG3O,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAAGC,kBAAkB,CAAG,EAAE,CAChF,GAAI,CAAAM,MAAM,CAAGD,QAAQ,CAErBF,cAAc,CAAC5P,OAAO,CAAC,CAACW,IAAI,CAAEC,GAAG,GAAK,CACpC,GAAIkP,QAAQ,CAAIlP,GAAG,CAAG,EAAG,CAAGO,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAAGC,kBAAkB,CAAGC,aAAa,CAAG,CAAC,CAAE,CAC5GjS,IAAI,CAACwD,QAAQ,CAACN,IAAI,CAAE,CAClB1B,CAAC,CAAExF,MAAM,CAAG,CAAC,CACbyF,CAAC,CAAE4Q,QAAQ,CAAIlP,GAAG,CAAG,EAAG,CACxBM,IAAI,CAAE/F,QAAQ,CACdD,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEFmV,YAAY,CAAC7P,OAAO,CAAC,CAACW,IAAI,CAAEC,GAAG,GAAK,CAClC,GAAImP,MAAM,CAAInP,GAAG,CAAG,EAAG,CAAGO,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAAGC,kBAAkB,CAAGC,aAAa,CAAG,CAAC,CAAE,CAC1GjS,IAAI,CAACwD,QAAQ,CAACN,IAAI,CAAE,CAClB1B,CAAC,CAAExF,MAAM,CAAG0V,YAAY,CAAG,CAAC,CAC5BjQ,CAAC,CAAE6Q,MAAM,CAAInP,GAAG,CAAG,EAAG,CACtBM,IAAI,CAAE/F,QAAQ,CACdD,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEF;AACA,MAAO,CAAAyG,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAAGC,kBAAkB,CAAGC,aAAa,CAAG,EAAE,CAC1F,CAEA;AACA,MAAO,SAAS,CAAAnM,8BAA8BA,CAAC9F,IAAI,CAAEvC,IAAI,CAAEiG,IAAI,CAAExE,YAAY,CAAEC,gBAAgB,CAAEE,eAAe,CAAEC,YAAY,CAAEuG,cAAc,CAAE,CAC9I;AACA,KAAM,CAAAgF,UAAU,CAAG,GAAG,CACtB,KAAM,CAAA6G,YAAY,CAAG,GAAG,CACxB,KAAM,CAAAC,aAAa,CAAG9G,UAAU,CAAG6G,YAAY,CAE/C;AACA,KAAM,CAAAE,eAAe,CAAG9V,QAAQ,CAACqD,gBAAgB,EAAI,EAAE,CAAE1B,IAAI,CAAE,EAAE,CAAEkU,aAAa,CAAG,EAAE,CAAC,CACtF,KAAM,CAAAE,YAAY,CAAG,EAAE,CACvB,KAAM,CAAAjR,UAAU,CAAG,EAAE,CACrB,KAAM,CAAAkR,OAAO,CAAG,EAAE,CAClB,KAAM,CAAAC,iBAAiB,CAAG1Q,IAAI,CAACC,GAAG,CAACuQ,YAAY,CAAGD,eAAe,CAAChU,MAAM,CAAGgD,UAAU,CAAIkR,OAAO,CAAC,CAEjG,KAAM,CAAAxP,YAAY,CAAG,EAAE,CACvB,KAAM,CAAA0P,kBAAkB,CAAG,EAAE,CAC7B,KAAM,CAAAC,aAAa,CAAG,GAAG,CAEzB;AACAjS,IAAI,CAAC2C,aAAa,CAAC,CACjBnB,CAAC,CAAEqE,cAAc,CACjBpE,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CACtBZ,KAAK,CAAEgQ,YAAY,CACnB/P,MAAM,CAAEW,YAAY,CACpBM,KAAK,CAAE3F,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,CACzB4F,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CACF9C,IAAI,CAAC2C,aAAa,CAAC,CACjBnB,CAAC,CAAEqE,cAAc,CAAG6L,YAAY,CAChCjQ,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CACtBZ,KAAK,CAAEiQ,aAAa,CACpBhQ,MAAM,CAAEW,YAAY,CACpBO,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CACF9C,IAAI,CAACwD,QAAQ,CAAC,kBAAkB,CAAE,CAChChC,CAAC,CAAEqE,cAAc,CAAG,CAAC,CACrBpE,CAAC,CAAEiC,IAAI,CAAG,EAAE,CACZD,IAAI,CAAE,EAAE,CACRhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACF+C,IAAI,CAACwD,QAAQ,CAAC,YAAY,CAAE,CAC1BhC,CAAC,CAAEqE,cAAc,CAAG,CAAC,CACrBpE,CAAC,CAAEiC,IAAI,CAAG,EAAE,CACZD,IAAI,CAAE,EAAE,CACRhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CAEF,KAAM,CAAAiV,WAAW,CAAGpW,QAAQ,CAACoD,YAAY,EAAI,EAAE,CAAEzB,IAAI,CAAE,EAAE,CAAEkU,aAAa,CAAG,EAAE,CAAC,CAC9EO,WAAW,CAAC3P,OAAO,CAAC,CAACW,IAAI,CAAEC,GAAG,GAAK,CACjCnD,IAAI,CAACwD,QAAQ,CAACN,IAAI,CAAE,CAClB1B,CAAC,CAAEqE,cAAc,CAAG6L,YAAY,CAAG,CAAC,CACpCjQ,CAAC,CAAEiC,IAAI,CAAG,EAAE,CAAIP,GAAG,CAAG,EAAG,CACzBM,IAAI,CAAE,EAAE,CACRhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF;AACA+C,IAAI,CAAC2C,aAAa,CAAC,CACjBnB,CAAC,CAAEqE,cAAc,CACjBpE,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAC1CrQ,KAAK,CAAEgQ,YAAY,CACnB/P,MAAM,CAAEoQ,iBAAiB,CACzBnP,KAAK,CAAE3F,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,CACzB4F,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CACF9C,IAAI,CAAC2C,aAAa,CAAC,CACjBnB,CAAC,CAAEqE,cAAc,CAAG6L,YAAY,CAChCjQ,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAC1CrQ,KAAK,CAAEiQ,aAAa,CACpBhQ,MAAM,CAAEoQ,iBAAiB,CACzBlP,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CACF9C,IAAI,CAACwD,QAAQ,CAAC,uBAAuB,CAAE,CACrChC,CAAC,CAAEqE,cAAc,CAAG,CAAC,CACrBpE,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CAAG,EAAE,CAC3BmB,IAAI,CAAE,EAAE,CACRhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CAEF2U,eAAe,CAACrP,OAAO,CAAC,CAACW,IAAI,CAAEC,GAAG,GAAK,CACrCnD,IAAI,CAACwD,QAAQ,CAACN,IAAI,CAAE,CAClB1B,CAAC,CAAEqE,cAAc,CAAG6L,YAAY,CAAG,CAAC,CACpCjQ,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CAAG,EAAE,CAAIa,GAAG,CAAG,EAAG,CACxCM,IAAI,CAAE,EAAE,CACRhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF;AACA+C,IAAI,CAAC2C,aAAa,CAAC,CACjBnB,CAAC,CAAEqE,cAAc,CACjBpE,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAAGC,kBAAkB,CAC/DtQ,KAAK,CAAEgQ,YAAY,CACnB/P,MAAM,CAAEqQ,kBAAkB,CAC1BpP,KAAK,CAAE3F,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,CACzB4F,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CACF9C,IAAI,CAAC2C,aAAa,CAAC,CACjBnB,CAAC,CAAEqE,cAAc,CAAG6L,YAAY,CAChCjQ,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAAGC,kBAAkB,CAC/DtQ,KAAK,CAAEiQ,aAAa,CACpBhQ,MAAM,CAAEqQ,kBAAkB,CAC1BpP,KAAK,CAAE3F,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,CACzB4F,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CACF9C,IAAI,CAACwD,QAAQ,CAAC,sBAAsB,CAAE,CACpChC,CAAC,CAAEqE,cAAc,CAAG,CAAC,CACrBpE,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAAG,EAAE,CAC/CtO,IAAI,CAAE,EAAE,CACRhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACF+C,IAAI,CAACwD,QAAQ,CAAC,kBAAkB,CAAE,CAChChC,CAAC,CAAEqE,cAAc,CAAG6L,YAAY,CAAG,CAAC,CACpCjQ,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAAG,EAAE,CAC/CtO,IAAI,CAAE,EAAE,CACRhG,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CAEF;AACA+C,IAAI,CAAC2C,aAAa,CAAC,CACjBnB,CAAC,CAAEqE,cAAc,CACjBpE,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAAGC,kBAAkB,CAAGC,aAAa,CAC/EvQ,KAAK,CAAEgQ,YAAY,CACnB/P,MAAM,CAAEsQ,aAAa,CACrBpP,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CACF9C,IAAI,CAAC2C,aAAa,CAAC,CACjBnB,CAAC,CAAEqE,cAAc,CAAG6L,YAAY,CAChCjQ,CAAC,CAAEiC,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAAGC,kBAAkB,CAAGC,aAAa,CAC/EvQ,KAAK,CAAEiQ,aAAa,CACpBhQ,MAAM,CAAEsQ,aAAa,CACrBpP,WAAW,CAAE5F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB6F,WAAW,CAAE,CACf,CAAC,CAAC,CAEF;AACA,GAAI,CAAApF,QAAQ,CAAG,CAAC,CAEhB,KAAM,CAAAyU,cAAc,CAAGrW,QAAQ,CAACuD,eAAe,EAAI,EAAE,CAAE5B,IAAI,CAAEC,QAAQ,CAAEgU,YAAY,CAAG,EAAE,CAAC,CACzF,KAAM,CAAAU,YAAY,CAAGtW,QAAQ,CAACwD,YAAY,EAAI,EAAE,CAAE7B,IAAI,CAAEC,QAAQ,CAAEiU,aAAa,CAAG,EAAE,CAAC,CAErF,GAAI,CAAAU,QAAQ,CAAG3O,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAAGC,kBAAkB,CAAG,EAAE,CAChF,GAAI,CAAAM,MAAM,CAAGD,QAAQ,CAErBF,cAAc,CAAC5P,OAAO,CAAC,CAACW,IAAI,CAAEC,GAAG,GAAK,CACpC,GAAIkP,QAAQ,CAAIlP,GAAG,CAAG,EAAG,CAAGO,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAAGC,kBAAkB,CAAGC,aAAa,CAAG,CAAC,CAAE,CAC5GjS,IAAI,CAACwD,QAAQ,CAACN,IAAI,CAAE,CAClB1B,CAAC,CAAEqE,cAAc,CAAG,CAAC,CACrBpE,CAAC,CAAE4Q,QAAQ,CAAIlP,GAAG,CAAG,EAAG,CACxBM,IAAI,CAAE/F,QAAQ,CACdD,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEFmV,YAAY,CAAC7P,OAAO,CAAC,CAACW,IAAI,CAAEC,GAAG,GAAK,CAClC,GAAImP,MAAM,CAAInP,GAAG,CAAG,EAAG,CAAGO,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAAGC,kBAAkB,CAAGC,aAAa,CAAG,CAAC,CAAE,CAC1GjS,IAAI,CAACwD,QAAQ,CAACN,IAAI,CAAE,CAClB1B,CAAC,CAAEqE,cAAc,CAAG6L,YAAY,CAAG,CAAC,CACpCjQ,CAAC,CAAE6Q,MAAM,CAAInP,GAAG,CAAG,EAAG,CACtBM,IAAI,CAAE/F,QAAQ,CACdD,IAAI,CACJmF,KAAK,CAAE3F,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEF;AACA,MAAO,CAAAyG,IAAI,CAAGpB,YAAY,CAAGyP,iBAAiB,CAAGC,kBAAkB,CAAGC,aAAa,CAAG,EAAE,CAC1F","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}