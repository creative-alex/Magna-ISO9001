{"ast":null,"code":"import React,{useState,useContext,useEffect}from'react';import{useNavigate,useLocation}from'react-router-dom';import{UserContext}from'../context/userContext';import{generateEditablePdfTemplate1}from'../utils/pdfGenerate';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function NewTable(){const navigate=useNavigate();const location=useLocation();const{username}=useContext(UserContext);// Estados para os dados básicos\nconst[processName,setProcessName]=useState('');const[processFolder,setProcessFolder]=useState('');const[nextTableNumber,setNextTableNumber]=useState(null);const[manualPrefix,setManualPrefix]=useState('');const[servicosEntrada,setServicosEntrada]=useState('');const[servicoSaida,setServicoSaida]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState('');// Verifica se há uma pasta pré-selecionada\nuseEffect(()=>{var _location$state;if((_location$state=location.state)!==null&&_location$state!==void 0&&_location$state.preselectedFolder){setProcessFolder(location.state.preselectedFolder);}},[location.state]);// Buscar o próximo número de tabela quando o componente carregar\nuseEffect(()=>{const fetchNextTableNumber=async()=>{try{// Buscar a árvore de ficheiros para contar tabelas existentes\nconst response=await fetch('http://192.168.1.219:8080/files/list-files-tree');if(response.ok){var _targetFolder$childre;const pdfTree=await response.json();// Se não há pasta selecionada, não pode determinar numeração\nif(!processFolder){setNextTableNumber(null);return;}// Extrair o número do processo da pasta selecionada\nlet processNumber=null;const processMatch=processFolder.match(/^PROCESSO (\\d+):/);if(processMatch){processNumber=parseInt(processMatch[1],10);}else{// Se não segue o padrão PROCESSO X:, usar 0\nprocessNumber=0;}// Encontrar a pasta específica na árvore\nconst findFolderInTree=(nodes,targetPath)=>{for(const node of nodes){if(node.type==='folder'&&node.name===targetPath){return node;}if(node.type==='folder'&&node.children){const found=findFolderInTree(node.children,targetPath);if(found)return found;}}return null;};const targetFolder=findFolderInTree(pdfTree,processFolder);// Extrair números das tabelas existentes na pasta específica\nconst tableNumbers=[];if(targetFolder&&targetFolder.children){targetFolder.children.forEach(node=>{if(node.type==='file'){// Extrair números de diferentes padrões de ficheiros\nlet fileNumber=null;// Padrão XX- (ficheiros sub-processo, ex: 10-, 11-, 30-, 31-)\nconst matchDash=node.name.match(/^(\\d{1,2})-/);if(matchDash){fileNumber=parseInt(matchDash[1],10);}// Padrão X (ficheiros matriz, ex: 1, 2, 3)\nelse{const matchSingle=node.name.match(/^(\\d{1,2})\\s/);if(matchSingle){fileNumber=parseInt(matchSingle[1],10);}}// Se encontrou um número, verificar se pertence a este processo\nif(fileNumber!==null){const fileProcessNumber=Math.floor(fileNumber/10);// Para números de 1 dígito (1-9), considerar como pertencendo ao processo correspondente\nif(fileNumber<10){if(fileNumber===processNumber){tableNumbers.push(fileNumber);}}// Para números de 2 dígitos, verificar se começam com o número do processo\nelse if(fileProcessNumber===processNumber){tableNumbers.push(fileNumber);}}}});}// Debug: mostrar números encontrados\nconsole.log(\"Processo \".concat(processNumber,\": n\\xFAmeros encontrados:\"),tableNumbers.sort((a,b)=>a-b));console.log(\"Pasta: \\\"\".concat(processFolder,\"\\\"\"));console.log(\"Total de ficheiros analisados na pasta:\",(targetFolder===null||targetFolder===void 0?void 0:(_targetFolder$childre=targetFolder.children)===null||_targetFolder$childre===void 0?void 0:_targetFolder$childre.length)||0);// Determinar o próximo número baseado no processo\nlet nextNumber;if(tableNumbers.length>0){const maxExisting=Math.max(...tableNumbers);nextNumber=maxExisting+1;}else{// Se não há ficheiros existentes, começar com o número base do processo\nif(processNumber===0){// Para processos sem numeração específica, começar com 01\nnextNumber=1;}else{// Para processos numerados (PROCESSO 1:, PROCESSO 2:, etc.), \n// começar com X0 (ex: PROCESSO 3: começa com 30)\nnextNumber=processNumber*10;}}console.log(\"Pr\\xF3ximo n\\xFAmero para processo \".concat(processNumber,\":\"),nextNumber);console.log(\"L\\xF3gica aplicada: \".concat(tableNumbers.length>0?'incremento do máximo existente':'número base da pasta vazia'));setNextTableNumber(nextNumber);}else{setNextTableNumber(null);}}catch(error){console.warn('Erro ao buscar próximo número de tabela:',error);setNextTableNumber(null);}};fetchNextTableNumber();},[processFolder]);// Reexecuta quando a pasta muda\n// Estados para a tabela de observações (5 linhas por defeito)\nconst[observacoes,setObservacoes]=useState([[''],[''],[''],[''],['']]);// Estados para a tabela principal (6 linhas por defeito)\nconst[tabelaPrincipal,setTabelaPrincipal]=useState([['','','','',''],['','','','',''],['','','','',''],['','','','',''],['','','','',''],['','','','','']]);// Headers da tabela principal\nconst headers=['Fluxo\\ndas Ações','Descrição','Responsável','Documentos\\nAssociados','Instruções\\nde Trabalho'];const headersObs=['Observações'];// Função para atualizar observações\nconst handleObservacoesChange=(rowIdx,value)=>{setObservacoes(prev=>{const novo=[...prev];novo[rowIdx]=[value];return novo;});};// Função para atualizar tabela principal\nconst handleTabelaPrincipalChange=(rowIdx,colIdx,value)=>{setTabelaPrincipal(prev=>{const novo=prev.map(row=>[...row]);novo[rowIdx][colIdx]=value;return novo;});};// Função para adicionar linha às observações\nconst addObservacaoRow=()=>{setObservacoes(prev=>[...prev,['']]);};// Função para remover linha das observações\nconst removeObservacaoRow=index=>{if(observacoes.length>1){setObservacoes(prev=>prev.filter((_,i)=>i!==index));}};// Função para adicionar linha à tabela principal\nconst addTabelaPrincipalRow=()=>{setTabelaPrincipal(prev=>[...prev,['','','','','']]);};// Função para remover linha da tabela principal\nconst removeTabelaPrincipalRow=index=>{if(tabelaPrincipal.length>1){setTabelaPrincipal(prev=>prev.filter((_,i)=>i!==index));}};// Função para criar a tabela (Template 1)\nconst handleCreateTable=async()=>{// Validações\nif(!processName.trim()){setError('Nome da matriz é obrigatório');return;}if(!processFolder.trim()){setError('Nome da pasta é obrigatório');return;}if(nextTableNumber===null&&!manualPrefix.trim()){setError('Aguarde o carregamento do número da tabela ou insira um prefixo manual...');return;}setLoading(true);setError('');try{// 1. Gerar o PDF com Template 1\nconsole.log('Gerando PDF Template 1...');const pdfBytes=await generateEditablePdfTemplate1(tabelaPrincipal,headers,observacoes,headersObs);// 2. Preparar dados para envio\nconst formData=new FormData();// Nome do ficheiro - usar prefixo manual se fornecido, senão usar numeração automática\nlet fileName;if(manualPrefix.trim()){fileName=\"\".concat(manualPrefix.trim(),\" \").concat(processName.trim(),\".pdf\");}else{const formattedNumber=nextTableNumber.toString().padStart(2,'0');fileName=\"\".concat(formattedNumber,\" \").concat(processName.trim(),\".pdf\");}const folderPath=processFolder.trim();// Criar blob do PDF\nconst pdfBlob=new Blob([pdfBytes],{type:'application/pdf'});formData.append('file',pdfBlob,fileName);formData.append('filename',fileName);formData.append('folders',JSON.stringify([folderPath]));// Dados específicos do Template 1\nformData.append('mainTableData',JSON.stringify(tabelaPrincipal));formData.append('obsTableData',JSON.stringify(observacoes));formData.append('servicos_entrada',servicosEntrada||\"\");formData.append('servico_saida',servicoSaida||\"\");console.log('Enviando dados para o backend...');// 3. Enviar para o backend\nconst response=await fetch('http://192.168.1.219:8080/files/upload-pdf',{method:'POST',body:formData});if(!response.ok){throw new Error('Erro ao criar procedimento');}console.log('Tabela criada com sucesso!');// 4. Redirecionar para a lista de PDFs\nnavigate('/file');}catch(error){console.error('Erro ao criar procedimento:',error);setError('Erro ao criar procedimento: '+error.message);}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',maxWidth:'1000px',margin:'0 auto'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Criar novo procedimento\"}),error&&/*#__PURE__*/_jsx(\"div\",{style:{color:'red',backgroundColor:'#ffe6e6',padding:'10px',borderRadius:'5px',marginBottom:'20px'},children:error}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'5px',fontWeight:'bold'},children:\"Nome do Procedimento:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:processName,onChange:e=>setProcessName(e.target.value),placeholder:\"Ex: Gest\\xE3o de Recursos Humanos\",style:{width:'100%',padding:'8px',border:'1px solid #ccc',borderRadius:'4px',fontSize:'14px'}}),/*#__PURE__*/_jsx(\"small\",{style:{color:'#666'},children:processFolder?(()=>{let prefix;if(manualPrefix.trim()){prefix=manualPrefix.trim();}else if(nextTableNumber!==null){prefix=nextTableNumber.toString().padStart(2,'0');}else{return'Aguardando carregamento do número...';}return\"Nome do ficheiro ser\\xE1: \".concat(prefix,\" \").concat(processName||'[Nome da Matriz]',\".pdf\");})():'Selecione uma pasta para ver o nome do ficheiro'})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'5px',fontWeight:'bold'},children:\"Prefixo do Ficheiro (opcional):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:manualPrefix,onChange:e=>setManualPrefix(e.target.value),placeholder:\"Ex: 01, 02, A1, B2, etc. (deixe vazio para numera\\xE7\\xE3o autom\\xE1tica)\",style:{width:'100%',padding:'8px',border:'1px solid #ccc',borderRadius:'4px',fontSize:'14px'}}),/*#__PURE__*/_jsx(\"small\",{style:{color:'#666'},children:\"Se n\\xE3o especificar, ser\\xE1 usado o pr\\xF3ximo n\\xFAmero dispon\\xEDvel automaticamente\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'20px',marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{flex:1},children:[/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'5px',fontWeight:'bold'},children:\"Servi\\xE7os de Entrada (opcional):\"}),/*#__PURE__*/_jsx(\"textarea\",{value:servicosEntrada,onChange:e=>setServicosEntrada(e.target.value),placeholder:\"Recursos, informa\\xE7\\xF5es ou servi\\xE7os necess\\xE1rios\",rows:3,style:{width:'100%',padding:'8px',border:'1px solid #ccc',borderRadius:'4px',fontSize:'14px',resize:'vertical'}})]}),/*#__PURE__*/_jsxs(\"div\",{style:{flex:1},children:[/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'5px',fontWeight:'bold'},children:\"Servi\\xE7o de Sa\\xEDda (opcional):\"}),/*#__PURE__*/_jsx(\"textarea\",{value:servicoSaida,onChange:e=>setServicoSaida(e.target.value),placeholder:\"Resultado ou produto final\",rows:3,style:{width:'100%',padding:'8px',border:'1px solid #ccc',borderRadius:'4px',fontSize:'14px',resize:'vertical'}})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'10px',fontWeight:'bold'},children:\"Observa\\xE7\\xF5es:\"}),observacoes.map((obs,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px',marginBottom:'10px'},children:[/*#__PURE__*/_jsx(\"textarea\",{value:obs[0],onChange:e=>handleObservacoesChange(index,e.target.value),placeholder:\"Observa\\xE7\\xE3o \".concat(index+1),rows:2,style:{flex:1,padding:'8px',border:'1px solid #ccc',borderRadius:'4px',fontSize:'14px',resize:'vertical'}}),observacoes.length>1&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>removeObservacaoRow(index),style:{padding:'8px 12px',backgroundColor:'#dc3545',color:'white',border:'none',borderRadius:'4px',cursor:'pointer',height:'fit-content'},children:\"Remover\"})]},index)),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:addObservacaoRow,style:{padding:'8px 16px',backgroundColor:'#28a745',color:'white',border:'none',borderRadius:'4px',cursor:'pointer'},children:\"Adicionar Observa\\xE7\\xE3o\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'10px',fontWeight:'bold'},children:\"Tabela Principal:\"}),/*#__PURE__*/_jsx(\"div\",{style:{overflowX:'auto'},children:/*#__PURE__*/_jsxs(\"table\",{style:{width:'100%',borderCollapse:'collapse',border:'1px solid #ccc'},children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{style:{backgroundColor:'#f5f5f5'},children:[/*#__PURE__*/_jsx(\"th\",{style:{border:'1px solid #ccc',padding:'8px',minWidth:'120px'},children:\"Fluxo das A\\xE7\\xF5es\"}),/*#__PURE__*/_jsx(\"th\",{style:{border:'1px solid #ccc',padding:'8px',minWidth:'200px'},children:\"Descri\\xE7\\xE3o\"}),/*#__PURE__*/_jsx(\"th\",{style:{border:'1px solid #ccc',padding:'8px',minWidth:'120px'},children:\"Respons\\xE1vel\"}),/*#__PURE__*/_jsx(\"th\",{style:{border:'1px solid #ccc',padding:'8px',minWidth:'150px'},children:\"Documentos Associados\"}),/*#__PURE__*/_jsx(\"th\",{style:{border:'1px solid #ccc',padding:'8px',minWidth:'150px'},children:\"Instru\\xE7\\xF5es de trabalho\"}),/*#__PURE__*/_jsx(\"th\",{style:{border:'1px solid #ccc',padding:'8px',width:'80px'},children:\"A\\xE7\\xF5es\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:tabelaPrincipal.map((row,rowIdx)=>/*#__PURE__*/_jsxs(\"tr\",{children:[row.map((cell,colIdx)=>{var _headers$colIdx;return/*#__PURE__*/_jsx(\"td\",{style:{border:'1px solid #ccc',padding:'4px'},children:/*#__PURE__*/_jsx(\"textarea\",{value:cell,onChange:e=>handleTabelaPrincipalChange(rowIdx,colIdx,e.target.value),style:{width:'100%',minHeight:'40px',border:'none',resize:'vertical',fontSize:'12px'},placeholder:(_headers$colIdx=headers[colIdx])===null||_headers$colIdx===void 0?void 0:_headers$colIdx.replace('\\n',' ')})},colIdx);}),/*#__PURE__*/_jsx(\"td\",{style:{border:'1px solid #ccc',padding:'4px',textAlign:'center'},children:tabelaPrincipal.length>1&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>removeTabelaPrincipalRow(rowIdx),style:{padding:'4px 8px',backgroundColor:'#dc3545',color:'white',border:'none',borderRadius:'4px',cursor:'pointer',fontSize:'12px'},children:\"Remover\"})})]},rowIdx))})]})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:addTabelaPrincipalRow,style:{padding:'8px 16px',backgroundColor:'#28a745',color:'white',border:'none',borderRadius:'4px',cursor:'pointer',marginTop:'10px'},children:\"Adicionar Linha\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px',justifyContent:'flex-end'},children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>navigate('/file'),style:{padding:'12px 24px',backgroundColor:'#6c757d',color:'white',border:'none',borderRadius:'4px',cursor:'pointer',fontSize:'16px'},children:\"Cancelar\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleCreateTable,disabled:loading,style:{padding:'12px 24px',backgroundColor:loading?'#ccc':'#007bff',color:'white',border:'none',borderRadius:'4px',cursor:loading?'not-allowed':'pointer',fontSize:'16px'},children:loading?'A criar...':'Criar Procedimento'})]})]});}","map":{"version":3,"names":["React","useState","useContext","useEffect","useNavigate","useLocation","UserContext","generateEditablePdfTemplate1","jsx","_jsx","jsxs","_jsxs","NewTable","navigate","location","username","processName","setProcessName","processFolder","setProcessFolder","nextTableNumber","setNextTableNumber","manualPrefix","setManualPrefix","servicosEntrada","setServicosEntrada","servicoSaida","setServicoSaida","loading","setLoading","error","setError","_location$state","state","preselectedFolder","fetchNextTableNumber","response","fetch","ok","_targetFolder$childre","pdfTree","json","processNumber","processMatch","match","parseInt","findFolderInTree","nodes","targetPath","node","type","name","children","found","targetFolder","tableNumbers","forEach","fileNumber","matchDash","matchSingle","fileProcessNumber","Math","floor","push","console","log","concat","sort","a","b","length","nextNumber","maxExisting","max","warn","observacoes","setObservacoes","tabelaPrincipal","setTabelaPrincipal","headers","headersObs","handleObservacoesChange","rowIdx","value","prev","novo","handleTabelaPrincipalChange","colIdx","map","row","addObservacaoRow","removeObservacaoRow","index","filter","_","i","addTabelaPrincipalRow","removeTabelaPrincipalRow","handleCreateTable","trim","pdfBytes","formData","FormData","fileName","formattedNumber","toString","padStart","folderPath","pdfBlob","Blob","append","JSON","stringify","method","body","Error","message","style","padding","maxWidth","margin","color","backgroundColor","borderRadius","marginBottom","display","fontWeight","onChange","e","target","placeholder","width","border","fontSize","prefix","gap","flex","rows","resize","obs","onClick","cursor","height","overflowX","borderCollapse","minWidth","cell","_headers$colIdx","minHeight","replace","textAlign","marginTop","justifyContent","disabled"],"sources":["C:/Users/António Gonçalves/Desktop/Magna-ISO9001-Frontend/src/pages/novoProcedimento.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { UserContext } from '../context/userContext';\r\nimport { generateEditablePdfTemplate1 } from '../utils/pdfGenerate';\r\n\r\nexport default function NewTable() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { username } = useContext(UserContext);\r\n  \r\n  // Estados para os dados básicos\r\n  const [processName, setProcessName] = useState('');\r\n  const [processFolder, setProcessFolder] = useState('');\r\n  const [nextTableNumber, setNextTableNumber] = useState(null);\r\n  const [manualPrefix, setManualPrefix] = useState('');\r\n  const [servicosEntrada, setServicosEntrada] = useState('');\r\n  const [servicoSaida, setServicoSaida] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  // Verifica se há uma pasta pré-selecionada\r\n  useEffect(() => {\r\n    if (location.state?.preselectedFolder) {\r\n      setProcessFolder(location.state.preselectedFolder);\r\n    }\r\n  }, [location.state]);\r\n\r\n  // Buscar o próximo número de tabela quando o componente carregar\r\n  useEffect(() => {\r\n    const fetchNextTableNumber = async () => {\r\n      try {\r\n        // Buscar a árvore de ficheiros para contar tabelas existentes\r\n        const response = await fetch('http://192.168.1.219:8080/files/list-files-tree');\r\n        if (response.ok) {\r\n          const pdfTree = await response.json();\r\n          \r\n          // Se não há pasta selecionada, não pode determinar numeração\r\n          if (!processFolder) {\r\n            setNextTableNumber(null);\r\n            return;\r\n          }\r\n          \r\n          // Extrair o número do processo da pasta selecionada\r\n          let processNumber = null;\r\n          const processMatch = processFolder.match(/^PROCESSO (\\d+):/);\r\n          if (processMatch) {\r\n            processNumber = parseInt(processMatch[1], 10);\r\n          } else {\r\n            // Se não segue o padrão PROCESSO X:, usar 0\r\n            processNumber = 0;\r\n          }\r\n          \r\n          // Encontrar a pasta específica na árvore\r\n          const findFolderInTree = (nodes, targetPath) => {\r\n            for (const node of nodes) {\r\n              if (node.type === 'folder' && node.name === targetPath) {\r\n                return node;\r\n              }\r\n              if (node.type === 'folder' && node.children) {\r\n                const found = findFolderInTree(node.children, targetPath);\r\n                if (found) return found;\r\n              }\r\n            }\r\n            return null;\r\n          };\r\n          \r\n          const targetFolder = findFolderInTree(pdfTree, processFolder);\r\n          \r\n          // Extrair números das tabelas existentes na pasta específica\r\n          const tableNumbers = [];\r\n          \r\n          if (targetFolder && targetFolder.children) {\r\n            targetFolder.children.forEach(node => {\r\n              if (node.type === 'file') {\r\n                // Extrair números de diferentes padrões de ficheiros\r\n                let fileNumber = null;\r\n                \r\n                // Padrão XX- (ficheiros sub-processo, ex: 10-, 11-, 30-, 31-)\r\n                const matchDash = node.name.match(/^(\\d{1,2})-/);\r\n                if (matchDash) {\r\n                  fileNumber = parseInt(matchDash[1], 10);\r\n                }\r\n                // Padrão X (ficheiros matriz, ex: 1, 2, 3)\r\n                else {\r\n                  const matchSingle = node.name.match(/^(\\d{1,2})\\s/);\r\n                  if (matchSingle) {\r\n                    fileNumber = parseInt(matchSingle[1], 10);\r\n                  }\r\n                }\r\n                \r\n                // Se encontrou um número, verificar se pertence a este processo\r\n                if (fileNumber !== null) {\r\n                  const fileProcessNumber = Math.floor(fileNumber / 10);\r\n                  \r\n                  // Para números de 1 dígito (1-9), considerar como pertencendo ao processo correspondente\r\n                  if (fileNumber < 10) {\r\n                    if (fileNumber === processNumber) {\r\n                      tableNumbers.push(fileNumber);\r\n                    }\r\n                  }\r\n                  // Para números de 2 dígitos, verificar se começam com o número do processo\r\n                  else if (fileProcessNumber === processNumber) {\r\n                    tableNumbers.push(fileNumber);\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          }\r\n          \r\n          // Debug: mostrar números encontrados\r\n          console.log(`Processo ${processNumber}: números encontrados:`, tableNumbers.sort((a, b) => a - b));\r\n          console.log(`Pasta: \"${processFolder}\"`);\r\n          console.log(`Total de ficheiros analisados na pasta:`, targetFolder?.children?.length || 0);\r\n          \r\n          // Determinar o próximo número baseado no processo\r\n          let nextNumber;\r\n          if (tableNumbers.length > 0) {\r\n            const maxExisting = Math.max(...tableNumbers);\r\n            nextNumber = maxExisting + 1;\r\n          } else {\r\n            // Se não há ficheiros existentes, começar com o número base do processo\r\n            if (processNumber === 0) {\r\n              // Para processos sem numeração específica, começar com 01\r\n              nextNumber = 1;\r\n            } else {\r\n              // Para processos numerados (PROCESSO 1:, PROCESSO 2:, etc.), \r\n              // começar com X0 (ex: PROCESSO 3: começa com 30)\r\n              nextNumber = processNumber * 10;\r\n            }\r\n          }\r\n          \r\n          console.log(`Próximo número para processo ${processNumber}:`, nextNumber);\r\n          console.log(`Lógica aplicada: ${tableNumbers.length > 0 ? 'incremento do máximo existente' : 'número base da pasta vazia'}`);\r\n          \r\n          setNextTableNumber(nextNumber);\r\n        } else {\r\n          setNextTableNumber(null);\r\n        }\r\n      } catch (error) {\r\n        console.warn('Erro ao buscar próximo número de tabela:', error);\r\n        setNextTableNumber(null);\r\n      }\r\n    };\r\n\r\n    fetchNextTableNumber();\r\n  }, [processFolder]); // Reexecuta quando a pasta muda\r\n\r\n  // Estados para a tabela de observações (5 linhas por defeito)\r\n  const [observacoes, setObservacoes] = useState([\r\n    [''],\r\n    [''],\r\n    [''],\r\n    [''],\r\n    ['']\r\n  ]);\r\n\r\n  // Estados para a tabela principal (6 linhas por defeito)\r\n  const [tabelaPrincipal, setTabelaPrincipal] = useState([\r\n    ['', '', '', '', ''],\r\n    ['', '', '', '', ''],\r\n    ['', '', '', '', ''],\r\n    ['', '', '', '', ''],\r\n    ['', '', '', '', ''],\r\n    ['', '', '', '', '']\r\n  ]);\r\n\r\n  // Headers da tabela principal\r\n  const headers = [\r\n    'Fluxo\\ndas Ações',\r\n    'Descrição', \r\n    'Responsável',\r\n    'Documentos\\nAssociados',\r\n    'Instruções\\nde Trabalho'\r\n  ];\r\n\r\n  const headersObs = ['Observações'];\r\n\r\n  // Função para atualizar observações\r\n  const handleObservacoesChange = (rowIdx, value) => {\r\n    setObservacoes(prev => {\r\n      const novo = [...prev];\r\n      novo[rowIdx] = [value];\r\n      return novo;\r\n    });\r\n  };\r\n\r\n  // Função para atualizar tabela principal\r\n  const handleTabelaPrincipalChange = (rowIdx, colIdx, value) => {\r\n    setTabelaPrincipal(prev => {\r\n      const novo = prev.map(row => [...row]);\r\n      novo[rowIdx][colIdx] = value;\r\n      return novo;\r\n    });\r\n  };\r\n\r\n  // Função para adicionar linha às observações\r\n  const addObservacaoRow = () => {\r\n    setObservacoes(prev => [...prev, ['']]);\r\n  };\r\n\r\n  // Função para remover linha das observações\r\n  const removeObservacaoRow = (index) => {\r\n    if (observacoes.length > 1) {\r\n      setObservacoes(prev => prev.filter((_, i) => i !== index));\r\n    }\r\n  };\r\n\r\n  // Função para adicionar linha à tabela principal\r\n  const addTabelaPrincipalRow = () => {\r\n    setTabelaPrincipal(prev => [...prev, ['', '', '', '', '']]);\r\n  };\r\n\r\n  // Função para remover linha da tabela principal\r\n  const removeTabelaPrincipalRow = (index) => {\r\n    if (tabelaPrincipal.length > 1) {\r\n      setTabelaPrincipal(prev => prev.filter((_, i) => i !== index));\r\n    }\r\n  };\r\n\r\n  // Função para criar a tabela (Template 1)\r\n  const handleCreateTable = async () => {\r\n    // Validações\r\n    if (!processName.trim()) {\r\n      setError('Nome da matriz é obrigatório');\r\n      return;\r\n    }\r\n\r\n    if (!processFolder.trim()) {\r\n      setError('Nome da pasta é obrigatório');\r\n      return;\r\n    }\r\n\r\n    if (nextTableNumber === null && !manualPrefix.trim()) {\r\n      setError('Aguarde o carregamento do número da tabela ou insira um prefixo manual...');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      // 1. Gerar o PDF com Template 1\r\n      console.log('Gerando PDF Template 1...');\r\n      const pdfBytes = await generateEditablePdfTemplate1(\r\n        tabelaPrincipal, \r\n        headers, \r\n        observacoes, \r\n        headersObs\r\n      );\r\n\r\n      // 2. Preparar dados para envio\r\n      const formData = new FormData();\r\n      \r\n      // Nome do ficheiro - usar prefixo manual se fornecido, senão usar numeração automática\r\n      let fileName;\r\n      if (manualPrefix.trim()) {\r\n        fileName = `${manualPrefix.trim()} ${processName.trim()}.pdf`;\r\n      } else {\r\n        const formattedNumber = nextTableNumber.toString().padStart(2, '0');\r\n        fileName = `${formattedNumber} ${processName.trim()}.pdf`;\r\n      }\r\n      const folderPath = processFolder.trim();\r\n      \r\n      // Criar blob do PDF\r\n      const pdfBlob = new Blob([pdfBytes], { type: 'application/pdf' });\r\n      formData.append('file', pdfBlob, fileName);\r\n      formData.append('filename', fileName);\r\n      formData.append('folders', JSON.stringify([folderPath]));\r\n      \r\n      // Dados específicos do Template 1\r\n      formData.append('mainTableData', JSON.stringify(tabelaPrincipal));\r\n      formData.append('obsTableData', JSON.stringify(observacoes));\r\n      formData.append('servicos_entrada', servicosEntrada || \"\");\r\n      formData.append('servico_saida', servicoSaida || \"\");\r\n\r\n      console.log('Enviando dados para o backend...');\r\n\r\n      // 3. Enviar para o backend\r\n      const response = await fetch('http://192.168.1.219:8080/files/upload-pdf', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Erro ao criar procedimento');\r\n      }\r\n\r\n      console.log('Tabela criada com sucesso!');\r\n      \r\n      // 4. Redirecionar para a lista de PDFs\r\n      navigate('/file');\r\n      \r\n    } catch (error) {\r\n      console.error('Erro ao criar procedimento:', error);\r\n      setError('Erro ao criar procedimento: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', maxWidth: '1000px', margin: '0 auto' }}>\r\n      <h2>Criar novo procedimento</h2>     \r\n      {error && (\r\n        <div style={{ \r\n          color: 'red', \r\n          backgroundColor: '#ffe6e6', \r\n          padding: '10px', \r\n          borderRadius: '5px', \r\n          marginBottom: '20px' \r\n        }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    \r\n      <div style={{ marginBottom: '20px' }}>\r\n        <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\r\n          Nome do Procedimento:\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={processName}\r\n          onChange={(e) => setProcessName(e.target.value)}\r\n          placeholder=\"Ex: Gestão de Recursos Humanos\"\r\n          style={{ \r\n            width: '100%', \r\n            padding: '8px', \r\n            border: '1px solid #ccc', \r\n            borderRadius: '4px',\r\n            fontSize: '14px'\r\n          }}\r\n        />\r\n        <small style={{ color: '#666' }}>\r\n          {processFolder\r\n            ? (() => {\r\n                let prefix;\r\n                if (manualPrefix.trim()) {\r\n                  prefix = manualPrefix.trim();\r\n                } else if (nextTableNumber !== null) {\r\n                  prefix = nextTableNumber.toString().padStart(2, '0');\r\n                } else {\r\n                  return 'Aguardando carregamento do número...';\r\n                }\r\n                return `Nome do ficheiro será: ${prefix} ${processName || '[Nome da Matriz]'}.pdf`;\r\n              })()\r\n            : 'Selecione uma pasta para ver o nome do ficheiro'\r\n          }\r\n        </small>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\r\n          Prefixo do Ficheiro (opcional):\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={manualPrefix}\r\n          onChange={(e) => setManualPrefix(e.target.value)}\r\n          placeholder=\"Ex: 01, 02, A1, B2, etc. (deixe vazio para numeração automática)\"\r\n          style={{ \r\n            width: '100%', \r\n            padding: '8px', \r\n            border: '1px solid #ccc', \r\n            borderRadius: '4px',\r\n            fontSize: '14px'\r\n          }}\r\n        />\r\n        <small style={{ color: '#666' }}>\r\n          Se não especificar, será usado o próximo número disponível automaticamente\r\n        </small>\r\n      </div>\r\n\r\n      {/* Serviços de Entrada e Saída (opcionais) */}\r\n      <div style={{ display: 'flex', gap: '20px', marginBottom: '20px' }}>\r\n        <div style={{ flex: 1 }}>\r\n          <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\r\n            Serviços de Entrada (opcional):\r\n          </label>\r\n          <textarea\r\n            value={servicosEntrada}\r\n            onChange={(e) => setServicosEntrada(e.target.value)}\r\n            placeholder=\"Recursos, informações ou serviços necessários\"\r\n            rows={3}\r\n            style={{ \r\n              width: '100%', \r\n              padding: '8px', \r\n              border: '1px solid #ccc', \r\n              borderRadius: '4px',\r\n              fontSize: '14px',\r\n              resize: 'vertical'\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div style={{ flex: 1 }}>\r\n          <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\r\n            Serviço de Saída (opcional):\r\n          </label>\r\n          <textarea\r\n            value={servicoSaida}\r\n            onChange={(e) => setServicoSaida(e.target.value)}\r\n            placeholder=\"Resultado ou produto final\"\r\n            rows={3}\r\n            style={{ \r\n              width: '100%', \r\n              padding: '8px', \r\n              border: '1px solid #ccc', \r\n              borderRadius: '4px',\r\n              fontSize: '14px',\r\n              resize: 'vertical'\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tabela de Observações */}\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <label style={{ display: 'block', marginBottom: '10px', fontWeight: 'bold' }}>\r\n          Observações:\r\n        </label>\r\n        {observacoes.map((obs, index) => (\r\n          <div key={index} style={{ display: 'flex', gap: '10px', marginBottom: '10px' }}>\r\n            <textarea\r\n              value={obs[0]}\r\n              onChange={(e) => handleObservacoesChange(index, e.target.value)}\r\n              placeholder={`Observação ${index + 1}`}\r\n              rows={2}\r\n              style={{ \r\n                flex: 1, \r\n                padding: '8px', \r\n                border: '1px solid #ccc', \r\n                borderRadius: '4px',\r\n                fontSize: '14px',\r\n                resize: 'vertical'\r\n              }}\r\n            />\r\n            {observacoes.length > 1 && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => removeObservacaoRow(index)}\r\n                style={{ \r\n                  padding: '8px 12px', \r\n                  backgroundColor: '#dc3545', \r\n                  color: 'white', \r\n                  border: 'none', \r\n                  borderRadius: '4px',\r\n                  cursor: 'pointer',\r\n                  height: 'fit-content'\r\n                }}\r\n              >\r\n                Remover\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))}\r\n        <button\r\n          type=\"button\"\r\n          onClick={addObservacaoRow}\r\n          style={{ \r\n            padding: '8px 16px', \r\n            backgroundColor: '#28a745', \r\n            color: 'white', \r\n            border: 'none', \r\n            borderRadius: '4px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          Adicionar Observação\r\n        </button>\r\n      </div>\r\n\r\n      {/* Tabela Principal */}\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <label style={{ display: 'block', marginBottom: '10px', fontWeight: 'bold' }}>\r\n          Tabela Principal:\r\n        </label>\r\n        <div style={{ overflowX: 'auto' }}>\r\n          <table style={{ width: '100%', borderCollapse: 'collapse', border: '1px solid #ccc' }}>\r\n            <thead>\r\n              <tr style={{ backgroundColor: '#f5f5f5' }}>\r\n                <th style={{ border: '1px solid #ccc', padding: '8px', minWidth: '120px' }}>Fluxo das Ações</th>\r\n                <th style={{ border: '1px solid #ccc', padding: '8px', minWidth: '200px' }}>Descrição</th>\r\n                <th style={{ border: '1px solid #ccc', padding: '8px', minWidth: '120px' }}>Responsável</th>\r\n                <th style={{ border: '1px solid #ccc', padding: '8px', minWidth: '150px' }}>Documentos Associados</th>\r\n                <th style={{ border: '1px solid #ccc', padding: '8px', minWidth: '150px' }}>Instruções de trabalho</th>\r\n                <th style={{ border: '1px solid #ccc', padding: '8px', width: '80px' }}>Ações</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {tabelaPrincipal.map((row, rowIdx) => (\r\n                <tr key={rowIdx}>\r\n                  {row.map((cell, colIdx) => (\r\n                    <td key={colIdx} style={{ border: '1px solid #ccc', padding: '4px' }}>\r\n                      <textarea\r\n                        value={cell}\r\n                        onChange={(e) => handleTabelaPrincipalChange(rowIdx, colIdx, e.target.value)}\r\n                        style={{ \r\n                          width: '100%', \r\n                          minHeight: '40px', \r\n                          border: 'none', \r\n                          resize: 'vertical',\r\n                          fontSize: '12px'\r\n                        }}\r\n                        placeholder={headers[colIdx]?.replace('\\n', ' ')}\r\n                      />\r\n                    </td>\r\n                  ))}\r\n                  <td style={{ border: '1px solid #ccc', padding: '4px', textAlign: 'center' }}>\r\n                    {tabelaPrincipal.length > 1 && (\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => removeTabelaPrincipalRow(rowIdx)}\r\n                        style={{ \r\n                          padding: '4px 8px', \r\n                          backgroundColor: '#dc3545', \r\n                          color: 'white', \r\n                          border: 'none', \r\n                          borderRadius: '4px',\r\n                          cursor: 'pointer',\r\n                          fontSize: '12px'\r\n                        }}\r\n                      >\r\n                        Remover\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={addTabelaPrincipalRow}\r\n          style={{ \r\n            padding: '8px 16px', \r\n            backgroundColor: '#28a745', \r\n            color: 'white', \r\n            border: 'none', \r\n            borderRadius: '4px',\r\n            cursor: 'pointer',\r\n            marginTop: '10px'\r\n          }}\r\n        >\r\n          Adicionar Linha\r\n        </button>\r\n      </div>\r\n\r\n      {/* Botões de ação */}\r\n      <div style={{ display: 'flex', gap: '10px', justifyContent: 'flex-end' }}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => navigate('/file')}\r\n          style={{ \r\n            padding: '12px 24px', \r\n            backgroundColor: '#6c757d', \r\n            color: 'white', \r\n            border: 'none', \r\n            borderRadius: '4px',\r\n            cursor: 'pointer',\r\n            fontSize: '16px'\r\n          }}\r\n        >\r\n          Cancelar\r\n        </button>\r\n        \r\n        <button\r\n          type=\"button\"\r\n          onClick={handleCreateTable}\r\n          disabled={loading}\r\n          style={{ \r\n            padding: '12px 24px', \r\n            backgroundColor: loading ? '#ccc' : '#007bff', \r\n            color: 'white', \r\n            border: 'none', \r\n            borderRadius: '4px',\r\n            cursor: loading ? 'not-allowed' : 'pointer',\r\n            fontSize: '16px'\r\n          }}\r\n        >\r\n          {loading ? 'A criar...' : 'Criar Procedimento'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}