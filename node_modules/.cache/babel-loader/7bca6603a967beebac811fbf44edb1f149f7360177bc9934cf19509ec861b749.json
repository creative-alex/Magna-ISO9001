{"ast":null,"code":"import{createContext,useState,useEffect}from\"react\";import{initializeApp}from\"firebase/app\";import{getAuth,onAuthStateChanged}from\"firebase/auth\";import LoadingPage from\"../pages/loading\";import{API_CONFIG}from\"../utils/constants\";// Configura칞칚o do Firebase\nimport{jsx as _jsx}from\"react/jsx-runtime\";const firebaseConfig={apiKey:process.env.REACT_APP_FIREBASE_API_KEY,authDomain:process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,projectId:process.env.REACT_APP_FIREBASE_PROJECT_ID,storageBucket:process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,messagingSenderId:process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,appId:process.env.REACT_APP_FIREBASE_APP_ID};const app=initializeApp(firebaseConfig);const auth=getAuth(app);export const UserContext=/*#__PURE__*/createContext();export const UserProvider=_ref=>{let{children}=_ref;const[username,setUsername]=useState(null);const[userEmail,setUserEmail]=useState(\"\");const[isAuthenticated,setIsAuthenticated]=useState(false);const[isLoading,setIsLoading]=useState(true);const[userRole,setUserRole]=useState(null);// Fun칞칚o para verificar e validar o token do utilizador\nconst validateUserToken=async user=>{try{// For칞ar refresh do token para garantir que est치 atualizado\nconst token=await user.getIdToken(true);console.log(\"游댏 Validando token...\",token.substring(0,50)+\"...\");const response=await fetch(\"\".concat(API_CONFIG.BASE_URL).concat(API_CONFIG.ENDPOINTS.USERS,\"/verifyTokenAndGetUserInfo\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)// Adicionar header Authorization\n},body:JSON.stringify({token})});console.log(\"游닌 Resposta da valida칞칚o:\",response.status);if(response.ok){const userData=await response.json();setUsername(userData.nome);setUserEmail(userData.email);setUserRole(userData.role);setIsAuthenticated(true);return true;}else{// Token inv치lido\nclearUserData();return false;}}catch(error){console.error(\"Erro ao validar token:\",error);clearUserData();return false;}};// Fun칞칚o para limpar dados do utilizador\nconst clearUserData=()=>{setUsername(null);setUserEmail(\"\");setUserRole(null);setIsAuthenticated(false);};// Fun칞칚o para logout\nconst logout=async()=>{try{await auth.signOut();clearUserData();}catch(error){console.error(\"Erro ao fazer logout:\",error);}};useEffect(()=>{// Observa mudan칞as no estado de autentica칞칚o do Firebase\nconst unsubscribe=onAuthStateChanged(auth,async user=>{setIsLoading(true);if(user){// Utilizador est치 logado, verificar se o token 칠 v치lido\nconst isValid=await validateUserToken(user);if(!isValid){// Se o token n칚o for v치lido, fazer logout\nawait auth.signOut();}}else{// Utilizador n칚o est치 logado\nclearUserData();}setIsLoading(false);});return()=>unsubscribe();},[]);const value={username,setUsername,userEmail,setUserEmail,userRole,setUserRole,isAuthenticated,isLoading,logout,validateUserToken,auth};// Mostrar p치gina de loading enquanto verifica autentica칞칚o\nif(isLoading){return/*#__PURE__*/_jsx(LoadingPage,{});}return/*#__PURE__*/_jsx(UserContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["createContext","useState","useEffect","initializeApp","getAuth","onAuthStateChanged","LoadingPage","API_CONFIG","jsx","_jsx","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","app","auth","UserContext","UserProvider","_ref","children","username","setUsername","userEmail","setUserEmail","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","userRole","setUserRole","validateUserToken","user","token","getIdToken","console","log","substring","response","fetch","concat","BASE_URL","ENDPOINTS","USERS","method","headers","body","JSON","stringify","status","ok","userData","json","nome","email","role","clearUserData","error","logout","signOut","unsubscribe","isValid","value","Provider"],"sources":["C:/Users/Ant칩nio Gon칞alves/Desktop/Magna-ISO9001-Frontend/src/context/userContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport LoadingPage from \"../pages/loading\";\r\nimport { API_CONFIG } from \"../utils/constants\";\r\n\r\n// Configura칞칚o do Firebase\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [username, setUsername] = useState(null);\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [userRole, setUserRole] = useState(null);\r\n\r\n  // Fun칞칚o para verificar e validar o token do utilizador\r\n  const validateUserToken = async (user) => {\r\n    try {\r\n      // For칞ar refresh do token para garantir que est치 atualizado\r\n      const token = await user.getIdToken(true);\r\n      \r\n      console.log(\"游댏 Validando token...\", token.substring(0, 50) + \"...\");\r\n      \r\n      const response = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.USERS}/verifyTokenAndGetUserInfo`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${token}`, // Adicionar header Authorization\r\n        },\r\n        body: JSON.stringify({ token }),\r\n      });\r\n      \r\n      console.log(\"游닌 Resposta da valida칞칚o:\", response.status);\r\n      \r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        setUsername(userData.nome);\r\n        setUserEmail(userData.email);\r\n        setUserRole(userData.role);\r\n        setIsAuthenticated(true);\r\n        return true;\r\n      } else {\r\n        // Token inv치lido\r\n        clearUserData();\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erro ao validar token:\", error);\r\n      clearUserData();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Fun칞칚o para limpar dados do utilizador\r\n  const clearUserData = () => {\r\n    setUsername(null);\r\n    setUserEmail(\"\");\r\n    setUserRole(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  // Fun칞칚o para logout\r\n  const logout = async () => {\r\n    try {\r\n      await auth.signOut();\r\n      clearUserData();\r\n    } catch (error) {\r\n      console.error(\"Erro ao fazer logout:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Observa mudan칞as no estado de autentica칞칚o do Firebase\r\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\r\n      setIsLoading(true);\r\n      \r\n      if (user) {\r\n        // Utilizador est치 logado, verificar se o token 칠 v치lido\r\n        const isValid = await validateUserToken(user);\r\n        if (!isValid) {\r\n          // Se o token n칚o for v치lido, fazer logout\r\n          await auth.signOut();\r\n        }\r\n      } else {\r\n        // Utilizador n칚o est치 logado\r\n        clearUserData();\r\n      }\r\n      \r\n      setIsLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const value = {\r\n    username,\r\n    setUsername,\r\n    userEmail,\r\n    setUserEmail,\r\n    userRole,\r\n    setUserRole,\r\n    isAuthenticated,\r\n    isLoading,\r\n    logout,\r\n    validateUserToken,\r\n    auth\r\n  };\r\n\r\n  // Mostrar p치gina de loading enquanto verifica autentica칞칚o\r\n  if (isLoading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider value={value}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}