{"ast":null,"code":"import React,{useState}from'react';import{toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import{useNavigate,Link}from\"react-router-dom\";import Logo from\"../../logo.svg\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Register=()=>{const[nome,setNome]=useState('');const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[message,setMessage]=useState('');const[loading,setLoading]=useState(false);const navigate=useNavigate();const handleSubmit=async event=>{event.preventDefault();setMessage('');setLoading(true);// Validação do formato do e-mail\nconst emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;if(!emailRegex.test(email)){toast.error('Por favor, insira um e-mail válido.');setLoading(false);return;}// Validação das passwords\nif(password.length<6){toast.error('A password deve ter pelo menos 6 caracteres.');setLoading(false);return;}try{// Criar utilizador apenas no backend (evita auto-login)\nconst newUser={nome,email,temporaryPassword:password,// Enviar password para criação no backend\nrole:'User',isFirstLogin:true};// Criar no backend\nconst response=await fetch('https://api9001.duckdns.org/users/createUser',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(newUser)});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||'Erro ao criar utilizador');}toast.success('Conta criada com sucesso! O utilizador pode agora fazer login.');// Limpar campos\nsetNome('');setEmail('');setPassword('');// Redirecionar para login após 2 segundos\nsetTimeout(()=>{navigate('/');},2000);}catch(error){console.error('Erro ao criar conta:',error);let errorMessage='Erro ao criar conta';if(error.message.includes('email-already-exists')||error.message.includes('Email já está em uso')){errorMessage='Este e-mail já está em uso';}else if(error.message){errorMessage=error.message;}setMessage(errorMessage);toast.error(errorMessage);}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"file-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"img\",{src:Logo,alt:\"Logo\",className:\"logo\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"title\",children:\"Magna ISO90001\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-panel\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"panel-title\",children:\"Criar Nova Conta\"}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"auth-error\",children:message}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"auth-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"auth-field\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"nome\",className:\"auth-label\",children:\"Nome:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"nome\",type:\"text\",className:\"auth-input\",value:nome,onChange:e=>setNome(e.target.value),required:true,placeholder:\"Insira o seu nome completo\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-field\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",className:\"auth-label\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"email\",type:\"email\",className:\"auth-input\",value:email,onChange:e=>setEmail(e.target.value),required:true,placeholder:\"seu@email.com\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-field\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:\"auth-label\",children:\"Password Tempor\\xE1ria:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"password\",type:\"password\",className:\"auth-input\",value:password,onChange:e=>setPassword(e.target.value),minLength:6,required:true,placeholder:\"M\\xEDnimo 6 caracteres\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"auth-button\",disabled:loading,children:loading?\"A criar conta...\":\"Criar Conta\"})]})]})]});};export default Register;","map":{"version":3,"names":["React","useState","toast","useNavigate","Link","Logo","jsx","_jsx","jsxs","_jsxs","Register","nome","setNome","email","setEmail","password","setPassword","message","setMessage","loading","setLoading","navigate","handleSubmit","event","preventDefault","emailRegex","test","error","length","newUser","temporaryPassword","role","isFirstLogin","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","success","setTimeout","console","errorMessage","includes","className","children","src","alt","onSubmit","htmlFor","id","type","value","onChange","e","target","required","placeholder","minLength","disabled"],"sources":["C:/Users/alex_/Desktop/Magna-ISO9001/src/components/Auth/register.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport Logo from \"../../logo.svg\";\r\n\r\nconst Register = () => {\r\n  const [nome, setNome] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setMessage('');\r\n    setLoading(true);\r\n\r\n    // Validação do formato do e-mail\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      toast.error('Por favor, insira um e-mail válido.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Validação das passwords\r\n    if (password.length < 6) {\r\n      toast.error('A password deve ter pelo menos 6 caracteres.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Criar utilizador apenas no backend (evita auto-login)\r\n      const newUser = { \r\n        nome, \r\n        email, \r\n        temporaryPassword: password, // Enviar password para criação no backend\r\n        role: 'User',\r\n        isFirstLogin: true\r\n      };\r\n\r\n      // Criar no backend\r\n      const response = await fetch('https://api9001.duckdns.org/users/createUser', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newUser),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Erro ao criar utilizador');\r\n      }\r\n\r\n      toast.success('Conta criada com sucesso! O utilizador pode agora fazer login.');\r\n      \r\n      // Limpar campos\r\n      setNome('');\r\n      setEmail('');\r\n      setPassword('');\r\n      \r\n      // Redirecionar para login após 2 segundos\r\n      setTimeout(() => {\r\n        navigate('/');\r\n      }, 2000);\r\n\r\n    } catch (error) {\r\n      console.error('Erro ao criar conta:', error);\r\n      \r\n      let errorMessage = 'Erro ao criar conta';\r\n      if (error.message.includes('email-already-exists') || error.message.includes('Email já está em uso')) {\r\n        errorMessage = 'Este e-mail já está em uso';\r\n      } else if (error.message) {\r\n        errorMessage = error.message;\r\n      }\r\n      \r\n      setMessage(errorMessage);\r\n      toast.error(errorMessage);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-container\">\r\n      <div className=\"header\">\r\n        <img src={Logo} alt=\"Logo\" className=\"logo\" />\r\n        <h2 className=\"title\">Magna ISO90001</h2>\r\n      </div>\r\n      <div className=\"file-panel\">\r\n        <div className=\"panel-title\">Criar Nova Conta</div>\r\n        \r\n        {message && <div className=\"auth-error\">{message}</div>}\r\n        \r\n        <form onSubmit={handleSubmit} className=\"auth-form\">\r\n          <div className=\"auth-field\">\r\n            <label htmlFor=\"nome\" className=\"auth-label\">Nome:</label>\r\n            <input\r\n              id=\"nome\"\r\n              type=\"text\"\r\n              className=\"auth-input\"\r\n              value={nome}\r\n              onChange={(e) => setNome(e.target.value)}\r\n              required\r\n              placeholder=\"Insira o seu nome completo\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"auth-field\">\r\n            <label htmlFor=\"email\" className=\"auth-label\">Email:</label>\r\n            <input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              className=\"auth-input\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              placeholder=\"seu@email.com\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"auth-field\">\r\n            <label htmlFor=\"password\" className=\"auth-label\">Password Temporária:</label>\r\n            <input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              className=\"auth-input\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              minLength={6}\r\n              required\r\n              placeholder=\"Mínimo 6 caracteres\"\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"auth-button\" disabled={loading}>\r\n            {loading ? \"A criar conta...\" : \"Criar Conta\"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}