{"ast":null,"code":"import React,{useEffect}from\"react\";import{generateEditablePdf}from\"../../utils/pdfGenerate\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function ExportPdfButton(_ref){let{templateType=1,data,headers,dataObs,headersObs,atividades,donoProcesso,donoProcessoOriginal,objetivoProcesso,indicadores,pathFilename,fieldNames,exportRef,servicosEntrada,servicoSaida,onSaveSuccess,// Novo prop para callback ap√≥s guardar\nhistory=[]// Novo prop para hist√≥rico\n}=_ref;// Fun√ß√£o para carregar automaticamente a imagem PNG da empresa\nconst loadCompanyImage=async()=>{try{const response=await fetch('/c_comenius_cor.png');if(response.ok){const arrayBuffer=await response.arrayBuffer();console.log(\"‚úÖ Imagem da empresa carregada automaticamente\");return arrayBuffer;}else{console.warn(\"‚ö†Ô∏è Imagem da empresa n√£o encontrada\");return null;}}catch(error){console.error(\"‚ùå Erro ao carregar imagem da empresa:\",error);return null;}};// Fun√ß√£o para preparar os dados para envio ao backend\nconst getMainTableFormData=()=>{const formDataObj={};data.forEach((row,rowIdx)=>{const rowFields=fieldNames[rowIdx]||[];row.forEach((cell,colIdx)=>{const fieldName=rowFields[colIdx]||\"table2_r\".concat(rowIdx+2,\"_c\").concat(colIdx+1);formDataObj[fieldName]=cell||\"\";});});return formDataObj;};// Fun√ß√£o para enviar PDF edit√°vel para o backend\nconst handleSendToBackend=async()=>{console.log(\"üîç DEBUG - pathFilename recebido:\",pathFilename);console.log(\"üîç DEBUG - tipo do pathFilename:\",typeof pathFilename);console.log(\"üîç DEBUG - pathFilename est√° vazio?\",!pathFilename);console.log(\"handleSendToBackend chamado com:\");console.log(\"templateType:\",templateType);console.log(\"servicosEntrada:\",servicosEntrada);console.log(\"servicoSaida:\",servicoSaida);const stringHeaders=headers.map(h=>{var _h$props;return typeof h===\"string\"?h:h!==null&&h!==void 0&&(_h$props=h.props)!==null&&_h$props!==void 0&&_h$props.children?Array.isArray(h.props.children)?h.props.children.join(''):h.props.children:String(h);});const parts=pathFilename.split(\"/\");const filename=parts.pop();const folders=parts;console.log(\"üîç DEBUG - parts ap√≥s split:\",parts);console.log(\"üîç DEBUG - filename:\",filename);console.log(\"üîç DEBUG - folders:\",folders);// Carregar automaticamente a imagem PNG da empresa\nlet imageBytes=await loadCompanyImage();if(imageBytes){imageBytes=new Uint8Array(imageBytes);console.log(\"‚úÖ Imagem da empresa carregada:\",imageBytes.length,\"bytes\");}console.log(\"üîç DEBUG ExportPdfButton - templateType:\",templateType);console.log(\"üîç DEBUG ExportPdfButton - history recebido:\",history);console.log(\"üîç DEBUG ExportPdfButton - history length:\",history===null||history===void 0?void 0:history.length);// Passe todos os dados e o templateType\nconst editablePdfBytes=await generateEditablePdf({templateType,data,headers:stringHeaders,dataObs,headersObs,atividades,donoProcesso,objetivoProcesso,indicadores,servicosEntrada,servicoSaida,title:\"Procedimento\",imageBytes,pathFilename:pathFilename||\"SemNome/documento.pdf\",// ‚Üê FALLBACK se estiver vazio\nhistory});console.log(\"üîç DEBUG - pathFilename enviado para generateEditablePdf:\",pathFilename||\"SemNome/documento.pdf\");const formData=new FormData();formData.append(\"file\",new Blob([editablePdfBytes],{type:\"application/pdf\"}),filename);formData.append(\"folders\",JSON.stringify(folders));formData.append(\"filename\",filename);formData.append(\"originalFilename\",pathFilename);// Adiciona os dados din√¢micos ao formData\nif(templateType===1){const mainTableFormData=getMainTableFormData();formData.append(\"mainTableData\",JSON.stringify(mainTableFormData));formData.append(\"servicos_entrada\",servicosEntrada||\"\");formData.append(\"servico_saida\",servicoSaida||\"\");console.log(\"Template 1 - Enviando servicos_entrada:\",servicosEntrada||\"\");console.log(\"Template 1 - Enviando servico_saida:\",servicoSaida||\"\");}else if(templateType===2){formData.append(\"atividades\",JSON.stringify(atividades));formData.append(\"donoProcesso\",donoProcesso);formData.append(\"objetivoProcesso\",objetivoProcesso);formData.append(\"servicos_entrada\",servicosEntrada);formData.append(\"servico_saida\",servicoSaida);// Para Template2, sempre tratar indicadores como array e converter para campos individuais\nif(Array.isArray(indicadores)){indicadores.forEach((indicador,index)=>{formData.append(\"indicadores_r\".concat(index+1),indicador||\"\");});}else{// Fallback se ainda for objeto\nformData.append(\"indicadores_r1\",indicadores.indicadores_r1||\"\");formData.append(\"indicadores_r2\",indicadores.indicadores_r2||\"\");formData.append(\"indicadores_r3\",indicadores.indicadores_r3||\"\");}console.log(\"Template 2 - Enviando atividades:\",atividades);console.log(\"Template 2 - Enviando indicadores:\",indicadores);console.log(\"Template 2 - Enviando servicos_entrada:\",servicosEntrada);console.log(\"Template 2 - Enviando servico_saida:\",servicoSaida);}await fetch(\"http://192.168.1.219:8080/files/upload-pdf\",{method:\"POST\",body:formData});// Se o dono do processo foi alterado (apenas para Template2), atualizar no backend\nif(templateType===2&&donoProcesso!==donoProcessoOriginal){try{console.log(\"Atualizando dono do processo:\",donoProcesso);const processId=pathFilename;// Usando o filename como processId\nawait fetch(\"http://192.168.1.219:8080/files/update-dono-processo\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({processId:processId,donoProcesso:donoProcesso})});console.log(\"Dono do processo atualizado com sucesso!\");}catch(error){console.error(\"Erro ao atualizar dono do processo:\",error);}}// Chama o callback para indicar que foi guardado com sucesso\nif(onSaveSuccess){onSaveSuccess();}};// Fun√ß√£o para pr√©-visualizar o PDF edit√°vel\nconst handlePreviewPdf=async()=>{console.log(\"üîç handlePreviewPdf - pathFilename recebido:\",pathFilename);const stringHeaders=headers.map(h=>{var _h$props2;return typeof h===\"string\"?h:h!==null&&h!==void 0&&(_h$props2=h.props)!==null&&_h$props2!==void 0&&_h$props2.children?Array.isArray(h.props.children)?h.props.children.join(''):h.props.children:String(h);});// Carregar automaticamente a imagem PNG da empresa\nlet imageBytes=await loadCompanyImage();if(imageBytes){imageBytes=new Uint8Array(imageBytes);}const editablePdfBytes=await generateEditablePdf({templateType,data,headers:stringHeaders,dataObs,headersObs,atividades,donoProcesso,servicosEntrada,servicoSaida,objetivoProcesso,indicadores,imageBytes,pathFilename,history});// Cria um blob e abre o PDF edit√°vel em uma nova aba\nconst blob=new Blob([editablePdfBytes],{type:\"application/pdf\"});const url=URL.createObjectURL(blob);window.open(url,\"_blank\");};// Permite que o parent chame handleSendToBackend\nuseEffect(()=>{if(exportRef){exportRef.current=handleSendToBackend;}},[exportRef,handleSendToBackend]);return/*#__PURE__*/_jsx(\"button\",{className:\"save-button\",onClick:handleSendToBackend,children:\"Guardar Mudan\\xE7as\"});}","map":{"version":3,"names":["React","useEffect","generateEditablePdf","jsx","_jsx","ExportPdfButton","_ref","templateType","data","headers","dataObs","headersObs","atividades","donoProcesso","donoProcessoOriginal","objetivoProcesso","indicadores","pathFilename","fieldNames","exportRef","servicosEntrada","servicoSaida","onSaveSuccess","history","loadCompanyImage","response","fetch","ok","arrayBuffer","console","log","warn","error","getMainTableFormData","formDataObj","forEach","row","rowIdx","rowFields","cell","colIdx","fieldName","concat","handleSendToBackend","stringHeaders","map","h","_h$props","props","children","Array","isArray","join","String","parts","split","filename","pop","folders","imageBytes","Uint8Array","length","editablePdfBytes","title","formData","FormData","append","Blob","type","JSON","stringify","mainTableFormData","indicador","index","indicadores_r1","indicadores_r2","indicadores_r3","method","body","processId","handlePreviewPdf","_h$props2","blob","url","URL","createObjectURL","window","open","current","className","onClick"],"sources":["C:/Users/Ant√≥nio Gon√ßalves/Desktop/Magna-ISO9001-Frontend/src/components/Buttons/exportPdf.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { generateEditablePdf } from \"../../utils/pdfGenerate\";\r\n\r\nexport default function ExportPdfButton({\r\n  templateType = 1,\r\n  data,\r\n  headers,\r\n  dataObs,\r\n  headersObs,\r\n  atividades,\r\n  donoProcesso,\r\n  donoProcessoOriginal,\r\n  objetivoProcesso,\r\n  indicadores,\r\n  pathFilename,\r\n  fieldNames,\r\n  exportRef,\r\n  servicosEntrada,\r\n  servicoSaida,\r\n  onSaveSuccess, // Novo prop para callback ap√≥s guardar\r\n  history = [] // Novo prop para hist√≥rico\r\n}) {\r\n  // Fun√ß√£o para carregar automaticamente a imagem PNG da empresa\r\n  const loadCompanyImage = async () => {\r\n    try {\r\n      const response = await fetch('/c_comenius_cor.png');\r\n      if (response.ok) {\r\n        const arrayBuffer = await response.arrayBuffer();\r\n        console.log(\"‚úÖ Imagem da empresa carregada automaticamente\");\r\n        return arrayBuffer;\r\n      } else {\r\n        console.warn(\"‚ö†Ô∏è Imagem da empresa n√£o encontrada\");\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"‚ùå Erro ao carregar imagem da empresa:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Fun√ß√£o para preparar os dados para envio ao backend\r\n  const getMainTableFormData = () => {\r\n    const formDataObj = {};\r\n    data.forEach((row, rowIdx) => {\r\n      const rowFields = fieldNames[rowIdx] || [];\r\n      row.forEach((cell, colIdx) => {\r\n        const fieldName = rowFields[colIdx] || `table2_r${rowIdx + 2}_c${colIdx + 1}`;\r\n        formDataObj[fieldName] = cell || \"\";\r\n      });\r\n    });\r\n    return formDataObj;\r\n  };\r\n\r\n  // Fun√ß√£o para enviar PDF edit√°vel para o backend\r\n  const handleSendToBackend = async () => {\r\n    console.log(\"üîç DEBUG - pathFilename recebido:\", pathFilename);\r\n    console.log(\"üîç DEBUG - tipo do pathFilename:\", typeof pathFilename);\r\n    console.log(\"üîç DEBUG - pathFilename est√° vazio?\", !pathFilename);\r\n    \r\n    console.log(\"handleSendToBackend chamado com:\");\r\n    console.log(\"templateType:\", templateType);\r\n    console.log(\"servicosEntrada:\", servicosEntrada);\r\n    console.log(\"servicoSaida:\", servicoSaida);\r\n    \r\n    const stringHeaders = headers.map(h =>\r\n      typeof h === \"string\"\r\n        ? h\r\n        : h?.props?.children\r\n          ? Array.isArray(h.props.children)\r\n            ? h.props.children.join('')\r\n            : h.props.children\r\n          : String(h)\r\n    );\r\n\r\n    const parts = pathFilename.split(\"/\");\r\n    const filename = parts.pop();\r\n    const folders = parts;\r\n    \r\n    console.log(\"üîç DEBUG - parts ap√≥s split:\", parts);\r\n    console.log(\"üîç DEBUG - filename:\", filename);\r\n    console.log(\"üîç DEBUG - folders:\", folders);\r\n\r\n    // Carregar automaticamente a imagem PNG da empresa\r\n    let imageBytes = await loadCompanyImage();\r\n    if (imageBytes) {\r\n      imageBytes = new Uint8Array(imageBytes);\r\n      console.log(\"‚úÖ Imagem da empresa carregada:\", imageBytes.length, \"bytes\");\r\n    }\r\n\r\n    console.log(\"üîç DEBUG ExportPdfButton - templateType:\", templateType);\r\n    console.log(\"üîç DEBUG ExportPdfButton - history recebido:\", history);\r\n    console.log(\"üîç DEBUG ExportPdfButton - history length:\", history?.length);\r\n\r\n    // Passe todos os dados e o templateType\r\n    const editablePdfBytes = await generateEditablePdf({\r\n      templateType,\r\n      data,\r\n      headers: stringHeaders,\r\n      dataObs,\r\n      headersObs,\r\n      atividades,\r\n      donoProcesso,\r\n      objetivoProcesso,\r\n      indicadores,\r\n      servicosEntrada,\r\n      servicoSaida,\r\n      title: \"Procedimento\",\r\n      imageBytes,\r\n      pathFilename: pathFilename || \"SemNome/documento.pdf\", // ‚Üê FALLBACK se estiver vazio\r\n      history\r\n    });\r\n    \r\n    console.log(\"üîç DEBUG - pathFilename enviado para generateEditablePdf:\", pathFilename || \"SemNome/documento.pdf\");\r\n    \r\n    const formData = new FormData();\r\n    formData.append(\"file\", new Blob([editablePdfBytes], { type: \"application/pdf\" }), filename);\r\n    formData.append(\"folders\", JSON.stringify(folders));\r\n    formData.append(\"filename\", filename);\r\n    formData.append(\"originalFilename\", pathFilename); \r\n\r\n    // Adiciona os dados din√¢micos ao formData\r\n    if (templateType === 1) {\r\n      const mainTableFormData = getMainTableFormData();\r\n      formData.append(\"mainTableData\", JSON.stringify(mainTableFormData));\r\n      formData.append(\"servicos_entrada\", servicosEntrada || \"\");\r\n      formData.append(\"servico_saida\", servicoSaida || \"\");\r\n      console.log(\"Template 1 - Enviando servicos_entrada:\", servicosEntrada || \"\");\r\n      console.log(\"Template 1 - Enviando servico_saida:\", servicoSaida || \"\");\r\n    } else if (templateType === 2) {\r\n      formData.append(\"atividades\", JSON.stringify(atividades));\r\n      formData.append(\"donoProcesso\", donoProcesso);\r\n      formData.append(\"objetivoProcesso\", objetivoProcesso);\r\n      formData.append(\"servicos_entrada\", servicosEntrada);\r\n      formData.append(\"servico_saida\", servicoSaida);\r\n      \r\n      // Para Template2, sempre tratar indicadores como array e converter para campos individuais\r\n      if (Array.isArray(indicadores)) {\r\n        indicadores.forEach((indicador, index) => {\r\n          formData.append(`indicadores_r${index + 1}`, indicador || \"\");\r\n        });\r\n      } else {\r\n        // Fallback se ainda for objeto\r\n        formData.append(\"indicadores_r1\", indicadores.indicadores_r1 || \"\");\r\n        formData.append(\"indicadores_r2\", indicadores.indicadores_r2 || \"\");\r\n        formData.append(\"indicadores_r3\", indicadores.indicadores_r3 || \"\");\r\n      }\r\n      \r\n      console.log(\"Template 2 - Enviando atividades:\", atividades);\r\n      console.log(\"Template 2 - Enviando indicadores:\", indicadores);\r\n      console.log(\"Template 2 - Enviando servicos_entrada:\", servicosEntrada);\r\n      console.log(\"Template 2 - Enviando servico_saida:\", servicoSaida);\r\n    }\r\n\r\n    await fetch(\"http://192.168.1.219:8080/files/upload-pdf\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    // Se o dono do processo foi alterado (apenas para Template2), atualizar no backend\r\n    if (templateType === 2 && donoProcesso !== donoProcessoOriginal) {\r\n      try {\r\n        console.log(\"Atualizando dono do processo:\", donoProcesso);\r\n        const processId = pathFilename; // Usando o filename como processId\r\n        \r\n        await fetch(\"http://192.168.1.219:8080/files/update-dono-processo\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            processId: processId,\r\n            donoProcesso: donoProcesso\r\n          }),\r\n        });\r\n        \r\n        console.log(\"Dono do processo atualizado com sucesso!\");\r\n      } catch (error) {\r\n        console.error(\"Erro ao atualizar dono do processo:\", error);\r\n      }\r\n    }\r\n\r\n    // Chama o callback para indicar que foi guardado com sucesso\r\n    if (onSaveSuccess) {\r\n      onSaveSuccess();\r\n    }\r\n  };\r\n\r\n  // Fun√ß√£o para pr√©-visualizar o PDF edit√°vel\r\n  const handlePreviewPdf = async () => {\r\n    console.log(\"üîç handlePreviewPdf - pathFilename recebido:\", pathFilename);\r\n    \r\n    const stringHeaders = headers.map(h =>\r\n      typeof h === \"string\"\r\n        ? h\r\n        : h?.props?.children\r\n          ? Array.isArray(h.props.children)\r\n            ? h.props.children.join('')\r\n            : h.props.children\r\n          : String(h)\r\n    );\r\n\r\n    // Carregar automaticamente a imagem PNG da empresa\r\n    let imageBytes = await loadCompanyImage();\r\n    if (imageBytes) {\r\n      imageBytes = new Uint8Array(imageBytes);\r\n    }\r\n\r\n    const editablePdfBytes = await generateEditablePdf({\r\n      templateType,\r\n      data,\r\n      headers: stringHeaders,\r\n      dataObs,\r\n      headersObs,\r\n      atividades,\r\n      donoProcesso,\r\n      servicosEntrada,\r\n      servicoSaida,\r\n      objetivoProcesso,\r\n      indicadores,\r\n      imageBytes,\r\n      pathFilename,\r\n      history\r\n    });\r\n\r\n    // Cria um blob e abre o PDF edit√°vel em uma nova aba\r\n    const blob = new Blob([editablePdfBytes], { type: \"application/pdf\" });\r\n    const url = URL.createObjectURL(blob);\r\n    window.open(url, \"_blank\");\r\n  };\r\n\r\n  // Permite que o parent chame handleSendToBackend\r\n  useEffect(() => {\r\n    if (exportRef) {\r\n      exportRef.current = handleSendToBackend;\r\n    }\r\n  }, [exportRef, handleSendToBackend]);\r\n\r\n  return (\r\n    <button className=\"save-button\" onClick={handleSendToBackend}>\r\n      Guardar Mudan√ßas\r\n    </button>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}